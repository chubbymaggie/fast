// automatically generated by the FlatBuffers compiler, do not modify

package _fast;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Element extends Table {
  public static Element getRootAsElement(ByteBuffer _bb) { return getRootAsElement(_bb, new Element()); }
  public static Element getRootAsElement(ByteBuffer _bb, Element obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Element __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public _fast._Element.Anonymous0 type() { return type(new _fast._Element.Anonymous0()); }
  public _fast._Element.Anonymous0 type(_fast._Element.Anonymous0 obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public String text() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer textAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public int pos() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int length() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public Element child(int j) { return child(new Element(), j); }
  public Element child(Element obj, int j) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int childLength() { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; }
  public String tail() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer tailAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public _fast._Element.Anonymous1 extra() { return extra(new _fast._Element.Anonymous1()); }
  public _fast._Element.Anonymous1 extra(_fast._Element.Anonymous1 obj) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public int line() { int o = __offset(18); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int column() { int o = __offset(20); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public float label() { int o = __offset(22); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public int change() { int o = __offset(24); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createElement(FlatBufferBuilder builder,
      int typeOffset,
      int textOffset,
      int pos,
      int length,
      int childOffset,
      int tailOffset,
      int extraOffset,
      int line,
      int column,
      float label,
      int change) {
    builder.startObject(11);
    Element.addChange(builder, change);
    Element.addLabel(builder, label);
    Element.addColumn(builder, column);
    Element.addLine(builder, line);
    Element.addExtra(builder, extraOffset);
    Element.addTail(builder, tailOffset);
    Element.addChild(builder, childOffset);
    Element.addLength(builder, length);
    Element.addPos(builder, pos);
    Element.addText(builder, textOffset);
    Element.addType(builder, typeOffset);
    return Element.endElement(builder);
  }

  public static void startElement(FlatBufferBuilder builder) { builder.startObject(11); }
  public static void addType(FlatBufferBuilder builder, int typeOffset) { builder.addOffset(0, typeOffset, 0); }
  public static void addText(FlatBufferBuilder builder, int textOffset) { builder.addOffset(1, textOffset, 0); }
  public static void addPos(FlatBufferBuilder builder, int pos) { builder.addInt(2, pos, 0); }
  public static void addLength(FlatBufferBuilder builder, int length) { builder.addInt(3, length, 0); }
  public static void addChild(FlatBufferBuilder builder, int childOffset) { builder.addOffset(4, childOffset, 0); }
  public static int createChildVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startChildVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addTail(FlatBufferBuilder builder, int tailOffset) { builder.addOffset(5, tailOffset, 0); }
  public static void addExtra(FlatBufferBuilder builder, int extraOffset) { builder.addOffset(6, extraOffset, 0); }
  public static void addLine(FlatBufferBuilder builder, int line) { builder.addInt(7, line, 0); }
  public static void addColumn(FlatBufferBuilder builder, int column) { builder.addInt(8, column, 0); }
  public static void addLabel(FlatBufferBuilder builder, float label) { builder.addFloat(9, label, 0.0f); }
  public static void addChange(FlatBufferBuilder builder, int change) { builder.addInt(10, change, 0); }
  public static int endElement(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

