// automatically generated by the FlatBuffers compiler, do not modify

package _fast;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Bugs extends Table {
  public static Bugs getRootAsBugs(ByteBuffer _bb) { return getRootAsBugs(_bb, new Bugs()); }
  public static Bugs getRootAsBugs(ByteBuffer _bb, Bugs obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Bugs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String repository() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer repositoryAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public _fast._Bugs.Bug bug(int j) { return bug(new _fast._Bugs.Bug(), j); }
  public _fast._Bugs.Bug bug(_fast._Bugs.Bug obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int bugLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }

  public static int createBugs(FlatBufferBuilder builder,
      int repositoryOffset,
      int bugOffset) {
    builder.startObject(2);
    Bugs.addBug(builder, bugOffset);
    Bugs.addRepository(builder, repositoryOffset);
    return Bugs.endBugs(builder);
  }

  public static void startBugs(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addRepository(FlatBufferBuilder builder, int repositoryOffset) { builder.addOffset(0, repositoryOffset, 0); }
  public static void addBug(FlatBufferBuilder builder, int bugOffset) { builder.addOffset(1, bugOffset, 0); }
  public static int createBugVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startBugVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endBugs(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

