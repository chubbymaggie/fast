// automatically generated by the FlatBuffers compiler, do not modify

package _fast._Log;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Author extends Table {
  public static Author getRootAsAuthor(ByteBuffer _bb) { return getRootAsAuthor(_bb, new Author()); }
  public static Author getRootAsAuthor(ByteBuffer _bb, Author obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Author __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int id() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public String email() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer emailAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }

  public static int createAuthor(FlatBufferBuilder builder,
      int id,
      int nameOffset,
      int emailOffset) {
    builder.startObject(3);
    Author.addEmail(builder, emailOffset);
    Author.addName(builder, nameOffset);
    Author.addId(builder, id);
    return Author.endAuthor(builder);
  }

  public static void startAuthor(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addId(FlatBufferBuilder builder, int id) { builder.addInt(0, id, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addEmail(FlatBufferBuilder builder, int emailOffset) { builder.addOffset(2, emailOffset, 0); }
  public static int endAuthor(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

