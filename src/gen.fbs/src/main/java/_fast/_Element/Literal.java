// automatically generated by the FlatBuffers compiler, do not modify

package _fast._Element;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Literal extends Table {
  public static Literal getRootAsLiteral(ByteBuffer _bb) { return getRootAsLiteral(_bb, new Literal()); }
  public static Literal getRootAsLiteral(ByteBuffer _bb, Literal obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Literal __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int type() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createLiteral(FlatBufferBuilder builder,
      int type) {
    builder.startObject(1);
    Literal.addType(builder, type);
    return Literal.endLiteral(builder);
  }

  public static void startLiteral(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addType(FlatBufferBuilder builder, int type) { builder.addInt(0, type, 0); }
  public static int endLiteral(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

