// automatically generated by the FlatBuffers compiler, do not modify

package _fast._Element;

public final class Kind {
  private Kind() { }
  public static final int UNIT_KIND = 0;
  public static final int DECL = 1;
  public static final int DECL_STMT = 2;
  public static final int INIT = 3;
  public static final int EXPR = 4;
  public static final int EXPR_STMT = 5;
  public static final int COMMENT = 6;
  public static final int CALL = 7;
  public static final int CONTROL = 8;
  public static final int INCR = 9;
  public static final int NONE = 10;
  public static final int VARIABLE = 11;
  public static final int FUNCTION = 12;
  public static final int FUNCTION_DECL = 13;
  public static final int CONSTRUCTOR = 14;
  public static final int CONSTRUCTOR_DECL = 15;
  public static final int DESTRUCTOR = 16;
  public static final int DESTRUCTOR_DECL = 17;
  public static final int MACRO = 18;
  public static final int SINGLE_MACRO = 19;
  public static final int NULLOPERATOR = 20;
  public static final int ENUM_DEFN = 21;
  public static final int ENUM_DECL = 22;
  public static final int GLOBAL_ATTRIBUTE = 23;
  public static final int PROPERTY_ACCESSOR = 24;
  public static final int PROPERTY_ACCESSOR_DECL = 25;
  public static final int EXPRESSION = 26;
  public static final int CLASS_DEFN = 27;
  public static final int CLASS_DECL = 28;
  public static final int UNION_DEFN = 29;
  public static final int UNION_DECL = 30;
  public static final int STRUCT_DEFN = 31;
  public static final int STRUCT_DECL = 32;
  public static final int INTERFACE_DEFN = 33;
  public static final int INTERFACE_DECL = 34;
  public static final int ACCESS_REGION = 35;
  public static final int USING = 36;
  public static final int OPERATOR_FUNCTION = 37;
  public static final int OPERATOR_FUNCTION_DECL = 38;
  public static final int EVENT = 39;
  public static final int PROPERTY = 40;
  public static final int ANNOTATION_DEFN = 41;
  public static final int GLOBAL_TEMPLATE = 42;
  public static final int UNIT = 43;
  public static final int TART_ELEMENT_TOKEN = 44;
  public static final int NOP = 45;
  public static final int STRING = 46;
  public static final int CHAR = 47;
  public static final int LITERAL = 48;
  public static final int BOOLEAN = 49;
  public static final int NULL = 50;
  public static final int COMPLEX = 51;
  public static final int OPERATOR = 52;
  public static final int MODIFIER = 53;
  public static final int NAME = 54;
  public static final int ONAME = 55;
  public static final int CNAME = 56;
  public static final int TYPE = 57;
  public static final int TYPEPREV = 58;
  public static final int CONDITION = 59;
  public static final int BLOCK = 60;
  public static final int PSEUDO_BLOCK = 61;
  public static final int INDEX = 62;
  public static final int ENUM = 63;
  public static final int ENUM_DECLARATION = 64;
  public static final int IF_STATEMENT = 65;
  public static final int TERNARY = 66;
  public static final int THEN = 67;
  public static final int ELSE = 68;
  public static final int ELSEIF = 69;
  public static final int WHILE_STATEMENT = 70;
  public static final int DO_STATEMENT = 71;
  public static final int FOR_STATEMENT = 72;
  public static final int FOREACH_STATEMENT = 73;
  public static final int FOR_CONTROL = 74;
  public static final int FOR_INITIALIZATION = 75;
  public static final int FOR_CONDITION = 76;
  public static final int FOR_INCREMENT = 77;
  public static final int FOR_LIKE_CONTROL = 78;
  public static final int EXPRESSION_STATEMENT = 79;
  public static final int FUNCTION_CALL = 81;
  public static final int DECLARATION_STATEMENT = 82;
  public static final int DECLARATION = 83;
  public static final int DECLARATION_INITIALIZATION = 84;
  public static final int DECLARATION_RANGE = 85;
  public static final int RANGE = 86;
  public static final int GOTO_STATEMENT = 87;
  public static final int CONTINUE_STATEMENT = 88;
  public static final int BREAK_STATEMENT = 89;
  public static final int LABEL_STATEMENT = 90;
  public static final int LABEL = 91;
  public static final int SWITCH = 92;
  public static final int CASE = 93;
  public static final int DEFAULT = 94;
  public static final int FUNCTION_DEFINITION = 95;
  public static final int FUNCTION_DECLARATION = 96;
  public static final int LAMBDA = 97;
  public static final int FUNCTION_LAMBDA = 98;
  public static final int FUNCTION_SPECIFIER = 99;
  public static final int RETURN_STATEMENT = 100;
  public static final int PARAMETER_LIST = 101;
  public static final int PARAMETER = 102;
  public static final int KRPARAMETER_LIST = 103;
  public static final int KRPARAMETER = 104;
  public static final int ARGUMENT_LIST = 105;
  public static final int ARGUMENT = 106;
  public static final int PSEUDO_PARAMETER_LIST = 107;
  public static final int INDEXER_PARAMETER_LIST = 108;
  public static final int CLASS = 109;
  public static final int CLASS_DECLARATION = 110;
  public static final int STRUCT = 111;
  public static final int STRUCT_DECLARATION = 112;
  public static final int UNION = 113;
  public static final int UNION_DECLARATION = 114;
  public static final int DERIVATION_LIST = 115;
  public static final int PUBLIC_ACCESS = 116;
  public static final int PUBLIC_ACCESS_DEFAULT = 117;
  public static final int PRIVATE_ACCESS = 118;
  public static final int PRIVATE_ACCESS_DEFAULT = 119;
  public static final int PROTECTED_ACCESS = 120;
  public static final int PROTECTED_ACCESS_DEFAULT = 121;
  public static final int MEMBER_INIT_LIST = 122;
  public static final int MEMBER_INITIALIZATION_LIST = 123;
  public static final int MEMBER_INITIALIZATION = 124;
  public static final int CONSTRUCTOR_DEFINITION = 125;
  public static final int CONSTRUCTOR_DECLARATION = 126;
  public static final int DESTRUCTOR_DEFINITION = 127;
  public static final int DESTRUCTOR_DECLARATION = 128;
  public static final int FRIEND = 129;
  public static final int CLASS_SPECIFIER = 130;
  public static final int TRY_BLOCK = 131;
  public static final int CATCH_BLOCK = 132;
  public static final int FINALLY_BLOCK = 133;
  public static final int THROW_STATEMENT = 134;
  public static final int THROW_SPECIFIER = 135;
  public static final int THROW_SPECIFIER_JAVA = 136;
  public static final int TEMPLATE = 137;
  public static final int GENERIC_ARGUMENT = 138;
  public static final int GENERIC_ARGUMENT_LIST = 139;
  public static final int TEMPLATE_PARAMETER = 140;
  public static final int TEMPLATE_PARAMETER_LIST = 141;
  public static final int GENERIC_PARAMETER = 142;
  public static final int GENERIC_PARAMETER_LIST = 143;
  public static final int TYPEDEF = 144;
  public static final int ASM = 145;
  public static final int MACRO_CALL = 146;
  public static final int SIZEOF_CALL = 147;
  public static final int EXTERN = 148;
  public static final int NAMESPACE = 149;
  public static final int USING_DIRECTIVE = 150;
  public static final int DIRECTIVE = 151;
  public static final int ATOMIC = 152;
  public static final int STATIC_ASSERT_STATEMENT = 153;
  public static final int GENERIC_SELECTION = 154;
  public static final int GENERIC_SELECTOR = 155;
  public static final int GENERIC_ASSOCIATION_LIST = 156;
  public static final int GENERIC_ASSOCIATION = 157;
  public static final int ALIGNAS = 158;
  public static final int DECLTYPE = 159;
  public static final int CAPTURE = 160;
  public static final int LAMBDA_CAPTURE = 161;
  public static final int NOEXCEPT = 162;
  public static final int TYPENAME = 163;
  public static final int ALIGNOF = 164;
  public static final int TYPEID = 165;
  public static final int SIZEOF_PACK = 166;
  public static final int ENUM_CLASS = 167;
  public static final int ENUM_CLASS_DECLARATION = 168;
  public static final int REF_QUALIFIER = 171;
  public static final int SIGNAL_ACCESS = 172;
  public static final int FOREVER_STATEMENT = 173;
  public static final int EMIT_STATEMENT = 174;
  public static final int CPP_DIRECTIVE = 175;
  public static final int CPP_FILENAME = 176;
  public static final int FILE = 177;
  public static final int NUMBER = 178;
  public static final int CPP_NUMBER = 179;
  public static final int CPP_LITERAL = 180;
  public static final int CPP_MACRO_DEFN = 181;
  public static final int CPP_MACRO_VALUE = 182;
  public static final int ERROR = 183;
  public static final int CPP_ERROR = 184;
  public static final int CPP_WARNING = 185;
  public static final int CPP_PRAGMA = 186;
  public static final int CPP_INCLUDE = 187;
  public static final int CPP_DEFINE = 188;
  public static final int CPP_UNDEF = 189;
  public static final int CPP_LINE = 190;
  public static final int CPP_IF = 191;
  public static final int CPP_IFDEF = 192;
  public static final int CPP_IFNDEF = 193;
  public static final int CPP_THEN = 194;
  public static final int CPP_ELSE = 195;
  public static final int CPP_ELIF = 196;
  public static final int CPP_EMPTY = 197;
  public static final int CPP_REGION = 198;
  public static final int CPP_ENDREGION = 199;
  public static final int USING_STMT = 200;
  public static final int ESCAPE = 201;
  public static final int VALUE = 202;
  public static final int CPP_IMPORT = 203;
  public static final int CPP_ENDIF = 204;
  public static final int MARKER = 205;
  public static final int ERROR_PARSE = 206;
  public static final int ERROR_MODE = 207;
  public static final int IMPLEMENTS = 208;
  public static final int EXTENDS = 209;
  public static final int IMPORT = 210;
  public static final int PACKAGE = 211;
  public static final int ASSERT_STATEMENT = 212;
  public static final int INTERFACE = 213;
  public static final int INTERFACE_DECLARATION = 214;
  public static final int SYNCHRONIZED_STATEMENT = 215;
  public static final int ANNOTATION = 216;
  public static final int STATIC_BLOCK = 218;
  public static final int CHECKED_STATEMENT = 219;
  public static final int UNCHECKED_STATEMENT = 220;
  public static final int ATTRIBUTE = 221;
  public static final int TARGET = 222;
  public static final int UNSAFE_STATEMENT = 223;
  public static final int LOCK_STATEMENT = 224;
  public static final int FIXED_STATEMENT = 225;
  public static final int TYPEOF = 226;
  public static final int USING_STATEMENT = 227;
  public static final int FUNCTION_DELEGATE = 228;
  public static final int CONSTRAINT = 230;
  public static final int LINQ = 231;
  public static final int FROM = 232;
  public static final int WHERE = 233;
  public static final int SELECT = 234;
  public static final int LET = 235;
  public static final int ORDERBY = 236;
  public static final int JOIN = 237;
  public static final int GROUP = 238;
  public static final int IN = 239;
  public static final int ON = 240;
  public static final int EQUALS = 241;
  public static final int BY = 242;
  public static final int INTO = 243;
  public static final int EMPTY = 244;
  public static final int EMPTY_STMT = 245;
  public static final int RECEIVER = 246;
  public static final int MESSAGE = 247;
  public static final int SELECTOR = 248;
  public static final int PROTOCOL_LIST = 249;
  public static final int CATEGORY = 250;
  public static final int PROTOCOL = 251;
  public static final int REQUIRED_DEFAULT = 252;
  public static final int REQUIRED = 253;
  public static final int OPTIONAL = 254;
  public static final int ATTRIBUTE_LIST = 256;
  public static final int SYNTHESIZE = 257;
  public static final int DYNAMIC = 258;
  public static final int ENCODE = 259;
  public static final int AUTORELEASEPOOL = 260;
  public static final int COMPATIBILITY_ALIAS = 261;
  public static final int NIL = 262;
  public static final int CLASS_INTERFACE = 263;
  public static final int CLASS_IMPLEMENTATION = 264;
  public static final int PROTOCOL_DECLARATION = 265;
  public static final int CAST = 266;
  public static final int CONST_CAST = 267;
  public static final int DYNAMIC_CAST = 268;
  public static final int REINTERPRET_CAST = 269;
  public static final int STATIC_CAST = 270;
  public static final int POSITION = 271;
  public static final int CUDA_ARGUMENT_LIST = 272;
  public static final int OMP_DIRECTIVE = 273;
  public static final int OMP_NAME = 274;
  public static final int OMP_CLAUSE = 275;
  public static final int OMP_ARGUMENT_LIST = 276;
  public static final int OMP_ARGUMENT = 277;
  public static final int OMP_EXPRESSION = 278;
  public static final int END_ELEMENT_TOKEN = 279;
  public static final int MAIN = 280;
  public static final int BREAK = 281;
  public static final int CONTINUE = 282;
  public static final int WHILE = 283;
  public static final int DO = 284;
  public static final int FOR = 285;
  public static final int IF = 286;
  public static final int GOTO = 293;
  public static final int VISUAL_CXX_ASM = 295;
  public static final int SIZEOF = 296;
  public static final int AUTO = 298;
  public static final int REGISTER = 299;
  public static final int RESTRICT = 300;
  public static final int IMAGINARY = 304;
  public static final int NORETURN = 305;
  public static final int STATIC_ASSERT = 306;
  public static final int CRESTRICT = 307;
  public static final int CXX_TRY = 308;
  public static final int CXX_CATCH = 309;
  public static final int CXX_CLASS = 310;
  public static final int CONSTEXPR = 311;
  public static final int THREAD_LOCAL = 313;
  public static final int NULLPTR = 314;
  public static final int VOID = 326;
  public static final int RETURN = 327;
  public static final int INCLUDE = 328;
  public static final int DEFINE = 329;
  public static final int ELIF = 330;
  public static final int ENDIF = 331;
  public static final int ERRORPREC = 332;
  public static final int WARNING = 333;
  public static final int IFDEF = 334;
  public static final int IFNDEF = 335;
  public static final int LINE = 336;
  public static final int PRAGMA = 337;
  public static final int UNDEF = 338;
  public static final int INLINE = 339;
  public static final int MACRO_TYPE_NAME = 340;
  public static final int MACRO_CASE = 341;
  public static final int MACRO_LABEL = 342;
  public static final int SPECIFIER = 344;
  public static final int TRY = 345;
  public static final int CATCH = 346;
  public static final int THROW = 347;
  public static final int THROWS = 348;
  public static final int PUBLIC = 350;
  public static final int PRIVATE = 351;
  public static final int PROTECTED = 352;
  public static final int VIRTUAL = 353;
  public static final int EXPLICIT = 356;
  public static final int FOREVER = 357;
  public static final int SIGNAL = 358;
  public static final int EMIT = 359;
  public static final int NEW = 363;
  public static final int DELETE = 364;
  public static final int STATIC = 365;
  public static final int CONST = 366;
  public static final int MUTABLE = 367;
  public static final int VOLATILE = 368;
  public static final int TRANSIENT = 369;
  public static final int FINALLY = 372;
  public static final int FINAL = 376;
  public static final int ABSTRACT = 377;
  public static final int SUPER = 378;
  public static final int SYNCHRONIZED = 379;
  public static final int NATIVE = 380;
  public static final int STRICTFP = 381;
  public static final int NULLLITERAL = 382;
  public static final int ASSERT = 383;
  public static final int FOREACH = 384;
  public static final int REF = 385;
  public static final int OUT = 386;
  public static final int LOCK = 388;
  public static final int IS = 389;
  public static final int INTERNAL = 390;
  public static final int SEALED = 391;
  public static final int OVERRIDE = 392;
  public static final int IMPLICIT = 393;
  public static final int STACKALLOC = 394;
  public static final int AS = 395;
  public static final int DELEGATE = 396;
  public static final int FIXED = 397;
  public static final int CHECKED = 398;
  public static final int UNCHECKED = 399;
  public static final int REGION = 400;
  public static final int ENDREGION = 401;
  public static final int UNSAFE = 402;
  public static final int READONLY = 403;
  public static final int GET = 404;
  public static final int SET = 405;
  public static final int ADD = 406;
  public static final int REMOVE = 407;
  public static final int YIELD = 408;
  public static final int PARTIAL = 409;
  public static final int AWAIT = 410;
  public static final int ASYNC = 412;
  public static final int THIS = 413;
  public static final int PARAMS = 414;
  public static final int ALIAS = 416;
  public static final int ASCENDING = 422;
  public static final int DESCENDING = 423;
  public static final int ATINTERFACE = 430;
  public static final int ATIMPLEMENTATION = 431;
  public static final int ATEND = 432;
  public static final int ATPROTOCOL = 433;
  public static final int ATREQUIRED = 434;
  public static final int ATOPTIONAL = 435;
  public static final int ATCLASS = 441;
  public static final int WEAK = 443;
  public static final int STRONG = 444;
  public static final int OMP_OMP = 448;
  public static final int SPECIAL_CHARS = 449;

  public static final String[] names = { "UNIT_KIND", "DECL", "DECL_STMT", "INIT", "EXPR", "EXPR_STMT", "COMMENT", "CALL", "CONTROL", "INCR", "NONE", "VARIABLE", "FUNCTION", "FUNCTION_DECL", "CONSTRUCTOR", "CONSTRUCTOR_DECL", "DESTRUCTOR", "DESTRUCTOR_DECL", "MACRO", "SINGLE_MACRO", "NULLOPERATOR", "ENUM_DEFN", "ENUM_DECL", "GLOBAL_ATTRIBUTE", "PROPERTY_ACCESSOR", "PROPERTY_ACCESSOR_DECL", "EXPRESSION", "CLASS_DEFN", "CLASS_DECL", "UNION_DEFN", "UNION_DECL", "STRUCT_DEFN", "STRUCT_DECL", "INTERFACE_DEFN", "INTERFACE_DECL", "ACCESS_REGION", "USING", "OPERATOR_FUNCTION", "OPERATOR_FUNCTION_DECL", "EVENT", "PROPERTY", "ANNOTATION_DEFN", "GLOBAL_TEMPLATE", "UNIT", "TART_ELEMENT_TOKEN", "NOP", "STRING", "CHAR", "LITERAL", "BOOLEAN", "NULL", "COMPLEX", "OPERATOR", "MODIFIER", "NAME", "ONAME", "CNAME", "TYPE", "TYPEPREV", "CONDITION", "BLOCK", "PSEUDO_BLOCK", "INDEX", "ENUM", "ENUM_DECLARATION", "IF_STATEMENT", "TERNARY", "THEN", "ELSE", "ELSEIF", "WHILE_STATEMENT", "DO_STATEMENT", "FOR_STATEMENT", "FOREACH_STATEMENT", "FOR_CONTROL", "FOR_INITIALIZATION", "FOR_CONDITION", "FOR_INCREMENT", "FOR_LIKE_CONTROL", "EXPRESSION_STATEMENT", "", "FUNCTION_CALL", "DECLARATION_STATEMENT", "DECLARATION", "DECLARATION_INITIALIZATION", "DECLARATION_RANGE", "RANGE", "GOTO_STATEMENT", "CONTINUE_STATEMENT", "BREAK_STATEMENT", "LABEL_STATEMENT", "LABEL", "SWITCH", "CASE", "DEFAULT", "FUNCTION_DEFINITION", "FUNCTION_DECLARATION", "LAMBDA", "FUNCTION_LAMBDA", "FUNCTION_SPECIFIER", "RETURN_STATEMENT", "PARAMETER_LIST", "PARAMETER", "KRPARAMETER_LIST", "KRPARAMETER", "ARGUMENT_LIST", "ARGUMENT", "PSEUDO_PARAMETER_LIST", "INDEXER_PARAMETER_LIST", "CLASS", "CLASS_DECLARATION", "STRUCT", "STRUCT_DECLARATION", "UNION", "UNION_DECLARATION", "DERIVATION_LIST", "PUBLIC_ACCESS", "PUBLIC_ACCESS_DEFAULT", "PRIVATE_ACCESS", "PRIVATE_ACCESS_DEFAULT", "PROTECTED_ACCESS", "PROTECTED_ACCESS_DEFAULT", "MEMBER_INIT_LIST", "MEMBER_INITIALIZATION_LIST", "MEMBER_INITIALIZATION", "CONSTRUCTOR_DEFINITION", "CONSTRUCTOR_DECLARATION", "DESTRUCTOR_DEFINITION", "DESTRUCTOR_DECLARATION", "FRIEND", "CLASS_SPECIFIER", "TRY_BLOCK", "CATCH_BLOCK", "FINALLY_BLOCK", "THROW_STATEMENT", "THROW_SPECIFIER", "THROW_SPECIFIER_JAVA", "TEMPLATE", "GENERIC_ARGUMENT", "GENERIC_ARGUMENT_LIST", "TEMPLATE_PARAMETER", "TEMPLATE_PARAMETER_LIST", "GENERIC_PARAMETER", "GENERIC_PARAMETER_LIST", "TYPEDEF", "ASM", "MACRO_CALL", "SIZEOF_CALL", "EXTERN", "NAMESPACE", "USING_DIRECTIVE", "DIRECTIVE", "ATOMIC", "STATIC_ASSERT_STATEMENT", "GENERIC_SELECTION", "GENERIC_SELECTOR", "GENERIC_ASSOCIATION_LIST", "GENERIC_ASSOCIATION", "ALIGNAS", "DECLTYPE", "CAPTURE", "LAMBDA_CAPTURE", "NOEXCEPT", "TYPENAME", "ALIGNOF", "TYPEID", "SIZEOF_PACK", "ENUM_CLASS", "ENUM_CLASS_DECLARATION", "", "", "REF_QUALIFIER", "SIGNAL_ACCESS", "FOREVER_STATEMENT", "EMIT_STATEMENT", "CPP_DIRECTIVE", "CPP_FILENAME", "FILE", "NUMBER", "CPP_NUMBER", "CPP_LITERAL", "CPP_MACRO_DEFN", "CPP_MACRO_VALUE", "ERROR", "CPP_ERROR", "CPP_WARNING", "CPP_PRAGMA", "CPP_INCLUDE", "CPP_DEFINE", "CPP_UNDEF", "CPP_LINE", "CPP_IF", "CPP_IFDEF", "CPP_IFNDEF", "CPP_THEN", "CPP_ELSE", "CPP_ELIF", "CPP_EMPTY", "CPP_REGION", "CPP_ENDREGION", "USING_STMT", "ESCAPE", "VALUE", "CPP_IMPORT", "CPP_ENDIF", "MARKER", "ERROR_PARSE", "ERROR_MODE", "IMPLEMENTS", "EXTENDS", "IMPORT", "PACKAGE", "ASSERT_STATEMENT", "INTERFACE", "INTERFACE_DECLARATION", "SYNCHRONIZED_STATEMENT", "ANNOTATION", "", "STATIC_BLOCK", "CHECKED_STATEMENT", "UNCHECKED_STATEMENT", "ATTRIBUTE", "TARGET", "UNSAFE_STATEMENT", "LOCK_STATEMENT", "FIXED_STATEMENT", "TYPEOF", "USING_STATEMENT", "FUNCTION_DELEGATE", "", "CONSTRAINT", "LINQ", "FROM", "WHERE", "SELECT", "LET", "ORDERBY", "JOIN", "GROUP", "IN", "ON", "EQUALS", "BY", "INTO", "EMPTY", "EMPTY_STMT", "RECEIVER", "MESSAGE", "SELECTOR", "PROTOCOL_LIST", "CATEGORY", "PROTOCOL", "REQUIRED_DEFAULT", "REQUIRED", "OPTIONAL", "", "ATTRIBUTE_LIST", "SYNTHESIZE", "DYNAMIC", "ENCODE", "AUTORELEASEPOOL", "COMPATIBILITY_ALIAS", "NIL", "CLASS_INTERFACE", "CLASS_IMPLEMENTATION", "PROTOCOL_DECLARATION", "CAST", "CONST_CAST", "DYNAMIC_CAST", "REINTERPRET_CAST", "STATIC_CAST", "POSITION", "CUDA_ARGUMENT_LIST", "OMP_DIRECTIVE", "OMP_NAME", "OMP_CLAUSE", "OMP_ARGUMENT_LIST", "OMP_ARGUMENT", "OMP_EXPRESSION", "END_ELEMENT_TOKEN", "MAIN", "BREAK", "CONTINUE", "WHILE", "DO", "FOR", "IF", "", "", "", "", "", "", "GOTO", "", "VISUAL_CXX_ASM", "SIZEOF", "", "AUTO", "REGISTER", "RESTRICT", "", "", "", "IMAGINARY", "NORETURN", "STATIC_ASSERT", "CRESTRICT", "CXX_TRY", "CXX_CATCH", "CXX_CLASS", "CONSTEXPR", "", "THREAD_LOCAL", "NULLPTR", "", "", "", "", "", "", "", "", "", "", "", "VOID", "RETURN", "INCLUDE", "DEFINE", "ELIF", "ENDIF", "ERRORPREC", "WARNING", "IFDEF", "IFNDEF", "LINE", "PRAGMA", "UNDEF", "INLINE", "MACRO_TYPE_NAME", "MACRO_CASE", "MACRO_LABEL", "", "SPECIFIER", "TRY", "CATCH", "THROW", "THROWS", "", "PUBLIC", "PRIVATE", "PROTECTED", "VIRTUAL", "", "", "EXPLICIT", "FOREVER", "SIGNAL", "EMIT", "", "", "", "NEW", "DELETE", "STATIC", "CONST", "MUTABLE", "VOLATILE", "TRANSIENT", "", "", "FINALLY", "", "", "", "FINAL", "ABSTRACT", "SUPER", "SYNCHRONIZED", "NATIVE", "STRICTFP", "NULLLITERAL", "ASSERT", "FOREACH", "REF", "OUT", "", "LOCK", "IS", "INTERNAL", "SEALED", "OVERRIDE", "IMPLICIT", "STACKALLOC", "AS", "DELEGATE", "FIXED", "CHECKED", "UNCHECKED", "REGION", "ENDREGION", "UNSAFE", "READONLY", "GET", "SET", "ADD", "REMOVE", "YIELD", "PARTIAL", "AWAIT", "", "ASYNC", "THIS", "PARAMS", "", "ALIAS", "", "", "", "", "", "ASCENDING", "DESCENDING", "", "", "", "", "", "", "ATINTERFACE", "ATIMPLEMENTATION", "ATEND", "ATPROTOCOL", "ATREQUIRED", "ATOPTIONAL", "", "", "", "", "", "ATCLASS", "", "WEAK", "STRONG", "", "", "", "OMP_OMP", "SPECIAL_CHARS", };

  public static String name(int e) { return names[e]; }
}

