pair {
  project: "fpml"
  left {
    right_line: 1
    right_column: 63
    old_code {
      child {
        kind: EXPR_STMT
        tail: "\n"
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "$"
          }
          child {
            kind: OPERATOR
            text: "+"
          }
          child {
            kind: COMMENT
            text: "// Copyright (C),2006-2007 HandCoded Software Ltd."
            tail: "\n"
          }
          child {
            kind: NAME
            text: "$"
          }
          child {
            kind: OPERATOR
            text: "+"
            tail: " "
          }
          child {
            kind: OPERATOR
            text: "*"
            tail: " @"
          }
          child {
            kind: NAME
            text: "since"
            tail: "\t"
          }
          child {
            kind: NAME
            text: "TFP"
            tail: " "
          }
          child {
            kind: LITERAL
            text: "1.1"
            tail: "\n"
            literal {
            }
          }
          child {
            kind: OPERATOR
            text: "\\"
            tail: " "
          }
          child {
            kind: NAME
            text: "No"
            tail: " "
          }
          child {
            kind: NAME
            text: "newline"
            tail: " "
          }
          child {
            kind: NAME
            text: "at"
            tail: " "
          }
          child {
            kind: NAME
            text: "end"
            tail: " "
          }
          child {
            kind: NAME
            text: "of"
            tail: " "
          }
          child {
            kind: NAME
            text: "file"
          }
        }
      }
      unit {
        revision: "0.9.5"
        language: JAVA
      }
    }
    new_code {
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: NAME
            text: "$"
          }
          child {
            kind: OPERATOR
            text: "+"
          }
        }
      }
      child {
        kind: COMMENT
        text: "// Copyright (C),2006-2007 HandCoded Software Ltd."
        tail: "\n"
      }
      child {
        kind: COMMENT
        text: "// All rights reserved."
        tail: "\n"
      }
      child {
        kind: COMMENT
        text: "//"
        tail: "\n"
      }
      child {
        kind: COMMENT
        text: "// This software is licensed in accordance with the terms of the \'Open Source"
        tail: "\n"
      }
      child {
        kind: COMMENT
        text: "// License (OSL) Version 3.0\'. Please see \'license.txt\' for the details."
        tail: "\n"
      }
      child {
        kind: COMMENT
        text: "//"
        tail: "\n"
      }
      child {
        kind: COMMENT
        text: "// HANDCODED SOFTWARE LTD MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE"
        tail: "\n"
      }
      child {
        kind: COMMENT
        text: "// SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT"
        tail: "\n"
      }
      child {
        kind: COMMENT
        text: "// LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A"
        tail: "\n"
      }
      child {
        kind: COMMENT
        text: "// PARTICULAR PURPOSE, OR NON-INFRINGEMENT. HANDCODED SOFTWARE LTD SHALL NOT BE"
        tail: "\n"
      }
      child {
        kind: COMMENT
        text: "// LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING"
        tail: "\n"
      }
      child {
        kind: COMMENT
        text: "// OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES."
        tail: "\n\n"
      }
      child {
        kind: PACKAGE
        text: "package "
        tail: "\n\n"
        child {
          kind: NAME
          tail: ";"
          child {
            kind: NAME
            text: "com"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "handcoded"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "fpml"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "meta"
          }
        }
      }
      child {
        kind: IMPORT
        text: "import "
        tail: "\n\n"
        child {
          kind: NAME
          tail: ";"
          child {
            kind: NAME
            text: "org"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "w3c"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "dom"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "Document"
          }
        }
      }
      child {
        kind: IMPORT
        text: "import "
        tail: "\n"
        child {
          kind: NAME
          tail: ";"
          child {
            kind: NAME
            text: "com"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "handcoded"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "meta"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "DefaultSchemaRecogniser"
          }
        }
      }
      child {
        kind: IMPORT
        text: "import "
        tail: "\n\n"
        child {
          kind: NAME
          tail: ";"
          child {
            kind: NAME
            text: "com"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "handcoded"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "meta"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "SchemaRelease"
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n * The &lt;CODE&gt;FpMLSchemaRecogniser&lt;/CODE&gt; extends the behaviour of the\n * &lt;CODE&gt;DefaultSchemaRecogniser&lt;/CODE&gt; to look for a \'version\' attribute\n * containing an appropriate version number.\n *\n * @author \tBitWise\n * @version\t$Id\n$+ * @since\tTFP 1.1\n */"
        tail: "\n"
      }
      child {
        kind: CLASS
        tail: "\n"
        child {
          kind: SPECIFIER
          text: "public"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "final"
          tail: " class "
        }
        child {
          kind: NAME
          text: "FpMLSchemaRecogniser"
          tail: " "
        }
        child {
          kind: SUPER
          tail: "\n"
          child {
            kind: EXTENDS
            text: "extends "
            child {
              kind: NAME
              text: "DefaultSchemaRecogniser"
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t"
          child {
            kind: COMMENT
            text: "/**\n\t * Constructs a &lt;CODE&gt;FpMLSchemaRecogniser&lt;/CODE&gt; instance.\n\t * @since\tTFP 1.1\n\t */"
            tail: "\n\t"
          }
          child {
            kind: CONSTRUCTOR
            tail: "\n\n\t"
            child {
              kind: SPECIFIER
              text: "public"
              tail: " "
            }
            child {
              kind: NAME
              text: "FpMLSchemaRecogniser"
              tail: " "
            }
            child {
              kind: PARAMETER_LIST
              text: "()"
              tail: "\n\t"
            }
            child {
              kind: BLOCK
              text: "{ }"
            }
          }
          child {
            kind: COMMENT
            text: "/**\n\t * {@inheritDoc}\n\t * &lt;P&gt;\n\t * Also checks that the FpML version attribute matches the &lt;CODE&gt;SchemaRelease&lt;/CODE&gt;\n\t * instance.\n\t *\n\t * @since\tTFP 1.1\n\t */"
            tail: "\n\t"
          }
          child {
            kind: FUNCTION
            tail: "\n}"
            child {
              kind: SPECIFIER
              text: "public"
              tail: " "
            }
            child {
              kind: TYPE
              tail: " "
              child {
                kind: NAME
                text: "boolean"
              }
            }
            child {
              kind: NAME
              text: "recognises"
              tail: " "
            }
            child {
              kind: PARAMETER_LIST
              text: "("
              tail: "\n\t"
              child {
                kind: PARAMETER
                tail: ", "
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "SchemaRelease"
                    }
                  }
                  child {
                    kind: NAME
                    text: "release"
                  }
                }
              }
              child {
                kind: PARAMETER
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "Document"
                    }
                  }
                  child {
                    kind: NAME
                    text: "document"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t"
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "super"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "recognises"
                        }
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "release"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "document"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t"
                    child {
                      kind: DECL_STMT
                      tail: "\n\n\t\t\t"
                      child {
                        kind: DECL
                        tail: ";"
                        child {
                          kind: TYPE
                          tail: " "
                          child {
                            kind: NAME
                            text: "int"
                          }
                        }
                        child {
                          kind: NAME
                          text: "majorVersion"
                          tail: " "
                        }
                        child {
                          kind: INIT
                          text: "= "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "Integer"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "parseInt"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        child {
                                          kind: NAME
                                          text: "release"
                                        }
                                        child {
                                          kind: OPERATOR
                                          text: "."
                                        }
                                        child {
                                          kind: NAME
                                          text: "getVersion"
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "()"
                                      }
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "."
                                    }
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "split"
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: LITERAL
                                              text: "\"-\""
                                              literal {
                                                type: string_type
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: INDEX
                                      text: "["
                                      child {
                                        kind: EXPR
                                        tail: "]"
                                        child {
                                          kind: LITERAL
                                          text: "0"
                                          literal {
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: IF
                      text: "if "
                      tail: "\n\t\t}"
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: NAME
                            text: "majorVersion"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "&lt;="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "4"
                            literal {
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: " "
                        tail: "\n\t\t\t"
                        child {
                          kind: BLOCK
                          text: "{\n\t\t\t\t"
                          child {
                            kind: IF
                            text: "if "
                            tail: "\n\t\t\t}"
                            child {
                              kind: CONDITION
                              text: "("
                              child {
                                kind: EXPR
                                tail: ")"
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    tail: " "
                                    child {
                                      kind: NAME
                                      text: "document"
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "."
                                    }
                                    child {
                                      kind: NAME
                                      text: "getDocumentElement"
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "()"
                                  }
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "getAttribute"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: LITERAL
                                          text: "\"version\""
                                          literal {
                                            type: string_type
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "equals"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            tail: " "
                                            child {
                                              kind: NAME
                                              text: "release"
                                            }
                                            child {
                                              kind: OPERATOR
                                              text: "."
                                            }
                                            child {
                                              kind: NAME
                                              text: "getVersion"
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "()"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            child {
                              kind: THEN
                              text: "\n\t\t\t\t\t"
                              child {
                                kind: BLOCK
                                child {
                                  kind: RETURN
                                  text: "return "
                                  child {
                                    kind: EXPR
                                    tail: ";"
                                    child {
                                      kind: OPERATOR
                                      text: "("
                                    }
                                    child {
                                      kind: LITERAL
                                      text: "true"
                                      literal {
                                        type: boolean_type
                                      }
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: ")"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: ELSE
                        text: "else "
                        child {
                          kind: BLOCK
                          text: "{\n\t\t\t\t"
                          child {
                            kind: IF
                            text: "if "
                            tail: "\n\t\t\t}"
                            child {
                              kind: CONDITION
                              text: "("
                              child {
                                kind: EXPR
                                tail: ")"
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    tail: " "
                                    child {
                                      kind: NAME
                                      text: "document"
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "."
                                    }
                                    child {
                                      kind: NAME
                                      text: "getDocumentElement"
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "()"
                                  }
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "getAttribute"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: LITERAL
                                          text: "\"fpmlVersion\""
                                          literal {
                                            type: string_type
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "equals"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            tail: " "
                                            child {
                                              kind: NAME
                                              text: "release"
                                            }
                                            child {
                                              kind: OPERATOR
                                              text: "."
                                            }
                                            child {
                                              kind: NAME
                                              text: "getVersion"
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "()"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            child {
                              kind: THEN
                              text: "\n\t\t\t\t\t"
                              child {
                                kind: BLOCK
                                child {
                                  kind: RETURN
                                  text: "return "
                                  child {
                                    kind: EXPR
                                    tail: ";"
                                    child {
                                      kind: OPERATOR
                                      text: "("
                                    }
                                    child {
                                      kind: LITERAL
                                      text: "true"
                                      literal {
                                        type: boolean_type
                                      }
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: ")"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: RETURN
                text: "return "
                tail: "\n\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: OPERATOR
                    text: "("
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: ")"
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: EXPR_STMT
        tail: "\n"
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "\\"
            tail: " "
          }
          child {
            kind: NAME
            text: "No"
            tail: " "
          }
          child {
            kind: NAME
            text: "newline"
            tail: " "
          }
          child {
            kind: NAME
            text: "at"
            tail: " "
          }
          child {
            kind: NAME
            text: "end"
            tail: " "
          }
          child {
            kind: NAME
            text: "of"
            tail: " "
          }
          child {
            kind: NAME
            text: "file"
          }
        }
      }
      unit {
        revision: "0.9.5"
        language: JAVA
      }
    }
  }
  right {
    left_line: -82
    left_column: 2222
    right_line: 431
    right_column: 1704
    old_code {
      text: "@ "
      child {
        kind: NAMESPACE
        text: "namespace "
        tail: ")"
        child {
          kind: NAME
          tail: "\nreturn ("
          child {
            kind: NAME
            text: "HandCoded"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "FpML"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "Validation"
          }
        }
        child {
          kind: NAME
          text: "result"
        }
      }
      child {
        kind: EMPTY_STMT
        text: ";"
        tail: "\n}\n"
      }
      child {
        kind: IF
        text: "#"
        tail: "\n\t"
        child {
          kind: DIRECTIVE
          text: "if"
          tail: " "
        }
        child {
          kind: EXPR
          child {
            kind: LITERAL
            text: "false"
            literal {
              type: boolean_type
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures that if forwardPoints exists then\n\t * spotRate should also exist.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\tpublic "
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE02"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-2\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"ExchangeRate\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"exchangeRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "forward"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"forwardPoints\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "spot"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"spotRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "forward"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "spot"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"If forwardPoints exists then spotRate should also exist.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures that if both forwardPoints and spotRate\n\t * exist then rate equals \'spotRate + forwardRate\'.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE03"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-3\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"ExchangeRate\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"exchangeRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "forward"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"forwardPoints\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "spot"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"spotRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"rate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "forward"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "spot"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "toDecimal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "equals"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDecimal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "spot"
                                    }
                                  }
                                }
                              }
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "add"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "toDecimal"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "forward"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: "\n\t\t\t\t\t\t"
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Sum of spotRate and forwardPoints does not equal rate.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// 4 5 6"
        tail: "\n\n\t"
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures sideRates/baseCurrency must be neither\n\t * quotedCurrencyPair/currency1 nor quotedCurrencyPair/currency2.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE04"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-4\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"ExchangeRate\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"exchangeRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "baseCcy"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"baseCurrency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"quotedCurrencyPair\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"quotedCurrencyPair\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "baseCcy"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t}"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "baseCcy"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "baseCcy"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t\t\t"
                    child {
                      kind: EXPR_STMT
                      tail: "\n\n\t\t\t\t\t\t"
                      child {
                        kind: EXPR
                        tail: ";"
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            tail: " "
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "error"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              tail: ", "
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"305\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                            }
                            child {
                              kind: ARGUMENT
                              tail: ",\n\t\t\t\t\t\t\t\t"
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "context"
                                }
                              }
                            }
                            child {
                              kind: ARGUMENT
                              tail: ",\n\t\t\t\t\t\t\t\t"
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"The side rate base currency must not be one of the trade currencies.\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                            }
                            child {
                              kind: ARGUMENT
                              tail: ", "
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "getName"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "()"
                                  }
                                }
                              }
                            }
                            child {
                              kind: ARGUMENT
                              tail: ")"
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    tail: " "
                                    child {
                                      kind: NAME
                                      text: "Types"
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "."
                                    }
                                    child {
                                      kind: NAME
                                      text: "toString"
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "baseCcy"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: EXPR_STMT
                      tail: "\n\t\t\t\t\t}"
                      child {
                        kind: EXPR
                        tail: ";"
                        child {
                          kind: NAME
                          text: "result"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "="
                          tail: " "
                        }
                        child {
                          kind: LITERAL
                          text: "false"
                          literal {
                            type: boolean_type
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures sideRates/currency1SideRate/currency\n\t * must be the same as quotedCurrencyPair/currency1.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE05"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-5\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"ExchangeRate\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"exchangeRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"quotedCurrencyPair\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: " \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The side rate currency1 \'\""
                            tail: " "
                            literal {
                              type: string_type
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: CALL
                            tail: " "
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "ccy1"
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: "\n\t\t\t\t\t\t\t"
                          }
                          child {
                            kind: LITERAL
                            text: "\"\' must be the same as trade currency1 \'\""
                            tail: " "
                            literal {
                              type: string_type
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: CALL
                            tail: " "
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "ccy"
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "\"\'.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures sideRates/currency2SideRate/currency\n\t * must be the same as quotedCurrencyPair/currency2.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE06"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-6\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"ExchangeRate\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"exchangeRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"quotedCurrencyPair\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: " \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The side rate currency2 \'\""
                            tail: " "
                            literal {
                              type: string_type
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: CALL
                            tail: " "
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "ccy1"
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: "\n\t\t\t\t\t\t\t"
                          }
                          child {
                            kind: LITERAL
                            text: "\"\' must be the same as trade currency2 \'\""
                            tail: " "
                            literal {
                              type: string_type
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: CALL
                            tail: " "
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "ccy"
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "\"\'.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures triggerRate is positive.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE07"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-7\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXAmericanTrigger\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxAmericanTrigger\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxAmericanTrigger\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"triggerRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "isPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The trigger rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that observationStartDate and observationEndDate\n\t * both exist then observationStartDate &lt;= observationEndDate.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE08"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-8\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXAmericanTrigger\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxAmericanTrigger\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxAmericanTrigger\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "start"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationStartDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "end"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationEndDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "start"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "end"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "lessOrEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "start"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "end"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The observationStartDate must not be after the observationEndDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures observationStartDate and observationEndDate\n\t * both exist then observationStartDate &lt;= observationEndDate.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE09"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-9\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXAverageRateObservationSchedule\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxAverageRateObservationSchedule\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"averageRateObservationSchedule\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "start"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationStartDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "end"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationEndDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "start"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "end"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "lessOrEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "start"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "end"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The observationStartDate must not be after the observationEndDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures the observation period defined by\n\t * observationStartDate and observationEndDate should be an integer\n\t * multiple of the calculationPeriodFrequency.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE10"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-10\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXAverageRateObservationSchedule\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxAverageRateObservationSchedule\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"averageRateObservationSchedule\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "start"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationStartDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "end"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationEndDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "period"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"calculationPeriodFrequency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "start"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "end"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "period"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "toInterval"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "period"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "dividesDates"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "start"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "end"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The observation period is not a multiple of the calculationPeriodFrequency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures each observationDate is unique.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE11"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-11\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXAverageRateOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxAverageRateOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "NodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "nodes"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observedRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t\t"
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "limit"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodes"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "getLength"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "()"
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "Date"
                        tail: " "
                      }
                      child {
                        kind: INDEX
                        text: "[]"
                      }
                    }
                  }
                  child {
                    kind: NAME
                    text: "dates"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "new"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Date"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              text: "limit"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: "\n\t\t\t\t\t\t"
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        text: "limit"
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "count"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "dates"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              text: "count"
                            }
                          }
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "toDate"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "nodes"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "."
                                  }
                                  child {
                                    kind: NAME
                                    text: "item"
                                  }
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "count"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\t\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: " "
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "outer"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "outer"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "limit"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "-"
                        tail: " "
                      }
                      child {
                        kind: LITERAL
                        text: "1"
                        literal {
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "outer"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t\t"
                  child {
                    kind: FOR
                    text: "for "
                    tail: "\n\t\t\t\t\t}"
                    child {
                      kind: CONTROL
                      text: "("
                      tail: " "
                      child {
                        kind: INIT
                        tail: " "
                        child {
                          kind: DECL
                          tail: ";"
                          child {
                            kind: TYPE
                            tail: " "
                            child {
                              kind: NAME
                              text: "int"
                            }
                          }
                          child {
                            kind: NAME
                            text: "inner"
                            tail: " "
                          }
                          child {
                            kind: INIT
                            text: "= "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "outer"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "+"
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "1"
                                literal {
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: CONDITION
                        tail: " "
                        child {
                          kind: EXPR
                          tail: ";"
                          child {
                            kind: NAME
                            text: "inner"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "&lt;"
                            tail: " "
                          }
                          child {
                            kind: NAME
                            text: "limit"
                          }
                        }
                      }
                      child {
                        kind: INCR
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "++"
                          }
                          child {
                            kind: NAME
                            text: "inner"
                          }
                        }
                      }
                    }
                    child {
                      kind: BLOCK
                      text: "{\n\t\t\t\t\t\t\t"
                      child {
                        kind: IF
                        text: "if "
                        tail: "\n\t\t\t\t\t\t\t"
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            tail: ")"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "equal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "dates"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          tail: "]"
                                          child {
                                            kind: NAME
                                            text: "outer"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "dates"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          tail: "]"
                                          child {
                                            kind: NAME
                                            text: "inner"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: THEN
                          text: "\n\t\t\t\t\t\t\t\t"
                          child {
                            kind: BLOCK
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                tail: ";"
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    tail: " "
                                    child {
                                      kind: NAME
                                      text: "errorHandler"
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "."
                                    }
                                    child {
                                      kind: NAME
                                      text: "error"
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: LITERAL
                                          text: "\"305\""
                                          literal {
                                            type: string_type
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ",\n\t\t\t\t\t\t\t\t\t\t"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            tail: " "
                                            child {
                                              kind: NAME
                                              text: "nodes"
                                            }
                                            child {
                                              kind: OPERATOR
                                              text: "."
                                            }
                                            child {
                                              kind: NAME
                                              text: "item"
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "inner"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ",\n\t\t\t\t\t\t\t\t\t\t"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: LITERAL
                                          text: "\"Duplicate observation date\""
                                          literal {
                                            type: string_type
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "getName"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "()"
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            child {
                                              kind: NAME
                                              text: "Types"
                                            }
                                            child {
                                              kind: OPERATOR
                                              text: "."
                                            }
                                            child {
                                              kind: NAME
                                              text: "toString"
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: CALL
                                                  child {
                                                    kind: NAME
                                                    tail: " "
                                                    child {
                                                      kind: NAME
                                                      text: "nodes"
                                                    }
                                                    child {
                                                      kind: OPERATOR
                                                      text: "."
                                                    }
                                                    child {
                                                      kind: NAME
                                                      text: "item"
                                                    }
                                                  }
                                                  child {
                                                    kind: ARGUMENT_LIST
                                                    text: "("
                                                    child {
                                                      kind: ARGUMENT
                                                      tail: ")"
                                                      child {
                                                        kind: EXPR
                                                        child {
                                                          kind: NAME
                                                          text: "inner"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: EXPR_STMT
                        tail: "\n\t\t\t\t\t\t}"
                        child {
                          kind: EXPR
                          tail: ";"
                          child {
                            kind: NAME
                            text: "result"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "false"
                            literal {
                              type: boolean_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "dates"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "null"
                    literal {
                      type: null_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures each observationDate matches one defined\n\t * by the schedule.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE12"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-12\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXAverageRateOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxAverageRateOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "schedule"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"averageRateObservationSchedule\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: NAME
                      text: "schedule"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "start"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "schedule"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationStartDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "end"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "schedule"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationEndDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "freq"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "schedule"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"calculationPeriodFrequency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "roll"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "freq"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"rollConvention\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "start"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "end"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "freq"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "roll"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "Date"
                        tail: " "
                      }
                      child {
                        kind: INDEX
                        text: "[]"
                      }
                    }
                  }
                  child {
                    kind: NAME
                    text: "dates"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "generateSchedule"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "toDate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "start"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ",\n\t\t\t\t\t\t\t"
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "toDate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "end"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "toInterval"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "freq"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  tail: " "
                                  child {
                                    kind: NAME
                                    text: "DateRoll"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "."
                                  }
                                  child {
                                    kind: NAME
                                    text: "forName"
                                  }
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "Types"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "toString"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: NAME
                                                text: "roll"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "null"
                                literal {
                                  type: null_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "NodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "nodes"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observedRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\t\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: " "
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "nodes"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "getLength"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "()"
                        }
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "count"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t\t"
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " \t"
                        child {
                          kind: NAME
                          text: "Element"
                        }
                      }
                      child {
                        kind: NAME
                        text: "observed"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "("
                          }
                          child {
                            kind: NAME
                            text: "Element"
                          }
                          child {
                            kind: OPERATOR
                            text: ")"
                            tail: " "
                          }
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "nodes"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "item"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "count"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: DECL_STMT
                    tail: "\n\n\t\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t\t"
                        child {
                          kind: NAME
                          text: "Date"
                        }
                      }
                      child {
                        kind: NAME
                        text: "date"
                        tail: " \t "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "toDate"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "observed"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t\t"
                        child {
                          kind: NAME
                          text: "boolean"
                        }
                      }
                      child {
                        kind: NAME
                        text: "found"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "false"
                            literal {
                              type: boolean_type
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: FOR
                    text: "for "
                    tail: "\n\t\t\t\t\t\t"
                    child {
                      kind: CONTROL
                      text: "("
                      tail: " "
                      child {
                        kind: INIT
                        tail: " "
                        child {
                          kind: DECL
                          tail: ";"
                          child {
                            kind: TYPE
                            tail: " "
                            child {
                              kind: NAME
                              text: "int"
                            }
                          }
                          child {
                            kind: NAME
                            text: "match"
                            tail: " "
                          }
                          child {
                            kind: INIT
                            text: "= "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "0"
                                literal {
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: CONDITION
                        tail: " "
                        child {
                          kind: EXPR
                          tail: ";"
                          child {
                            kind: NAME
                            text: "match"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "&lt;"
                            tail: " "
                          }
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "dates"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "length"
                            }
                          }
                        }
                      }
                      child {
                        kind: INCR
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "++"
                          }
                          child {
                            kind: NAME
                            text: "match"
                          }
                        }
                      }
                    }
                    child {
                      kind: BLOCK
                      text: "{\n\t\t\t\t\t\t\t"
                      child {
                        kind: IF
                        text: "if "
                        tail: "\n\t\t\t\t\t\t}"
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            tail: ")"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "equal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "date"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "dates"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          tail: "]"
                                          child {
                                            kind: NAME
                                            text: "match"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: THEN
                          text: " "
                          child {
                            kind: BLOCK
                            text: "{\n\t\t\t\t\t\t\t\t"
                            child {
                              kind: EXPR_STMT
                              tail: "\n\t\t\t\t\t\t\t\t"
                              child {
                                kind: EXPR
                                tail: ";"
                                child {
                                  kind: NAME
                                  text: "found"
                                  tail: " "
                                }
                                child {
                                  kind: OPERATOR
                                  text: "="
                                  tail: " "
                                }
                                child {
                                  kind: LITERAL
                                  text: "true"
                                  literal {
                                    type: boolean_type
                                  }
                                }
                              }
                            }
                            child {
                              kind: BREAK
                              text: "break;"
                              tail: "\n\t\t\t\t\t\t\t}"
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: IF
                    text: "if "
                    tail: "\n}"
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        tail: ")"
                        child {
                          kind: OPERATOR
                          text: "!"
                        }
                        child {
                          kind: NAME
                          text: "found"
                        }
                      }
                    }
                    child {
                      kind: THEN
                      text: " "
                      child {
                        kind: BLOCK
                        text: "{\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR_STMT
                          tail: "\n\n\t\t\t\t\t\t\t"
                          child {
                            kind: EXPR
                            tail: ";"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "errorHandler"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "error"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"305\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ",\n\t\t\t\t\t\t\t\t\t"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "observed"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ",\n\t\t\t\t\t\t\t\t\t"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"Observation date \'\""
                                      tail: " "
                                      literal {
                                        type: string_type
                                      }
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "+"
                                      tail: " "
                                    }
                                    child {
                                      kind: CALL
                                      tail: " "
                                      child {
                                        kind: NAME
                                        tail: " "
                                        child {
                                          kind: NAME
                                          text: "Types"
                                        }
                                        child {
                                          kind: OPERATOR
                                          text: "."
                                        }
                                        child {
                                          kind: NAME
                                          text: "toString"
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "observed"
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "+"
                                      tail: "\n\t\t\t\t\t\t\t\t\t"
                                    }
                                    child {
                                      kind: LITERAL
                                      text: "\"\' does not match with the schedule.\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "getName"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "()"
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        child {
                                          kind: NAME
                                          text: "Types"
                                        }
                                        child {
                                          kind: OPERATOR
                                          text: "."
                                        }
                                        child {
                                          kind: NAME
                                          text: "toString"
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "observed"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: EXPR_STMT
                          tail: "\n\t\t\t\t\t\t}"
                          child {
                            kind: EXPR
                            tail: ";"
                            child {
                              kind: NAME
                              text: "result"
                              tail: " "
                            }
                            child {
                              kind: OPERATOR
                              text: "="
                              tail: " "
                            }
                            child {
                              kind: LITERAL
                              text: "false"
                              literal {
                                type: boolean_type
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "dates"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "null"
                    literal {
                      type: null_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures each observationDate is unique.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE13"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-13\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXAverageRateOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxAverageRateOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "NodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "schedule"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"averageRateObservationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t\t"
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "limit"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: TERNARY
                        child {
                          kind: CONDITION
                          child {
                            kind: EXPR
                            tail: " ?"
                            child {
                              kind: OPERATOR
                              text: "("
                            }
                            child {
                              kind: NAME
                              text: "schedule"
                              tail: " "
                            }
                            child {
                              kind: OPERATOR
                              text: "!="
                              tail: " "
                            }
                            child {
                              kind: LITERAL
                              text: "null"
                              literal {
                                type: null_type
                              }
                            }
                            child {
                              kind: OPERATOR
                              text: ")"
                            }
                          }
                        }
                        child {
                          kind: THEN
                          text: " "
                          child {
                            kind: EXPR
                            tail: " "
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "schedule"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getLength"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "()"
                              }
                            }
                          }
                        }
                        child {
                          kind: ELSE
                          text: ": "
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "0"
                              literal {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: NAME
                      text: "limit"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "0"
                      literal {
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "Date"
                        tail: " "
                      }
                      child {
                        kind: INDEX
                        text: "[]"
                      }
                    }
                  }
                  child {
                    kind: NAME
                    text: "dates"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "new"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Date"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              text: "limit"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\t\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: "\n\t\t\t\t\t\t"
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        text: "limit"
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "count"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "dates"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              text: "count"
                            }
                          }
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "toDate"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  tail: " "
                                  child {
                                    kind: NAME
                                    text: "schedule"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "."
                                  }
                                  child {
                                    kind: NAME
                                    text: "item"
                                  }
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "count"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "NodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "nodes"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observedRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\t\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: " "
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "nodes"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "getLength"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "()"
                        }
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "count"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t\t"
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " \t"
                        child {
                          kind: NAME
                          text: "Element"
                        }
                      }
                      child {
                        kind: NAME
                        text: "observed"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "("
                          }
                          child {
                            kind: NAME
                            text: "Element"
                          }
                          child {
                            kind: OPERATOR
                            text: ")"
                            tail: " "
                          }
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "nodes"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "item"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "count"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: DECL_STMT
                    tail: "\n\n\t\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t\t"
                        child {
                          kind: NAME
                          text: "Date"
                        }
                      }
                      child {
                        kind: NAME
                        text: "date"
                        tail: " \t "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "toDate"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "observed"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t\t"
                        child {
                          kind: NAME
                          text: "boolean"
                        }
                      }
                      child {
                        kind: NAME
                        text: "found"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "false"
                            literal {
                              type: boolean_type
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: FOR
                    text: "for "
                    tail: "\n\t\t\t\t\t\t"
                    child {
                      kind: CONTROL
                      text: "("
                      tail: " "
                      child {
                        kind: INIT
                        tail: " "
                        child {
                          kind: DECL
                          tail: ";"
                          child {
                            kind: TYPE
                            tail: " "
                            child {
                              kind: NAME
                              text: "int"
                            }
                          }
                          child {
                            kind: NAME
                            text: "match"
                            tail: " "
                          }
                          child {
                            kind: INIT
                            text: "= "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "0"
                                literal {
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: CONDITION
                        tail: " "
                        child {
                          kind: EXPR
                          tail: ";"
                          child {
                            kind: NAME
                            text: "match"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "&lt;"
                            tail: " "
                          }
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "dates"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "length"
                            }
                          }
                        }
                      }
                      child {
                        kind: INCR
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "++"
                          }
                          child {
                            kind: NAME
                            text: "match"
                          }
                        }
                      }
                    }
                    child {
                      kind: BLOCK
                      text: "{\n\t\t\t\t\t\t\t"
                      child {
                        kind: IF
                        text: "if "
                        tail: "\n}"
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            tail: ")"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "equal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "date"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "dates"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          tail: "]"
                                          child {
                                            kind: NAME
                                            text: "match"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: THEN
                          text: " "
                          child {
                            kind: BLOCK
                            text: "{\n\t\t\t\t\t\t\t\t"
                            child {
                              kind: EXPR_STMT
                              tail: "\n\t\t\t\t\t\t\t\t"
                              child {
                                kind: EXPR
                                tail: ";"
                                child {
                                  kind: NAME
                                  text: "found"
                                  tail: " "
                                }
                                child {
                                  kind: OPERATOR
                                  text: "="
                                  tail: " "
                                }
                                child {
                                  kind: LITERAL
                                  text: "true"
                                  literal {
                                    type: boolean_type
                                  }
                                }
                              }
                            }
                            child {
                              kind: BREAK
                              text: "break;"
                              tail: "\n\t\t\t\t\t\t\t}"
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: IF
                    text: "if "
                    tail: "\n}"
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        tail: ")"
                        child {
                          kind: OPERATOR
                          text: "!"
                        }
                        child {
                          kind: NAME
                          text: "found"
                        }
                      }
                    }
                    child {
                      kind: THEN
                      text: " "
                      child {
                        kind: BLOCK
                        text: "{\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR_STMT
                          tail: "\n\n\t\t\t\t\t\t\t"
                          child {
                            kind: EXPR
                            tail: ";"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "errorHandler"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "error"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"305\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ",\n\t\t\t\t\t\t\t\t\t"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "observed"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ",\n\t\t\t\t\t\t\t\t\t"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"Observation date \'\""
                                      tail: " "
                                      literal {
                                        type: string_type
                                      }
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "+"
                                      tail: " "
                                    }
                                    child {
                                      kind: CALL
                                      tail: " "
                                      child {
                                        kind: NAME
                                        tail: " "
                                        child {
                                          kind: NAME
                                          text: "Types"
                                        }
                                        child {
                                          kind: OPERATOR
                                          text: "."
                                        }
                                        child {
                                          kind: NAME
                                          text: "toString"
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "observed"
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "+"
                                      tail: "\n\t\t\t\t\t\t\t\t\t"
                                    }
                                    child {
                                      kind: LITERAL
                                      text: "\"\' does not match with a defined observationDate.\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "getName"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "()"
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        child {
                                          kind: NAME
                                          text: "Types"
                                        }
                                        child {
                                          kind: OPERATOR
                                          text: "."
                                        }
                                        child {
                                          kind: NAME
                                          text: "toString"
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "observed"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: EXPR_STMT
                          tail: "\n\t\t\t\t\t\t}"
                          child {
                            kind: EXPR
                            tail: ";"
                            child {
                              kind: NAME
                              text: "result"
                              tail: " "
                            }
                            child {
                              kind: OPERATOR
                              text: "="
                              tail: " "
                            }
                            child {
                              kind: LITERAL
                              text: "false"
                              literal {
                                type: boolean_type
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "dates"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "null"
                    literal {
                      type: null_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures observationStartDate and observationEndDate\n\t * both exist then observationStartDate &lt;= observationEndDate.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE14"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-14\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXBarrier\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxBarrier\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxBarrier\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "start"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationStartDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "end"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationEndDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "start"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "end"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "lessOrEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "start"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "end"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The observationStartDate must not be after the observationEndDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures spotRate is positive if it exists.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE15"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-15\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXBarrierOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxBarrierOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxBarrierOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"spotRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "isPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The spot rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * Context: FxDigitalOption (Complex Type)\n\t * &lt;P&gt;\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures spotRate is positive if it exists.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE16"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-16\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXDigitalOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxDigitalOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxDigitalOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"spotRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "isPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The spot rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures triggerRate is positive.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE17"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-17\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXEuropeanTrigger\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxEuropeanTrigger\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxEuropeanTrigger\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"triggerRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "isPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The trigger rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * Context&gt;: FxLeg (Complex Type)\n\t * &lt;P&gt;\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures payer and reciever are correct.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE18"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-18\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXLeg\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxLeg\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxSingleLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1Pay"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangedCurrency1\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"payerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1Rec"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangedCurrency1\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"receiverPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2Pay"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangedCurrency2\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"payerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2Rec"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangedCurrency2\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"receiverPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1Pay"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1Rec"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2Pay"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2Rec"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "ccy1Pay"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "ccy2Rec"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "ccy2Pay"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "ccy1Rec"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Exchanged currency payers and receivers don\'t match.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * Context: FxLeg (Complex Type)\n\t * &lt;P&gt;\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures exchanged currencies are different.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE19"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-19\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXLeg\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxLeg\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxSingleLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangedCurrency1\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"paymentAmount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangedCurrency2\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"paymentAmount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: COMMENT
                text: "// TODO check currency scheme as well"
                tail: "\n\t\t\t\t\t"
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "notEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Exchanged currencies must be different.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures split settlement dates are different.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE20"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-20\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXLeg\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxLeg\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxSingleLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "date1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1ValueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "date2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2ValueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "date1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "date2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "notEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "date1"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "date2"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1ValueDate and currency2ValueDate must be different.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures non-deliverable forwards contains\n\t * a specification of the forward points.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE21"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-21\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXLeg\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxLeg\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxSingleLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ndf"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"nonDeliverableForward\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "fwd"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangeRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"forwardPoints\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ndf"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "fwd"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Non-deliverable forward does not specify forwardPoints.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures buyer, seller, payer and reciever are correct.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE22"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-22\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXOptionLeg\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxOptionLeg\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxSimpleOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxBarrierOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: "  "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "buyer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"buyerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "seller"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sellerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "payer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxOptionPremium\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"payerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "receiver"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxOptionPremium\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"receiverPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "buyer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "seller"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "payer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "receiver"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "buyer"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "payer"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "seller"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "receiver"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Premium payer and receiver don\'t match with option buyer and seller.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures the put and call currencies are different.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE23"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-23\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXOptionLeg\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxOptionLeg\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxSimpleOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxBarrierOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"putCurrencyAmount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"callCurrencyAmount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: COMMENT
                text: "// TODO check currency scheme as well"
                tail: "\n\t\t\t\t\t"
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "notEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Put and call currencies must be different.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures rate is positive.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE24"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-24\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXStrikePrice\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxStrikePrice\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxStrikePrice\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"rate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "isPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * Context: FxSwap (Complex Type)\n\t * &lt;P&gt;\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures two or more legs are present.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE25"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-25\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXSwap\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxSwap\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxSwap\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "NodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "legs"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "legs"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&gt;="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "2"
                      literal {
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"FX swaps must have at least two legs.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures if two legs are present they must have\n\t * different value dates.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE26"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-26\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXSwap\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxSwap\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxSwap\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "NodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "legs"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "legs"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "2"
                      literal {
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "date1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: NAME
                                text: "Element"
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  tail: " "
                                  child {
                                    kind: NAME
                                    text: "legs"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "."
                                  }
                                  child {
                                    kind: NAME
                                    text: "item"
                                  }
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "0"
                                        literal {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"valueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "date2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: NAME
                                text: "Element"
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  tail: " "
                                  child {
                                    kind: NAME
                                    text: "legs"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "."
                                  }
                                  child {
                                    kind: NAME
                                    text: "item"
                                  }
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "1"
                                        literal {
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"valueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "notEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "date1"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "date2"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"FX swaps legs must settle on different days.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures two different currencies are specified.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE27"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-27\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"QuotedCurrencyPair\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"quotedCurrencyPair\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: COMMENT
                text: "// TODO check currency scheme as well"
                tail: "\n\t\t\t\t\t"
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "notEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Currencies must be different.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures triggerRate is positive.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE28"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-28\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"SideRate\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"currency1SideRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"currency2SideRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"rate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "isPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures that if forwardPoints exists then\n\t * spotRate should also exist.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE29"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-29\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"SideRate\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"currency1SideRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"currency2SideRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "forward"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"forwardPoints\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "spot"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"spotRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "forward"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "spot"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"If forwardPoints exists then spotRate should also exist.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures that if both forwardPoints and spotRate\n\t * exist then rate equals \'spotRate + forwardRate\'.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE30"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-30\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"SideRate\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"currency1SideRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"currency2SideRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "forward"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"forwardPoints\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "spot"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"spotRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"rate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "forward"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "spot"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "toDecimal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "equals"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDecimal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "spot"
                                    }
                                  }
                                }
                              }
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "add"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "toDecimal"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "forward"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: "\n\t\t\t\t\t\t"
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Sum of spotRate and forwardPoints does not equal rate.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures that side rates are obtained relative\n\t * to another currency.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE31"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-31\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"SideRates\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"sideRates\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "base"
                    tail: " \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"baseCurrency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "base"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: COMMENT
                text: "// TODO handle currency scheme"
                tail: "\n\t\t\t\t\t"
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "notEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "base"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "notEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "base"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The base currency must be different from the side rate currencies.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "base"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures the initial payer and reciever\n\t * are different.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE33"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R4_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-33\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"TermDeposit\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"termDeposit\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "payer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"initialPayerReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "receiver"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"initialReceiverReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "payer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "receiver"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "notEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ",\n\t\t\t\t\t\t\t\t  "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "payer"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "receiver"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The initial payer and receiver must be different\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "DOM"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "getAttribute"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ", "
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "payer"
                                  }
                                }
                              }
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"href\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures the maturity date is after the start date.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE34"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R4_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-34\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"TermDeposit\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"termDeposit\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "start"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"startDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "maturity"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"maturityDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "start"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "maturity"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "less"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "start"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "toDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "maturity"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The maturity date must be after the start date\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "maturity"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures the principal amount is positive.\n\t * are different.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE35"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R4_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-35\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"TermDeposit\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"termDeposit\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "amount"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"principal\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"amount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "amount"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "isPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "amount"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The principal amount must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "amount"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures the fixed rate is positive.\n\t * are different.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE36"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R4_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-36\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"TermDeposit\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"termDeposit\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fixedRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "isPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The fixed rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures expiry date is after trade date.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE37"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-37\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"Trade\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"trade\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: "  "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "tradeDate"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeHeader\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "expiryDate"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxAverageRateOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"expiryDateTime\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"expiryDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "tradeDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "expiryDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "less"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "tradeDate"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "expiryDate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Expiry date must be after trade date.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "expiryDate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures expiry date is after trade date.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE38"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-38\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"Trade\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"trade\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: "  "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "tradeDate"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeHeader\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "expiryDate"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxBarrierOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"expiryDateTime\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"expiryDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "tradeDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "expiryDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "less"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "tradeDate"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "expiryDate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Expiry date must be after trade date.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "expiryDate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures expiry date is after trade date.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE39"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-39\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"Trade\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"trade\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: "  "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "tradeDate"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeHeader\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "expiryDate"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxDigitalOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"expiryDateTime\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"expiryDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "tradeDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "expiryDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "less"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "tradeDate"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "expiryDate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Expiry date must be after trade date.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "expiryDate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures value date is after trade date.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE40"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-40\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"Trade\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"trade\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: "  "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "tradeDate"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeHeader\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "valueDate"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"valueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "value1Date"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1ValueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "value2Date"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2ValueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n}"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: NAME
                      text: "tradeDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    text: "{\n"
                    child {
                      kind: IF
                      text: "if "
                      tail: "\n"
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: NAME
                            text: "valueDate"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "!="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: " "
                        child {
                          kind: BLOCK
                          text: "{\n\t\t\t\t\t\t\t"
                          child {
                            kind: IF
                            text: "if "
                            tail: "\n\t\t\t\t\t\t\t"
                            child {
                              kind: CONDITION
                              text: "("
                              child {
                                kind: EXPR
                                tail: ")"
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "less"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "toDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "tradeDate"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "toDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "valueDate"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            child {
                              kind: THEN
                              text: " "
                              child {
                                kind: BLOCK
                                child {
                                  kind: CONTINUE
                                  text: "continue;"
                                }
                              }
                            }
                          }
                          child {
                            kind: EXPR_STMT
                            tail: "\n"
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  tail: " "
                                  child {
                                    kind: NAME
                                    text: "errorHandler"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "."
                                  }
                                  child {
                                    kind: NAME
                                    text: "error"
                                  }
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"305\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ",\n"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "context"
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ",\n\t\t\t\t\t\t\t\t\t"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"value date must be after trade date.\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          text: "getName"
                                          tail: " "
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "()"
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "Types"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "toString"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: NAME
                                                text: "valueDate"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: EXPR_STMT
                            tail: "\n}"
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: NAME
                                text: "result"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "false"
                                literal {
                                  type: boolean_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: IF
                      text: "if "
                      tail: "\n"
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: NAME
                            text: "value1Date"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "!="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: " "
                        child {
                          kind: BLOCK
                          text: "{\n\t\t\t\t\t\t\t"
                          child {
                            kind: IF
                            text: "if "
                            tail: "\n\t\t\t\t\t\t\t"
                            child {
                              kind: CONDITION
                              text: "("
                              child {
                                kind: EXPR
                                tail: ")"
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "less"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "toDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "tradeDate"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "toDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "value1Date"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            child {
                              kind: THEN
                              text: " "
                              child {
                                kind: BLOCK
                                child {
                                  kind: CONTINUE
                                  text: "continue;"
                                }
                              }
                            }
                          }
                          child {
                            kind: EXPR_STMT
                            tail: "\n"
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  tail: " "
                                  child {
                                    kind: NAME
                                    text: "errorHandler"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "."
                                  }
                                  child {
                                    kind: NAME
                                    text: "error"
                                  }
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"305\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ",\n\t\t\t\t\t\t\t\t\t"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "context"
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ",\n\t\t\t\t\t\t\t\t\t"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"value date must be after trade date.\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          text: "getName"
                                          tail: " "
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "()"
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "Types"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "toString"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: NAME
                                                text: "value1Date"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: EXPR_STMT
                            tail: "\n}"
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: NAME
                                text: "result"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "false"
                                literal {
                                  type: boolean_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: IF
                      text: "if "
                      tail: "\n}"
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: NAME
                            text: "value2Date"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "!="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: " "
                        child {
                          kind: BLOCK
                          text: "{\n\t\t\t\t\t\t\t"
                          child {
                            kind: IF
                            text: "if "
                            tail: "\n\t\t\t\t\t\t\t"
                            child {
                              kind: CONDITION
                              text: "("
                              child {
                                kind: EXPR
                                tail: ")"
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "less"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "toDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "tradeDate"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "toDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "value2Date"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            child {
                              kind: THEN
                              text: " "
                              child {
                                kind: BLOCK
                                child {
                                  kind: CONTINUE
                                  text: "continue;"
                                }
                              }
                            }
                          }
                          child {
                            kind: EXPR_STMT
                            tail: "\n"
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  tail: " "
                                  child {
                                    kind: NAME
                                    text: "errorHandler"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "."
                                  }
                                  child {
                                    kind: NAME
                                    text: "error"
                                  }
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"305\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ",\n\t\t\t\t\t\t\t\t\t"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "context"
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ",\n\t\t\t\t\t\t\t\t\t"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"value date must be after trade date.\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          text: "getName"
                                          tail: " "
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "()"
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "Types"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "toString"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: NAME
                                                text: "value2Date"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: EXPR_STMT
                            tail: "\n}"
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: NAME
                                text: "result"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "false"
                                literal {
                                  type: boolean_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures all FX swap value dates are after the\n\t * trade date.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE41"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-41\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"Trade\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"trade\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: "  \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "tradeDate"
                    tail: " \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeHeader\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "NodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "legs"
                    tail: "\t  \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSwap\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\t\t\t\t}"
                child {
                  kind: CONTROL
                  text: "("
                  tail: " "
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "legs"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "getLength"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "()"
                        }
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "count"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t\t"
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t\t"
                        child {
                          kind: NAME
                          text: "Element"
                        }
                      }
                      child {
                        kind: NAME
                        text: "leg"
                        tail: "\t\t\t"
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "("
                          }
                          child {
                            kind: NAME
                            text: "Element"
                          }
                          child {
                            kind: OPERATOR
                            text: ")"
                            tail: " "
                          }
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "legs"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "item"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "count"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t\t"
                        child {
                          kind: NAME
                          text: "Element"
                        }
                      }
                      child {
                        kind: NAME
                        text: "valueDate"
                        tail: " \t"
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "XPath"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "path"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ", "
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "leg"
                                  }
                                }
                              }
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"valueDate\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t\t"
                        child {
                          kind: NAME
                          text: "Element"
                        }
                      }
                      child {
                        kind: NAME
                        text: "value1Date"
                        tail: " \t"
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "XPath"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "path"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ", "
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "leg"
                                  }
                                }
                              }
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"currency1ValueDate\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: DECL_STMT
                    tail: "\n\n\t\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t\t"
                        child {
                          kind: NAME
                          text: "Element"
                        }
                      }
                      child {
                        kind: NAME
                        text: "value2Date"
                        tail: " \t"
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "XPath"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "path"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ", "
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "leg"
                                  }
                                }
                              }
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"currency2ValueDate\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: IF
                    text: "if "
                    tail: "\n\t\t\t\t\t}"
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        tail: ")"
                        child {
                          kind: NAME
                          text: "tradeDate"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "!="
                          tail: " "
                        }
                        child {
                          kind: LITERAL
                          text: "null"
                          literal {
                            type: null_type
                          }
                        }
                      }
                    }
                    child {
                      kind: THEN
                      text: " "
                      child {
                        kind: BLOCK
                        text: "{\n\t\t\t\t\t\t\t"
                        child {
                          kind: IF
                          text: "if "
                          tail: "\n\n\t\t\t\t\t\t\t"
                          child {
                            kind: CONDITION
                            text: "("
                            child {
                              kind: EXPR
                              tail: ")"
                              child {
                                kind: NAME
                                text: "valueDate"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "!="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "null"
                                literal {
                                  type: null_type
                                }
                              }
                            }
                          }
                          child {
                            kind: THEN
                            text: " "
                            child {
                              kind: BLOCK
                              text: "{\n\t\t\t\t\t\t\t\t"
                              child {
                                kind: IF
                                text: "if "
                                tail: "\n\n\t\t\t\t\t\t\t\t"
                                child {
                                  kind: CONDITION
                                  text: "("
                                  child {
                                    kind: EXPR
                                    tail: ")"
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "less"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ", "
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: CALL
                                              child {
                                                kind: NAME
                                                text: "toDate"
                                                tail: " "
                                              }
                                              child {
                                                kind: ARGUMENT_LIST
                                                text: "("
                                                child {
                                                  kind: ARGUMENT
                                                  tail: ")"
                                                  child {
                                                    kind: EXPR
                                                    child {
                                                      kind: NAME
                                                      text: "tradeDate"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: CALL
                                              child {
                                                kind: NAME
                                                text: "toDate"
                                                tail: " "
                                              }
                                              child {
                                                kind: ARGUMENT_LIST
                                                text: "("
                                                child {
                                                  kind: ARGUMENT
                                                  tail: ")"
                                                  child {
                                                    kind: EXPR
                                                    child {
                                                      kind: NAME
                                                      text: "valueDate"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: THEN
                                  text: " "
                                  child {
                                    kind: BLOCK
                                    child {
                                      kind: CONTINUE
                                      text: "continue;"
                                    }
                                  }
                                }
                              }
                              child {
                                kind: EXPR_STMT
                                tail: "\n\n\t\t\t\t\t\t\t\t"
                                child {
                                  kind: EXPR
                                  tail: ";"
                                  child {
                                    kind: CALL
                                    child {
                                      kind: NAME
                                      tail: " "
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                      child {
                                        kind: OPERATOR
                                        text: "."
                                      }
                                      child {
                                        kind: NAME
                                        text: "error"
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        tail: ", "
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: LITERAL
                                            text: "\"305\""
                                            literal {
                                              type: string_type
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ",\n\t\t\t\t\t\t\t\t\t\t"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "leg"
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ",\n\t\t\t\t\t\t\t\t\t\t"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: LITERAL
                                            text: "\"value date must be after trade date.\""
                                            literal {
                                              type: string_type
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ", "
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: CALL
                                            child {
                                              kind: NAME
                                              text: "getName"
                                              tail: " "
                                            }
                                            child {
                                              kind: ARGUMENT_LIST
                                              text: "()"
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ")"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: CALL
                                            child {
                                              kind: NAME
                                              tail: " "
                                              child {
                                                kind: NAME
                                                text: "Types"
                                              }
                                              child {
                                                kind: OPERATOR
                                                text: "."
                                              }
                                              child {
                                                kind: NAME
                                                text: "toString"
                                              }
                                            }
                                            child {
                                              kind: ARGUMENT_LIST
                                              text: "("
                                              child {
                                                kind: ARGUMENT
                                                tail: ")"
                                                child {
                                                  kind: EXPR
                                                  child {
                                                    kind: NAME
                                                    text: "valueDate"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: EXPR_STMT
                                tail: "\n\t\t\t\t\t\t\t}"
                                child {
                                  kind: EXPR
                                  tail: ";"
                                  child {
                                    kind: NAME
                                    text: "result"
                                    tail: " "
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "="
                                    tail: " "
                                  }
                                  child {
                                    kind: LITERAL
                                    text: "false"
                                    literal {
                                      type: boolean_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: IF
                          text: "if "
                          tail: "\n\n\t\t\t\t\t\t\t"
                          child {
                            kind: CONDITION
                            text: "("
                            child {
                              kind: EXPR
                              tail: ")"
                              child {
                                kind: NAME
                                text: "value1Date"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "!="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "null"
                                literal {
                                  type: null_type
                                }
                              }
                            }
                          }
                          child {
                            kind: THEN
                            text: " "
                            child {
                              kind: BLOCK
                              text: "{\n\t\t\t\t\t\t\t\t"
                              child {
                                kind: IF
                                text: "if "
                                tail: "\n\n\t\t\t\t\t\t\t\t"
                                child {
                                  kind: CONDITION
                                  text: "("
                                  child {
                                    kind: EXPR
                                    tail: ")"
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "less"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ", "
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: CALL
                                              child {
                                                kind: NAME
                                                text: "toDate"
                                                tail: " "
                                              }
                                              child {
                                                kind: ARGUMENT_LIST
                                                text: "("
                                                child {
                                                  kind: ARGUMENT
                                                  tail: ")"
                                                  child {
                                                    kind: EXPR
                                                    child {
                                                      kind: NAME
                                                      text: "tradeDate"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: CALL
                                              child {
                                                kind: NAME
                                                text: "toDate"
                                                tail: " "
                                              }
                                              child {
                                                kind: ARGUMENT_LIST
                                                text: "("
                                                child {
                                                  kind: ARGUMENT
                                                  tail: ")"
                                                  child {
                                                    kind: EXPR
                                                    child {
                                                      kind: NAME
                                                      text: "value1Date"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: THEN
                                  text: " "
                                  child {
                                    kind: BLOCK
                                    child {
                                      kind: CONTINUE
                                      text: "continue;"
                                    }
                                  }
                                }
                              }
                              child {
                                kind: EXPR_STMT
                                tail: "\n\n\t\t\t\t\t\t\t\t"
                                child {
                                  kind: EXPR
                                  tail: ";"
                                  child {
                                    kind: CALL
                                    child {
                                      kind: NAME
                                      tail: " "
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                      child {
                                        kind: OPERATOR
                                        text: "."
                                      }
                                      child {
                                        kind: NAME
                                        text: "error"
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        tail: ", "
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: LITERAL
                                            text: "\"305\""
                                            literal {
                                              type: string_type
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ",\n\t\t\t\t\t\t\t\t\t\t"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "leg"
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ",\n\t\t\t\t\t\t\t\t\t\t"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: LITERAL
                                            text: "\"value date must be after trade date.\""
                                            literal {
                                              type: string_type
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ", "
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: CALL
                                            child {
                                              kind: NAME
                                              text: "getName"
                                              tail: " "
                                            }
                                            child {
                                              kind: ARGUMENT_LIST
                                              text: "()"
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ")"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: CALL
                                            child {
                                              kind: NAME
                                              tail: " "
                                              child {
                                                kind: NAME
                                                text: "Types"
                                              }
                                              child {
                                                kind: OPERATOR
                                                text: "."
                                              }
                                              child {
                                                kind: NAME
                                                text: "toString"
                                              }
                                            }
                                            child {
                                              kind: ARGUMENT_LIST
                                              text: "("
                                              child {
                                                kind: ARGUMENT
                                                tail: ")"
                                                child {
                                                  kind: EXPR
                                                  child {
                                                    kind: NAME
                                                    text: "value1Date"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: EXPR_STMT
                                tail: "\n\t\t\t\t\t\t\t}"
                                child {
                                  kind: EXPR
                                  tail: ";"
                                  child {
                                    kind: NAME
                                    text: "result"
                                    tail: " "
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "="
                                    tail: " "
                                  }
                                  child {
                                    kind: LITERAL
                                    text: "false"
                                    literal {
                                      type: boolean_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: IF
                          text: "if "
                          tail: "\n\t\t\t\t\t\t}"
                          child {
                            kind: CONDITION
                            text: "("
                            child {
                              kind: EXPR
                              tail: ")"
                              child {
                                kind: NAME
                                text: "value2Date"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "!="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "null"
                                literal {
                                  type: null_type
                                }
                              }
                            }
                          }
                          child {
                            kind: THEN
                            text: " "
                            child {
                              kind: BLOCK
                              text: "{\n\t\t\t\t\t\t\t\t"
                              child {
                                kind: IF
                                text: "if "
                                tail: "\n\n\t\t\t\t\t\t\t\t"
                                child {
                                  kind: CONDITION
                                  text: "("
                                  child {
                                    kind: EXPR
                                    tail: ")"
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "less"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ", "
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: CALL
                                              child {
                                                kind: NAME
                                                text: "toDate"
                                                tail: " "
                                              }
                                              child {
                                                kind: ARGUMENT_LIST
                                                text: "("
                                                child {
                                                  kind: ARGUMENT
                                                  tail: ")"
                                                  child {
                                                    kind: EXPR
                                                    child {
                                                      kind: NAME
                                                      text: "tradeDate"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: CALL
                                              child {
                                                kind: NAME
                                                text: "toDate"
                                                tail: " "
                                              }
                                              child {
                                                kind: ARGUMENT_LIST
                                                text: "("
                                                child {
                                                  kind: ARGUMENT
                                                  tail: ")"
                                                  child {
                                                    kind: EXPR
                                                    child {
                                                      kind: NAME
                                                      text: "value2Date"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: THEN
                                  text: " "
                                  child {
                                    kind: BLOCK
                                    child {
                                      kind: CONTINUE
                                      text: "continue;"
                                    }
                                  }
                                }
                              }
                              child {
                                kind: EXPR_STMT
                                tail: "\n\n\t\t\t\t\t\t\t\t"
                                child {
                                  kind: EXPR
                                  tail: ";"
                                  child {
                                    kind: CALL
                                    child {
                                      kind: NAME
                                      tail: " "
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                      child {
                                        kind: OPERATOR
                                        text: "."
                                      }
                                      child {
                                        kind: NAME
                                        text: "error"
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        tail: ", "
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: LITERAL
                                            text: "\"305\""
                                            literal {
                                              type: string_type
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ",\n\t\t\t\t\t\t\t\t\t\t"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "leg"
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ",\n\t\t\t\t\t\t\t\t\t\t"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: LITERAL
                                            text: "\"value date must be after trade date.\""
                                            literal {
                                              type: string_type
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ", "
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: CALL
                                            child {
                                              kind: NAME
                                              text: "getName"
                                              tail: " "
                                            }
                                            child {
                                              kind: ARGUMENT_LIST
                                              text: "()"
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ")"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: CALL
                                            child {
                                              kind: NAME
                                              tail: " "
                                              child {
                                                kind: NAME
                                                text: "Types"
                                              }
                                              child {
                                                kind: OPERATOR
                                                text: "."
                                              }
                                              child {
                                                kind: NAME
                                                text: "toString"
                                              }
                                            }
                                            child {
                                              kind: ARGUMENT_LIST
                                              text: "("
                                              child {
                                                kind: ARGUMENT
                                                tail: ")"
                                                child {
                                                  kind: EXPR
                                                  child {
                                                    kind: NAME
                                                    text: "value2Date"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: EXPR_STMT
                                tail: "\n\t\t\t\t\t\t\t}"
                                child {
                                  kind: EXPR
                                  tail: ";"
                                  child {
                                    kind: NAME
                                    text: "result"
                                    tail: " "
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "="
                                    tail: " "
                                  }
                                  child {
                                    kind: LITERAL
                                    text: "false"
                                    literal {
                                      type: boolean_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures triggerRate is positive.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE42"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-42\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXBarrier\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxBarrier\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxBarrier\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"triggerRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "isPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The trigger rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures each averageRateObservationDate/observationDate\n\t * is unique.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE43"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-43\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXAverageRateOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxAverageRateOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "NodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "nodes"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"averageRateObservationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t\t"
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "limit"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodes"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "getLength"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "()"
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "Date"
                        tail: " "
                      }
                      child {
                        kind: INDEX
                        text: "[]"
                      }
                    }
                  }
                  child {
                    kind: NAME
                    text: "dates"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "new"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Date"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              text: "limit"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: "\n\t\t\t\t\t\t"
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        text: "limit"
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "count"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "dates"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              text: "count"
                            }
                          }
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "toDate"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "nodes"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "."
                                  }
                                  child {
                                    kind: NAME
                                    text: "item"
                                  }
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "count"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\t\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: " "
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "outer"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "outer"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "limit"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "-"
                        tail: " "
                      }
                      child {
                        kind: LITERAL
                        text: "1"
                        literal {
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "outer"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t\t"
                  child {
                    kind: FOR
                    text: "for "
                    tail: "\n}"
                    child {
                      kind: CONTROL
                      text: "("
                      tail: " "
                      child {
                        kind: INIT
                        tail: " "
                        child {
                          kind: DECL
                          tail: ";"
                          child {
                            kind: TYPE
                            tail: " "
                            child {
                              kind: NAME
                              text: "int"
                            }
                          }
                          child {
                            kind: NAME
                            text: "inner"
                            tail: " "
                          }
                          child {
                            kind: INIT
                            text: "= "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "outer"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "+"
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "1"
                                literal {
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: CONDITION
                        tail: " "
                        child {
                          kind: EXPR
                          tail: ";"
                          child {
                            kind: NAME
                            text: "inner"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "&lt;"
                            tail: " "
                          }
                          child {
                            kind: NAME
                            text: "limit"
                          }
                        }
                      }
                      child {
                        kind: INCR
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "++"
                          }
                          child {
                            kind: NAME
                            text: "inner"
                          }
                        }
                      }
                    }
                    child {
                      kind: BLOCK
                      text: "{\n\t\t\t\t\t\t\t"
                      child {
                        kind: IF
                        text: "if "
                        tail: "\n\n\t\t\t\t\t\t\t"
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            tail: ")"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "equal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "dates"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          tail: "]"
                                          child {
                                            kind: NAME
                                            text: "outer"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "dates"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          tail: "]"
                                          child {
                                            kind: NAME
                                            text: "inner"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: THEN
                          text: "\n\t\t\t\t\t\t\t\t"
                          child {
                            kind: BLOCK
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                tail: ";"
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    tail: " "
                                    child {
                                      kind: NAME
                                      text: "errorHandler"
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "."
                                    }
                                    child {
                                      kind: NAME
                                      text: "error"
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: LITERAL
                                          text: "\"305\""
                                          literal {
                                            type: string_type
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ",\n\t\t\t\t\t\t\t\t\t\t"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            tail: " "
                                            child {
                                              kind: NAME
                                              text: "nodes"
                                            }
                                            child {
                                              kind: OPERATOR
                                              text: "."
                                            }
                                            child {
                                              kind: NAME
                                              text: "item"
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "inner"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ",\n\t\t\t\t\t\t\t\t\t\t"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: LITERAL
                                          text: "\"Duplicate observation date\""
                                          literal {
                                            type: string_type
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "getName"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "()"
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            child {
                                              kind: NAME
                                              text: "Types"
                                            }
                                            child {
                                              kind: OPERATOR
                                              text: "."
                                            }
                                            child {
                                              kind: NAME
                                              text: "toString"
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: CALL
                                                  child {
                                                    kind: NAME
                                                    tail: " "
                                                    child {
                                                      kind: NAME
                                                      text: "nodes"
                                                    }
                                                    child {
                                                      kind: OPERATOR
                                                      text: "."
                                                    }
                                                    child {
                                                      kind: NAME
                                                      text: "item"
                                                    }
                                                  }
                                                  child {
                                                    kind: ARGUMENT_LIST
                                                    text: "("
                                                    child {
                                                      kind: ARGUMENT
                                                      tail: ")"
                                                      child {
                                                        kind: EXPR
                                                        child {
                                                          kind: NAME
                                                          text: "inner"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: EXPR_STMT
                        tail: "\n\t\t\t\t\t\t}"
                        child {
                          kind: EXPR
                          tail: ";"
                          child {
                            kind: NAME
                            text: "result"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "false"
                            literal {
                              type: boolean_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "dates"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "null"
                    literal {
                      type: null_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures the put and call currencies are different.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE44"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-44\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXAverageRateOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxAverageRateOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"putCurrencyAmount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"callCurrencyAmount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: COMMENT
                text: "// TODO check currency scheme as well"
                tail: "\n\t\t\t\t\t"
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "notEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Put and call currencies must be different.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures buyer, seller, payer and reciever are correct.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE45"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-45\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXAverageRateOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxAverageRateOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: "  "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "buyer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"buyerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "seller"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sellerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "payer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxOptionPremium\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"payerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "receiver"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxOptionPremium\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"receiverPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "buyer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "seller"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "payer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "receiver"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "buyer"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "payer"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "seller"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "receiver"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Premium payer and receiver don\'t match with option buyer and seller.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures buyer, seller, payer and reciever are correct.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE46"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-46\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                                tail: "\n\t\t\t\t\t\t  "
                              }
                              child {
                                kind: CALL
                                tail: "\n\t\t\t\t\t\t"
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FXDigitalOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "&amp;"
                                tail: " "
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"FxDigitalOption\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"fxDigitalOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: "  "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "buyer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"buyerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "seller"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sellerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "payer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxOptionPremium\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"payerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "receiver"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxOptionPremium\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"receiverPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "buyer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "seller"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "payer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "receiver"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "buyer"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "payer"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "seller"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "DOM"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "receiver"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Premium payer and receiver don\'t match with option buyer and seller.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures the side rates definition for currency1\n\t * uses an appropriate basis.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE47"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-47\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"SideRates\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"sideRates\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "basis"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRateBasis\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "basis"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "Types"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "toString"
                        }
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "basis"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "equalsIgnoreCase"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "\"Currency1perBaseCurrency\""
                              literal {
                                type: string_type
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "Types"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "toString"
                        }
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "basis"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "equalsIgnoreCase"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "\"BaseCurrencyPerCurrency1\""
                              literal {
                                type: string_type
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Side rate basis for currency1 should not be expressed in terms of currency2.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "basis"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;Rule&lt;/CODE&gt; that ensures the side rates definition for currency2\n\t * uses an appropriate basis.\n\t * &lt;P&gt;\n\t * Applies to FpML 3.0 and later.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\t\t\t"
        child {
          kind: DECL
          child {
            kind: SPECIFIER
            text: "public"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: " \t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "Rule"
            }
          }
          child {
            kind: NAME
            text: "RULE48"
            tail: "\n\t\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                tail: "\n\t\t"
                child {
                  kind: NAME
                  text: "Rule"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Preconditions"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "R3_0__LATER"
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"fx-48\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: BLOCK
                text: "{\n\t\t\t"
                child {
                  kind: EXPR
                  tail: "\n\n\t\t\t\t"
                  child {
                    kind: SPECIFIER
                    text: "public"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "boolean"
                    tail: " "
                  }
                  child {
                    kind: MACRO
                    tail: "\n\t\t\t"
                    child {
                      kind: NAME
                      text: "validate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        text: "NodeIndex nodeIndex"
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        text: "ValidationErrorHandler errorHandler"
                        tail: ")"
                      }
                    }
                  }
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "nodeIndex"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "hasTypeInformation"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: RETURN
                            text: "return "
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: OPERATOR
                                text: "("
                              }
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "validate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          tail: " "
                                          child {
                                            kind: NAME
                                            text: "nodeIndex"
                                          }
                                          child {
                                            kind: OPERATOR
                                            text: "."
                                          }
                                          child {
                                            kind: NAME
                                            text: "getElementsByType"
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ", "
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: CALL
                                                child {
                                                  kind: NAME
                                                  text: "determineNamespace"
                                                  tail: " "
                                                }
                                                child {
                                                  kind: ARGUMENT_LIST
                                                  text: "("
                                                  child {
                                                    kind: ARGUMENT
                                                    tail: ")"
                                                    child {
                                                      kind: EXPR
                                                      child {
                                                        kind: NAME
                                                        text: "nodeIndex"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: LITERAL
                                                text: "\"SideRates\""
                                                literal {
                                                  type: string_type
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "errorHandler"
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: ")"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: RETURN
                  text: "return "
                  tail: "\n\t\t\t}"
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "validate"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "getElementsByName"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"sideRates\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t};\n\n\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "boolean"
          }
        }
        child {
          kind: NAME
          text: "validate"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "boolean"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOR
            text: "for "
            tail: "\n\t\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: " "
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: CONDITION
                tail: " "
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "index"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "list"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "getLength"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
              child {
                kind: INCR
                tail: ")"
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "index"
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "Element"
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "list"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "item"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "index"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Element"
                    }
                  }
                  child {
                    kind: NAME
                    text: "basis"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRateBasis\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "basis"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "Types"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "toString"
                        }
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "basis"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "equalsIgnoreCase"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "\"Currency2perBaseCurrency\""
                              literal {
                                type: string_type
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "Types"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "toString"
                        }
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "basis"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "equalsIgnoreCase"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "\"BaseCurrencyPerCurrency2\""
                              literal {
                                type: string_type
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "error"
                      }
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Side rate basis for currency2 should not be expressed in terms of currency1.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "getName"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "()"
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "Types"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "toString"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "basis"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * Provides access to the FX validation rule set.\n\t *\n\t * @return\tThe FX validation rule set.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\t"
        child {
          kind: SPECIFIER
          text: "public"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "RuleSet"
          }
        }
        child {
          kind: NAME
          text: "getRules"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "()"
          tail: "\n\t"
        }
        child {
          kind: BLOCK
          text: "{\n\t\t"
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "rules"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * A &lt;CODE&gt;RuleSet&lt;/CODE&gt; containing all the standard FpML defined\n\t * validation rules for interest rate products.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: DECL_STMT
        tail: "\n\n\t"
        child {
          kind: DECL
          tail: ";"
          child {
            kind: SPECIFIER
            text: "private"
            tail: " "
          }
          child {
            kind: SPECIFIER
            text: "static"
            tail: " "
          }
          child {
            kind: TYPE
            tail: "\t"
            child {
              kind: NAME
              text: "final"
              tail: " "
            }
            child {
              kind: NAME
              text: "RuleSet"
            }
          }
          child {
            kind: NAME
            text: "rules"
            tail: " "
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "RuleSet"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "()"
                }
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/**\n\t * Generates a set of dates according to schedule defined by a start date,\n\t * an end date, an interval, roll convention and a calendar.\n\t *\n\t * @param\tstart\t\tThe start date.\n\t * @param\tend\t\t\tThe end date.\n\t * @param\tfrequency\tThe frequency of the schedule (e.g. 6M).\n\t * @param\troll\t\tThe date roll convention or &lt;CODE&gt;null&lt;/CODE&gt;.\n\t * @param\tcalendar\tThe holiday calendar or &lt;CODE&gt;null&lt;/CODE&gt;.\n\t * @return\tAn array of calculated and adjusted dates.\n\t * @since\tTFP 1.2\n\t */"
        tail: "\n\t"
      }
      child {
        kind: FUNCTION
        tail: "\n"
        child {
          kind: SPECIFIER
          text: "protected"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            child {
              kind: NAME
              text: "Date"
              tail: " "
            }
            child {
              kind: INDEX
              text: "[]"
            }
          }
        }
        child {
          kind: NAME
          text: "generateSchedule"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "final"
                  tail: " "
                }
                child {
                  kind: NAME
                  text: "Date"
                }
              }
              child {
                kind: NAME
                text: "start"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ",\n\t\t\t"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "final"
                  tail: " "
                }
                child {
                  kind: NAME
                  text: "Date"
                }
              }
              child {
                kind: NAME
                text: "end"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "final"
                  tail: " "
                }
                child {
                  kind: NAME
                  text: "Interval"
                }
              }
              child {
                kind: NAME
                text: "frequency"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "final"
                  tail: " "
                }
                child {
                  kind: NAME
                  text: "DateRoll"
                }
              }
              child {
                kind: NAME
                text: "roll"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "final"
                  tail: " "
                }
                child {
                  kind: NAME
                  text: "Calendar"
                }
              }
              child {
                kind: NAME
                text: "calendar"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "Date"
                }
              }
              child {
                kind: NAME
                text: "current"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "start"
                  }
                }
              }
            }
          }
          child {
            kind: DECL_STMT
            tail: "\n\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "Vector"
                }
              }
              child {
                kind: NAME
                text: "found"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "new"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "Vector"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: DECL_STMT
            tail: "\n\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "Date"
                    tail: " "
                  }
                  child {
                    kind: INDEX
                    text: "[]"
                  }
                }
              }
              child {
                kind: NAME
                text: "dates"
              }
            }
          }
          child {
            kind: WHILE
            text: "while "
            tail: "\n\n\t\t"
            child {
              kind: CONDITION
              text: "("
              tail: " "
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "less"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      tail: ", "
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "current"
                        }
                      }
                    }
                    child {
                      kind: ARGUMENT
                      tail: ")"
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "end"
                        }
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Date"
                    }
                  }
                  child {
                    kind: NAME
                    text: "adjusted"
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: NAME
                      text: "roll"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: "\n\t\t\t\t"
                  tail: "\n\t\t\t"
                  child {
                    kind: BLOCK
                    child {
                      kind: EXPR_STMT
                      child {
                        kind: EXPR
                        tail: ";"
                        child {
                          kind: NAME
                          text: "adjusted"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "="
                          tail: " "
                        }
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "roll"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "adjust"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              tail: ", "
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "calendar"
                                }
                              }
                            }
                            child {
                              kind: ARGUMENT
                              tail: ")"
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "current"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: ELSE
                  text: "else\n\t\t\t\t"
                  child {
                    kind: BLOCK
                    child {
                      kind: EXPR_STMT
                      child {
                        kind: EXPR
                        tail: ";"
                        child {
                          kind: NAME
                          text: "adjusted"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "="
                          tail: " "
                        }
                        child {
                          kind: NAME
                          text: "current"
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "found"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "contains"
                        }
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "adjusted"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: "\n\t\t\t\t"
                  child {
                    kind: BLOCK
                    child {
                      kind: EXPR_STMT
                      child {
                        kind: EXPR
                        tail: ";"
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            tail: " "
                            child {
                              kind: NAME
                              text: "found"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "add"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              tail: ")"
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "adjusted"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n}"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "frequency"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "getPeriod"
                        }
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "()"
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "Period"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "TERM"
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  tail: "\n\t\t\t"
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      tail: "\n}"
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "equal"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ", "
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "current"
                                  }
                                }
                              }
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "start"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t"
                        tail: "\n"
                        child {
                          kind: BLOCK
                          child {
                            kind: EXPR_STMT
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: NAME
                                text: "current"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "="
                                tail: " "
                              }
                              child {
                                kind: NAME
                                text: "end"
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: ELSE
                        text: "else\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: BREAK
                            text: "break;"
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: ELSE
                  text: "else\n\t\t\t\t"
                  child {
                    kind: BLOCK
                    child {
                      kind: EXPR_STMT
                      child {
                        kind: EXPR
                        tail: ";"
                        child {
                          kind: NAME
                          text: "current"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "="
                          tail: " "
                        }
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            tail: " "
                            child {
                              kind: NAME
                              text: "current"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "plus"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              tail: ")"
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "frequency"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          child {
            kind: EXPR_STMT
            tail: "\n\t\t"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: CALL
                child {
                  kind: NAME
                  tail: " "
                  child {
                    kind: NAME
                    text: "found"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "copyInto"
                  }
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "dates"
                        tail: "  "
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "new"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Date"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "found"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "size"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "()"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "dates"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: ENDIF
        text: "#"
        tail: "\n"
        child {
          kind: DIRECTIVE
          text: "endif"
        }
      }
      child {
        kind: IF
        text: "#"
        tail: "\n\t\t"
        child {
          kind: DIRECTIVE
          text: "if"
          tail: " "
        }
        child {
          kind: EXPR
          child {
            kind: LITERAL
            text: "false"
            literal {
              type: boolean_type
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "/// &lt;summary&gt;"
        tail: "\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// Initialises the &lt;see cref=\"RuleSet\"/&gt; with copies of all the FpML"
        tail: "\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// defined &lt;see cref=\"Rule\"/&gt; instances for Interest Rate Derivatives."
        tail: "\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// &lt;/summary&gt;"
        tail: "\n\t\t"
      }
      child {
        kind: CONSTRUCTOR
        tail: "\n"
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: NAME
          text: "FxRules"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "()"
          tail: "\n\t\t"
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: EXPR_STMT
            tail: "\n\t"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: CALL
                child {
                  kind: NAME
                  tail: " "
                  child {
                    kind: NAME
                    text: "Rules"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "Add"
                  }
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "RULE01"
                      }
                    }
                  }
                }
              }
            }
          }
          child {
            kind: COMMENT
            text: "/*\t\tRules.Add (RULE02);\n\t\t\tRules.Add (RULE03);\n\t\t\tRules.Add (RULE04);\n\t\t\tRules.Add (RULE05);\n\t\t\tRules.Add (RULE06);\n\t\t\tRules.Add (RULE08);\n\t\t\tRules.Add (RULE09);\n\t\t\tRules.Add (RULE10);\n\t\t\tRules.Add (RULE12);\n\t\t\tRules.Add (RULE13);\n\t\t\tRules.Add (RULE14);\n\t\t\tRules.Add (RULE15);\n\t\t\tRules.Add (RULE16);\n\t\t\tRules.Add (RULE17);\n\t\t\tRules.Add (RULE18);\n\t\t\tRules.Add (RULE19);\n\t\t\tRules.Add (RULE20);\n\t\t\tRules.Add (RULE21);\n\t\t\tRules.Add (RULE22);\n\t\t\tRules.Add (RULE23);\n\t\t\tRules.Add (RULE24);\n\t\t\tRules.Add (RULE25); */"
            tail: "\n\t\t}"
          }
        }
      }
      child {
        kind: ENDIF
        text: "#"
        tail: "\n}\n}\n"
        child {
          kind: DIRECTIVE
          text: "endif"
        }
      }
      unit {
        revision: "0.9.5"
        language: CSHARP
      }
    }
    new_code {
      text: "@ "
      child {
        kind: NAMESPACE
        text: "namespace "
        tail: ")"
        child {
          kind: NAME
          tail: "\nreturn ("
          child {
            kind: NAME
            text: "HandCoded"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "FpML"
          }
          child {
            kind: OPERATOR
            text: "."
          }
          child {
            kind: NAME
            text: "Validation"
          }
        }
        child {
          kind: NAME
          text: "result"
        }
      }
      child {
        kind: EMPTY_STMT
        text: ";"
        tail: "\n}\n\t\t"
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\t\tprivate "
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule02"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule02"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"ExchangeRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule02"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangeRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule02"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "forward"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"forwardPoints\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "spot"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"spotRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "forward"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "spot"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"If forwardPoints exists then spotRate should also exist.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule03"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule03"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"ExchangeRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule03"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangeRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule03"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "forward"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"forwardPoints\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "spot"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"spotRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"rate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "forward"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "spot"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "ToDecimal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Equals"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              tail: " "
                              child {
                                kind: NAME
                                text: "ToDecimal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "spot"
                                    }
                                  }
                                }
                              }
                            }
                            child {
                              kind: OPERATOR
                              text: "+"
                              tail: " "
                            }
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDecimal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "forward"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: "\n\t\t\t\t\t"
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Sum of spotRate and forwardPoints does not equal rate.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule04"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule04"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"ExchangeRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule04"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangeRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule04"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "baseCcy"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"baseCurrency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"quotedCurrencyPair\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"quotedCurrencyPair\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "baseCcy"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n}"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "Equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "baseCcy"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "baseCcy"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t\t"
                    child {
                      kind: EXPR_STMT
                      tail: "\n"
                      child {
                        kind: EXPR
                        tail: ";"
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "errorHandler"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              tail: ", "
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"305\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                            }
                            child {
                              kind: ARGUMENT
                              tail: ",\n\t\t\t\t\t\t\t"
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "context"
                                }
                              }
                            }
                            child {
                              kind: ARGUMENT
                              tail: ",\n\t\t\t\t\t\t\t"
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"The side rate base currency must not be one of the trade currencies.\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                            }
                            child {
                              kind: ARGUMENT
                              tail: ", "
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "name"
                                }
                              }
                            }
                            child {
                              kind: ARGUMENT
                              tail: ")"
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "ToToken"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "baseCcy"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: EXPR_STMT
                      tail: "\n}"
                      child {
                        kind: EXPR
                        tail: ";"
                        child {
                          kind: NAME
                          text: "result"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "="
                          tail: " "
                        }
                        child {
                          kind: LITERAL
                          text: "false"
                          literal {
                            type: boolean_type
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule05"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule05"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"ExchangeRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule05"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangeRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule05"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"quotedCurrencyPair\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: " \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The side rate currency1 \'\""
                            tail: " "
                            literal {
                              type: string_type
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: CALL
                            tail: " "
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "ccy1"
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: "\n\t\t\t\t\t\t"
                          }
                          child {
                            kind: LITERAL
                            text: "\"\' must be the same as trade currency1 \'\""
                            tail: " "
                            literal {
                              type: string_type
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: CALL
                            tail: " "
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "ccy"
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "\"\'.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule06"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule06"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"ExchangeRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule06"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangeRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule06"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"quotedCurrencyPair\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: " \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The side rate currency2 \'\""
                            tail: " "
                            literal {
                              type: string_type
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: CALL
                            tail: " "
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "ccy1"
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: "\n\t\t\t\t\t\t"
                          }
                          child {
                            kind: LITERAL
                            text: "\"\' must be the same as trade currency2 \'\""
                            tail: " "
                            literal {
                              type: string_type
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: CALL
                            tail: " "
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "ccy"
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "\"\'.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule07"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule07"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXAmericanTrigger\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule07"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxAmericanTrigger\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule07"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxAmericanTrigger\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule07"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"triggerRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The trigger rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule08"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule08"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXAmericanTrigger\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule08"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxAmericanTrigger\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule08"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxAmericanTrigger\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule08"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "start"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationStartDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "end"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationEndDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "start"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "end"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "LessOrEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "start"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "end"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The observationStartDate must not be after the observationEndDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule09"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule09"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXAverageRateObservationSchedule\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule09"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxAverageRateObservationSchedule\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule09"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"averageRateObservationSchedule\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule09"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "start"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationStartDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "end"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationEndDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "start"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "end"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "LessOrEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "start"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "end"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The observationStartDate must not be after the observationEndDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule10"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule10"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXAverageRateObservationSchedule\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule10"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxAverageRateObservationSchedule\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule10"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"averageRateObservationSchedule\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule10"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "start"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationStartDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "end"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationEndDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "period"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"calculationPeriodFrequency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "start"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "end"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "period"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "ToInterval"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "period"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "DividesDates"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "start"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "end"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The observation period is not a multiple of the calculationPeriodFrequency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule11"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule11"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule11"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule11"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxAverageRateOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule11"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlNodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "nodes"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observedRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t\t"
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "limit"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "nodes"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "Count"
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "Date"
                        tail: " "
                      }
                      child {
                        kind: INDEX
                        text: "[]"
                      }
                    }
                  }
                  child {
                    kind: NAME
                    text: "dates"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "new"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Date"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              text: "limit"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: "\n\t\t\t\t\t"
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        text: "limit"
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "count"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "dates"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              text: "count"
                            }
                          }
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToDate"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "nodes"
                                  tail: " "
                                }
                                child {
                                  kind: INDEX
                                  text: "["
                                  child {
                                    kind: EXPR
                                    tail: "]"
                                    child {
                                      kind: NAME
                                      text: "count"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: " "
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "outer"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "outer"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "limit"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "-"
                        tail: " "
                      }
                      child {
                        kind: LITERAL
                        text: "1"
                        literal {
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "outer"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t"
                  child {
                    kind: FOR
                    text: "for "
                    tail: "\n}"
                    child {
                      kind: CONTROL
                      text: "("
                      tail: " "
                      child {
                        kind: INIT
                        tail: " "
                        child {
                          kind: DECL
                          tail: ";"
                          child {
                            kind: TYPE
                            tail: " "
                            child {
                              kind: NAME
                              text: "int"
                            }
                          }
                          child {
                            kind: NAME
                            text: "inner"
                            tail: " "
                          }
                          child {
                            kind: INIT
                            text: "= "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "outer"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "+"
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "1"
                                literal {
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: CONDITION
                        tail: " "
                        child {
                          kind: EXPR
                          tail: ";"
                          child {
                            kind: NAME
                            text: "inner"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "&lt;"
                            tail: " "
                          }
                          child {
                            kind: NAME
                            text: "limit"
                          }
                        }
                      }
                      child {
                        kind: INCR
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "++"
                          }
                          child {
                            kind: NAME
                            text: "inner"
                          }
                        }
                      }
                    }
                    child {
                      kind: BLOCK
                      text: "{\n\t\t\t\t\t\t"
                      child {
                        kind: IF
                        text: "if "
                        tail: "\n\t\t\t\t\t\t"
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            tail: ")"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "Equal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "dates"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          tail: "]"
                                          child {
                                            kind: NAME
                                            text: "outer"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "dates"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          tail: "]"
                                          child {
                                            kind: NAME
                                            text: "inner"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: THEN
                          text: "\n\t\t\t\t\t\t\t"
                          child {
                            kind: BLOCK
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                tail: ";"
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "errorHandler"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: LITERAL
                                          text: "\"305\""
                                          literal {
                                            type: string_type
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ",\n\t\t\t\t\t\t\t\t\t"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          child {
                                            kind: NAME
                                            text: "nodes"
                                            tail: " "
                                          }
                                          child {
                                            kind: INDEX
                                            text: "["
                                            child {
                                              kind: EXPR
                                              tail: "]"
                                              child {
                                                kind: NAME
                                                text: "inner"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ",\n\t\t\t\t\t\t\t\t\t"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: LITERAL
                                          text: "\"Duplicate observation date\""
                                          literal {
                                            type: string_type
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "name"
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToToken"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  child {
                                                    kind: NAME
                                                    text: "nodes"
                                                    tail: " "
                                                  }
                                                  child {
                                                    kind: INDEX
                                                    text: "["
                                                    child {
                                                      kind: EXPR
                                                      tail: "]"
                                                      child {
                                                        kind: NAME
                                                        text: "inner"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: EXPR_STMT
                        tail: "\n}"
                        child {
                          kind: EXPR
                          tail: ";"
                          child {
                            kind: NAME
                            text: "result"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "false"
                            literal {
                              type: boolean_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "dates"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "null"
                    literal {
                      type: null_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule12"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule12"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule12"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule12"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxAverageRateOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule12"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "schedule"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"averageRateObservationSchedule\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: NAME
                      text: "schedule"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "start"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "schedule"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationStartDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "end"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "schedule"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationEndDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "freq"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "schedule"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"calculationPeriodFrequency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "roll"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "freq"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"rollConvention\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "start"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "end"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "freq"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "roll"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "Date"
                        tail: " "
                      }
                      child {
                        kind: INDEX
                        text: "[]"
                      }
                    }
                  }
                  child {
                    kind: NAME
                    text: "dates"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "GenerateSchedule"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "ToDate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "start"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ",\n\t\t\t\t\t\t"
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "ToDate"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "end"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "ToInterval"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "freq"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  tail: " "
                                  child {
                                    kind: NAME
                                    text: "DateRoll"
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "."
                                  }
                                  child {
                                    kind: NAME
                                    text: "ForName"
                                  }
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          text: "ToToken"
                                          tail: " "
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: NAME
                                                text: "roll"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "null"
                                literal {
                                  type: null_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlNodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "nodes"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observedRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOREACH
                text: "foreach "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: " "
                  child {
                    kind: INIT
                    tail: ")"
                    child {
                      kind: DECL
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "XmlElement"
                        }
                      }
                      child {
                        kind: NAME
                        text: "observed"
                        tail: " "
                      }
                      child {
                        kind: RANGE
                        text: "in "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "nodes"
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t"
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t\t"
                        child {
                          kind: NAME
                          text: "Date"
                        }
                      }
                      child {
                        kind: NAME
                        text: "date"
                        tail: " \t "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToDate"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "observed"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t\t"
                        child {
                          kind: NAME
                          text: "bool"
                        }
                      }
                      child {
                        kind: NAME
                        text: "found"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "false"
                            literal {
                              type: boolean_type
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: FOREACH
                    text: "foreach "
                    tail: "\n\n\t\t\t\t\t"
                    child {
                      kind: CONTROL
                      text: "("
                      tail: " "
                      child {
                        kind: INIT
                        tail: ")"
                        child {
                          kind: DECL
                          child {
                            kind: TYPE
                            tail: " "
                            child {
                              kind: NAME
                              text: "Date"
                            }
                          }
                          child {
                            kind: NAME
                            text: "match"
                            tail: " "
                          }
                          child {
                            kind: RANGE
                            text: "in "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "dates"
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: BLOCK
                      text: "{\n\t\t\t\t\t\t"
                      child {
                        kind: IF
                        text: "if "
                        tail: "\n\t\t\t\t\t}"
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            tail: ")"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "Equal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "date"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "match"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: THEN
                          text: " "
                          child {
                            kind: BLOCK
                            text: "{\n\t\t\t\t\t\t\t"
                            child {
                              kind: EXPR_STMT
                              tail: "\n\t\t\t\t\t\t\t"
                              child {
                                kind: EXPR
                                tail: ";"
                                child {
                                  kind: NAME
                                  text: "found"
                                  tail: " "
                                }
                                child {
                                  kind: OPERATOR
                                  text: "="
                                  tail: " "
                                }
                                child {
                                  kind: LITERAL
                                  text: "true"
                                  literal {
                                    type: boolean_type
                                  }
                                }
                              }
                            }
                            child {
                              kind: BREAK
                              text: "break;"
                              tail: "\n}"
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: IF
                    text: "if "
                    tail: "\n}"
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        tail: ")"
                        child {
                          kind: OPERATOR
                          text: "!"
                        }
                        child {
                          kind: NAME
                          text: "found"
                        }
                      }
                    }
                    child {
                      kind: THEN
                      text: " "
                      child {
                        kind: BLOCK
                        text: "{\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR_STMT
                          tail: "\n\t\t\t\t\t\t"
                          child {
                            kind: EXPR
                            tail: ";"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "errorHandler"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"305\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ",\n\t\t\t\t\t\t\t\t"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "observed"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ",\n\t\t\t\t\t\t\t\t"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"Observation date \'\""
                                      tail: " "
                                      literal {
                                        type: string_type
                                      }
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "+"
                                      tail: " "
                                    }
                                    child {
                                      kind: CALL
                                      tail: " "
                                      child {
                                        kind: NAME
                                        text: "ToToken"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "observed"
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "+"
                                      tail: "\n\t\t\t\t\t\t\t\t"
                                    }
                                    child {
                                      kind: LITERAL
                                      text: "\"\' does not match with the schedule.\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "name"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "ToToken"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "observed"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: EXPR_STMT
                          tail: "\n}"
                          child {
                            kind: EXPR
                            tail: ";"
                            child {
                              kind: NAME
                              text: "result"
                              tail: " "
                            }
                            child {
                              kind: OPERATOR
                              text: "="
                              tail: " "
                            }
                            child {
                              kind: LITERAL
                              text: "false"
                              literal {
                                type: boolean_type
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "dates"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "null"
                    literal {
                      type: null_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule13"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule13"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule13"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule13"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxAverageRateOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule13"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlNodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "schedule"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"averageRateObservationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t\t"
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "limit"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: TERNARY
                        child {
                          kind: CONDITION
                          child {
                            kind: EXPR
                            tail: " ?"
                            child {
                              kind: OPERATOR
                              text: "("
                            }
                            child {
                              kind: NAME
                              text: "schedule"
                              tail: " "
                            }
                            child {
                              kind: OPERATOR
                              text: "!="
                              tail: " "
                            }
                            child {
                              kind: LITERAL
                              text: "null"
                              literal {
                                type: null_type
                              }
                            }
                            child {
                              kind: OPERATOR
                              text: ")"
                            }
                          }
                        }
                        child {
                          kind: THEN
                          text: " "
                          child {
                            kind: EXPR
                            tail: " "
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "schedule"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "Count"
                              }
                            }
                          }
                        }
                        child {
                          kind: ELSE
                          text: ": "
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "0"
                              literal {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: NAME
                      text: "limit"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "0"
                      literal {
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "Date"
                        tail: " "
                      }
                      child {
                        kind: INDEX
                        text: "[]"
                      }
                    }
                  }
                  child {
                    kind: NAME
                    text: "dates"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "new"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Date"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              text: "limit"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: "\n\t\t\t\t\t"
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        text: "limit"
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "count"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "dates"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              text: "count"
                            }
                          }
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToDate"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "schedule"
                                  tail: " "
                                }
                                child {
                                  kind: INDEX
                                  text: "["
                                  child {
                                    kind: EXPR
                                    tail: "]"
                                    child {
                                      kind: NAME
                                      text: "count"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlNodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "nodes"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observedRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOREACH
                text: "foreach "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: " "
                  child {
                    kind: INIT
                    tail: ")"
                    child {
                      kind: DECL
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "XmlElement"
                        }
                      }
                      child {
                        kind: NAME
                        text: "observed"
                        tail: " "
                      }
                      child {
                        kind: RANGE
                        text: "in "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "nodes"
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t"
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t\t"
                        child {
                          kind: NAME
                          text: "Date"
                        }
                      }
                      child {
                        kind: NAME
                        text: "date"
                        tail: " \t "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToDate"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "observed"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t\t"
                        child {
                          kind: NAME
                          text: "bool"
                        }
                      }
                      child {
                        kind: NAME
                        text: "found"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "false"
                            literal {
                              type: boolean_type
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: FOR
                    text: "for "
                    tail: "\n\t\t\t\t\t"
                    child {
                      kind: CONTROL
                      text: "("
                      tail: " "
                      child {
                        kind: INIT
                        tail: " "
                        child {
                          kind: DECL
                          tail: ";"
                          child {
                            kind: TYPE
                            tail: " "
                            child {
                              kind: NAME
                              text: "int"
                            }
                          }
                          child {
                            kind: NAME
                            text: "match"
                            tail: " "
                          }
                          child {
                            kind: INIT
                            text: "= "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "0"
                                literal {
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: CONDITION
                        tail: " "
                        child {
                          kind: EXPR
                          tail: ";"
                          child {
                            kind: NAME
                            text: "match"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "&lt;"
                            tail: " "
                          }
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "dates"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "Length"
                            }
                          }
                        }
                      }
                      child {
                        kind: INCR
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "++"
                          }
                          child {
                            kind: NAME
                            text: "match"
                          }
                        }
                      }
                    }
                    child {
                      kind: BLOCK
                      text: "{\n\t\t\t\t\t\t"
                      child {
                        kind: IF
                        text: "if "
                        tail: "\n\t\t\t\t\t}"
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            tail: ")"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "Equal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "date"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "dates"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          tail: "]"
                                          child {
                                            kind: NAME
                                            text: "match"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: THEN
                          text: " "
                          child {
                            kind: BLOCK
                            text: "{\n\t\t\t\t\t\t\t"
                            child {
                              kind: EXPR_STMT
                              tail: "\n\t\t\t\t\t\t\t"
                              child {
                                kind: EXPR
                                tail: ";"
                                child {
                                  kind: NAME
                                  text: "found"
                                  tail: " "
                                }
                                child {
                                  kind: OPERATOR
                                  text: "="
                                  tail: " "
                                }
                                child {
                                  kind: LITERAL
                                  text: "true"
                                  literal {
                                    type: boolean_type
                                  }
                                }
                              }
                            }
                            child {
                              kind: BREAK
                              text: "break;"
                              tail: "\n\t\t\t\t\t\t}"
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: IF
                    text: "if "
                    tail: "\n}"
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        tail: ")"
                        child {
                          kind: OPERATOR
                          text: "!"
                        }
                        child {
                          kind: NAME
                          text: "found"
                        }
                      }
                    }
                    child {
                      kind: THEN
                      text: " "
                      child {
                        kind: BLOCK
                        text: "{\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR_STMT
                          tail: "\n\n\t\t\t\t\t\t"
                          child {
                            kind: EXPR
                            tail: ";"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "errorHandler"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"305\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ",\n\t\t\t\t\t\t\t\t"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "observed"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ",\n\t\t\t\t\t\t\t\t"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"Observation date \'\""
                                      tail: " "
                                      literal {
                                        type: string_type
                                      }
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "+"
                                      tail: " "
                                    }
                                    child {
                                      kind: CALL
                                      tail: " "
                                      child {
                                        kind: NAME
                                        text: "ToToken"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "observed"
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: OPERATOR
                                      text: "+"
                                      tail: "\n\t\t\t\t\t\t\t\t"
                                    }
                                    child {
                                      kind: LITERAL
                                      text: "\"\' does not match with a defined observationDate.\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "name"
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "ToToken"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "observed"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: EXPR_STMT
                          tail: "\n\t\t\t\t\t}"
                          child {
                            kind: EXPR
                            tail: ";"
                            child {
                              kind: NAME
                              text: "result"
                              tail: " "
                            }
                            child {
                              kind: OPERATOR
                              text: "="
                              tail: " "
                            }
                            child {
                              kind: LITERAL
                              text: "false"
                              literal {
                                type: boolean_type
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "dates"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "null"
                    literal {
                      type: null_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule14"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule14"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXBarrier\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule14"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxBarrier\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule14"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxBarrier\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule14"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "start"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationStartDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "end"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationEndDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "start"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "end"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "LessOrEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "start"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "end"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The observationStartDate must not be after the observationEndDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule15"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule15"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXBarrierOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule15"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxBarrierOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule15"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxBarrierOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule15"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"spotRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The spot rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule16"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule16"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXDigitalOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule16"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxDigitalOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule16"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxDigitalOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule16"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"spotRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The spot rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule17"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule17"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXEuropeanTrigger\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule17"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxEuropeanTrigger\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule17"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxEuropeanTrigger\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule17"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"triggerRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The trigger rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule18"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule18"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule18"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule18"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule18"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1Pay"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangedCurrency1\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"payerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1Rec"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangedCurrency1\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"receiverPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2Pay"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangedCurrency2\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"payerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2Rec"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangedCurrency2\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"receiverPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1Pay"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1Rec"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2Pay"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2Rec"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "Equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "ccy1Pay"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "ccy2Rec"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "ccy2Pay"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "ccy1Rec"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Exchanged currency payers and receivers don\'t match.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule19"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule19"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule19"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule19"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule19"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangedCurrency1\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"paymentAmount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangedCurrency2\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"paymentAmount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsSameCurrency"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Exchanged currencies must be different.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule20"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule20"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule20"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule20"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule20"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "date1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1ValueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "date2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2ValueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "date1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "date2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "NotEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "date1"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "date2"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1ValueDate and currency2ValueDate must be different.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule21"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule21"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule21"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule21"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule21"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ndf"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"nonDeliverableForward\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "fwd"
                    tail: "\t\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"exchangeRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"forwardPoints\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ndf"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "fwd"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Non-deliverable forward does not specify forwardPoints.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule22"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule22"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXOptionLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule22"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxOptionLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                tail: "\n\t\t\t\t"
                child {
                  kind: NAME
                  text: "Rule22"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSimpleOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: "&amp;"
                tail: " "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule22"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxBarrierOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule22"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "buyer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"buyerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "seller"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sellerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "payer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxOptionPremium\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"payerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "receiver"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxOptionPremium\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"receiverPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "buyer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "seller"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "payer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "receiver"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "Equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "buyer"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "payer"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "seller"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "receiver"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Premium payer and receiver don\'t match with option buyer and seller.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule23"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule23"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXOptionLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule23"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxOptionLeg\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                tail: "\n\t\t\t\t"
                child {
                  kind: NAME
                  text: "Rule23"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSimpleOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: "&amp;"
                tail: " "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule23"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxBarrierOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule23"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"putCurrencyAmount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"callCurrencyAmount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsSameCurrency"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Put and call currencies must be different.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule24"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule24"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXStrikePrice\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule24"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxStrikePrice\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule24"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxStrikePrice\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule24"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"rate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule25"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule25"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXSwap\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule25"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxSwap\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule25"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSwap\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule25"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlNodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "legs"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "Count"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "legs"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&gt;="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "2"
                      literal {
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"FX swaps must have at least two legs.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule26"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule26"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXSwap\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule26"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxSwap\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule26"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSwap\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule26"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlNodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "legs"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "Count"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "legs"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "2"
                      literal {
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "date1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "legs"
                                  tail: " "
                                }
                                child {
                                  kind: INDEX
                                  text: "["
                                  child {
                                    kind: EXPR
                                    tail: "]"
                                    child {
                                      kind: LITERAL
                                      text: "0"
                                      literal {
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "as"
                                tail: " "
                              }
                              child {
                                kind: NAME
                                text: "XmlElement"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"valueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "date2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "legs"
                                  tail: " "
                                }
                                child {
                                  kind: INDEX
                                  text: "["
                                  child {
                                    kind: EXPR
                                    tail: "]"
                                    child {
                                      kind: LITERAL
                                      text: "1"
                                      literal {
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: OPERATOR
                                text: "as"
                                tail: " "
                              }
                              child {
                                kind: NAME
                                text: "XmlElement"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"valueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "NotEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "date1"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "date2"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"FX swaps legs must settle on different days.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule27"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule27"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"QuotedCurrencyPair\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule27"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"quotedCurrencyPair\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule27"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsSameCurrency"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Currencies must be different.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule28"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule28"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"SideRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                tail: "\n\t\t\t\t"
                child {
                  kind: NAME
                  text: "Rule28"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: "&amp;"
                tail: " "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule28"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule28"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"rate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule29"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule29"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"SideRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                tail: "\n\t\t\t\t"
                child {
                  kind: NAME
                  text: "Rule29"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: "&amp;"
                tail: " "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule29"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule29"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "forward"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"forwardPoints\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "spot"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"spotRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "forward"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "spot"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"If forwardPoints exists then spotRate should also exist.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule30"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule30"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"SideRate\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t\t  "
              }
              child {
                kind: CALL
                tail: "\n\t\t\t\t\t"
                child {
                  kind: NAME
                  text: "Rule30"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: "&amp;"
                tail: " "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule30"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule30"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "forward"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"forwardPoints\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "spot"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"spotRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"rate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "forward"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "spot"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "ToDecimal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Equals"
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              tail: " "
                              child {
                                kind: NAME
                                text: "ToDecimal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "spot"
                                    }
                                  }
                                }
                              }
                            }
                            child {
                              kind: OPERATOR
                              text: "+"
                              tail: " "
                            }
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDecimal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "forward"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: "\n\t\t\t\t\t"
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Sum of spotRate and forwardPoints does not equal rate.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule31"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule31"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"SideRates\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule31"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule31"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: " \t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "baseCcy"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"baseCurrency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "baseCcy"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "IsSameCurrency"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "baseCcy"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsSameCurrency"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "baseCcy"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy2"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The base currency must be different from the side rate currencies.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "baseCcy"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule32"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule32"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"TermDeposit\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule32"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"termDeposit\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule32"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "payer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"initialPayerReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "receiver"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"initialReceiverReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "payer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "receiver"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "NotEqual"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ",\n\t\t\t\t\t\t\t  "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "payer"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "receiver"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The initial payer and receiver must be different\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "payer"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "GetAttribute"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"href\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule33"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule33"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"TermDeposit\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule33"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"termDeposit\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule33"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "start"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"startDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "maturity"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"maturityDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "start"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "maturity"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Less"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "start"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "maturity"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The maturity date must be after the start date\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "maturity"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule34"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule34"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"TermDeposit\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule34"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"termDeposit\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule34"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "amount"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"principal\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"amount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "amount"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "amount"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The principal amount must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "amount"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule35"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule35"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"TermDeposit\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule35"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"termDeposit\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule35"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fixedRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The fixed rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule36"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule36"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"Trade\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule36"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"trade\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule36"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "tradeDate"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeHeader\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "expiryDate"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxAverageRateOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"expiryDateTime\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"expiryDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "tradeDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "expiryDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Less"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "tradeDate"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "expiryDate"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Expiry date must be after trade date.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "expiryDate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule37"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule37"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"Trade\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule37"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"trade\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule37"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "tradeDate"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeHeader\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "expiryDate"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxBarrierOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"expiryDateTime\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"expiryDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "tradeDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "expiryDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Less"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "tradeDate"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "expiryDate"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Expiry date must be after trade date.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "expiryDate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule38"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule38"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"Trade\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule38"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"trade\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule38"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "tradeDate"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeHeader\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "expiryDate"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxDigitalOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"expiryDateTime\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"expiryDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "tradeDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "expiryDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Less"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "tradeDate"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToDate"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "expiryDate"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Expiry date must be after trade date.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "expiryDate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule39"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule39"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"Trade\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule39"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"trade\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule39"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "tradeDate"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeHeader\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "valueDate"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"valueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "value1Date"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1ValueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "value2Date"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2ValueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n}"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: NAME
                      text: "tradeDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: NAME
                            text: "valueDate"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "!="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: " "
                        child {
                          kind: BLOCK
                          text: "{\n\t\t\t\t\t\t"
                          child {
                            kind: IF
                            text: "if "
                            tail: "\n\t\t\t\t\t\t"
                            child {
                              kind: CONDITION
                              text: "("
                              child {
                                kind: EXPR
                                tail: ")"
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "Less"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "tradeDate"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "valueDate"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            child {
                              kind: THEN
                              text: " "
                              child {
                                kind: BLOCK
                                child {
                                  kind: CONTINUE
                                  text: "continue;"
                                }
                              }
                            }
                          }
                          child {
                            kind: EXPR_STMT
                            tail: "\n\n\t\t\t\t\t\t"
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "errorHandler"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"305\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ",\n\t\t\t\t\t\t\t\t"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "context"
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ",\n\t\t\t\t\t\t\t\t"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"value date must be after trade date.\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "name"
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          text: "ToToken"
                                          tail: " "
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: NAME
                                                text: "valueDate"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: EXPR_STMT
                            tail: "\n\t\t\t\t\t}"
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: NAME
                                text: "result"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "false"
                                literal {
                                  type: boolean_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: IF
                      text: "if "
                      tail: "\n\n\t\t\t\t\t"
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: NAME
                            text: "value1Date"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "!="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: " "
                        child {
                          kind: BLOCK
                          text: "{\n\t\t\t\t\t\t"
                          child {
                            kind: IF
                            text: "if "
                            tail: "\n\n\t\t\t\t\t\t"
                            child {
                              kind: CONDITION
                              text: "("
                              child {
                                kind: EXPR
                                tail: ")"
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "Less"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "tradeDate"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "value1Date"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            child {
                              kind: THEN
                              text: " "
                              child {
                                kind: BLOCK
                                child {
                                  kind: CONTINUE
                                  text: "continue;"
                                }
                              }
                            }
                          }
                          child {
                            kind: EXPR_STMT
                            tail: "\n\n\t\t\t\t\t\t"
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "errorHandler"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"305\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ",\n\t\t\t\t\t\t\t\t"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "context"
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ",\n\t\t\t\t\t\t\t\t"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"value1date must be after trade date.\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "name"
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          text: "ToToken"
                                          tail: " "
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: NAME
                                                text: "value1Date"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: EXPR_STMT
                            tail: "\n\t\t\t\t\t}"
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: NAME
                                text: "result"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "false"
                                literal {
                                  type: boolean_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: IF
                      text: "if "
                      tail: "\n\t\t\t\t}"
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: NAME
                            text: "value2Date"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "!="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: " "
                        child {
                          kind: BLOCK
                          text: "{\n\t\t\t\t\t\t"
                          child {
                            kind: IF
                            text: "if "
                            tail: "\n\n\t\t\t\t\t\t"
                            child {
                              kind: CONDITION
                              text: "("
                              child {
                                kind: EXPR
                                tail: ")"
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "Less"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "tradeDate"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "value2Date"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            child {
                              kind: THEN
                              text: " "
                              child {
                                kind: BLOCK
                                child {
                                  kind: CONTINUE
                                  text: "continue;"
                                }
                              }
                            }
                          }
                          child {
                            kind: EXPR_STMT
                            tail: "\n\n\t\t\t\t\t\t"
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "errorHandler"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"305\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ",\n\t\t\t\t\t\t\t\t"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "context"
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ",\n\t\t\t\t\t\t\t\t"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"value2date must be after trade date.\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ", "
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "name"
                                      }
                                    }
                                  }
                                  child {
                                    kind: ARGUMENT
                                    tail: ")"
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          text: "ToToken"
                                          tail: " "
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            tail: ")"
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: NAME
                                                text: "value2Date"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          child {
                            kind: EXPR_STMT
                            tail: "\n\t\t\t\t\t}"
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: NAME
                                text: "result"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "false"
                                literal {
                                  type: boolean_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule40"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule40"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"Trade\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule40"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"trade\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule40"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "tradeDate"
                    tail: " \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeHeader\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"tradeDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlNodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "legs"
                    tail: "\t  \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSwap\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxSingleLeg\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOREACH
                text: "foreach "
                tail: "\n}"
                child {
                  kind: CONTROL
                  text: "("
                  tail: " "
                  child {
                    kind: INIT
                    tail: ")"
                    child {
                      kind: DECL
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "XmlElement"
                        }
                      }
                      child {
                        kind: NAME
                        text: "leg"
                        tail: " "
                      }
                      child {
                        kind: RANGE
                        text: "in "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "legs"
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t"
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t"
                        child {
                          kind: NAME
                          text: "XmlElement"
                        }
                      }
                      child {
                        kind: NAME
                        text: "valueDate"
                        tail: " \t"
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "XPath"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "Path"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ", "
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "leg"
                                  }
                                }
                              }
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"valueDate\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: DECL_STMT
                    tail: "\n\t\t\t\t\t"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t"
                        child {
                          kind: NAME
                          text: "XmlElement"
                        }
                      }
                      child {
                        kind: NAME
                        text: "value1Date"
                        tail: " \t"
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "XPath"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "Path"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ", "
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "leg"
                                  }
                                }
                              }
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"currency1ValueDate\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: DECL_STMT
                    tail: "\n"
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: "\t"
                        child {
                          kind: NAME
                          text: "XmlElement"
                        }
                      }
                      child {
                        kind: NAME
                        text: "value2Date"
                        tail: " \t"
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              tail: " "
                              child {
                                kind: NAME
                                text: "XPath"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "Path"
                              }
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ", "
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "leg"
                                  }
                                }
                              }
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"currency2ValueDate\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: IF
                    text: "if "
                    tail: "\n}"
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        tail: ")"
                        child {
                          kind: NAME
                          text: "tradeDate"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "!="
                          tail: " "
                        }
                        child {
                          kind: LITERAL
                          text: "null"
                          literal {
                            type: null_type
                          }
                        }
                      }
                    }
                    child {
                      kind: THEN
                      text: " "
                      child {
                        kind: BLOCK
                        text: "{\n"
                        child {
                          kind: IF
                          text: "if "
                          tail: "\n"
                          child {
                            kind: CONDITION
                            text: "("
                            child {
                              kind: EXPR
                              tail: ")"
                              child {
                                kind: NAME
                                text: "valueDate"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "!="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "null"
                                literal {
                                  type: null_type
                                }
                              }
                            }
                          }
                          child {
                            kind: THEN
                            text: " "
                            child {
                              kind: BLOCK
                              text: "{\n\t\t\t\t\t\t\t"
                              child {
                                kind: IF
                                text: "if "
                                tail: "\n\t\t\t\t\t\t\t"
                                child {
                                  kind: CONDITION
                                  text: "("
                                  child {
                                    kind: EXPR
                                    tail: ")"
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "Less"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ", "
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: CALL
                                              child {
                                                kind: NAME
                                                text: "ToDate"
                                                tail: " "
                                              }
                                              child {
                                                kind: ARGUMENT_LIST
                                                text: "("
                                                child {
                                                  kind: ARGUMENT
                                                  tail: ")"
                                                  child {
                                                    kind: EXPR
                                                    child {
                                                      kind: NAME
                                                      text: "tradeDate"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: CALL
                                              child {
                                                kind: NAME
                                                text: "ToDate"
                                                tail: " "
                                              }
                                              child {
                                                kind: ARGUMENT_LIST
                                                text: "("
                                                child {
                                                  kind: ARGUMENT
                                                  tail: ")"
                                                  child {
                                                    kind: EXPR
                                                    child {
                                                      kind: NAME
                                                      text: "valueDate"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: THEN
                                  text: " "
                                  child {
                                    kind: BLOCK
                                    child {
                                      kind: CONTINUE
                                      text: "continue;"
                                    }
                                  }
                                }
                              }
                              child {
                                kind: EXPR_STMT
                                tail: "\n"
                                child {
                                  kind: EXPR
                                  tail: ";"
                                  child {
                                    kind: CALL
                                    child {
                                      kind: NAME
                                      text: "errorHandler"
                                      tail: " "
                                    }
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        tail: ", "
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: LITERAL
                                            text: "\"305\""
                                            literal {
                                              type: string_type
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ",\n"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "leg"
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ",\n\t\t\t\t\t\t\t\t\t"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: LITERAL
                                            text: "\"value date must be after trade date.\""
                                            literal {
                                              type: string_type
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ", "
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "name"
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ")"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: CALL
                                            child {
                                              kind: NAME
                                              text: "ToToken"
                                              tail: " "
                                            }
                                            child {
                                              kind: ARGUMENT_LIST
                                              text: "("
                                              child {
                                                kind: ARGUMENT
                                                tail: ")"
                                                child {
                                                  kind: EXPR
                                                  child {
                                                    kind: NAME
                                                    text: "valueDate"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: EXPR_STMT
                                tail: "\n}"
                                child {
                                  kind: EXPR
                                  tail: ";"
                                  child {
                                    kind: NAME
                                    text: "result"
                                    tail: " "
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "="
                                    tail: " "
                                  }
                                  child {
                                    kind: LITERAL
                                    text: "false"
                                    literal {
                                      type: boolean_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: IF
                          text: "if "
                          tail: "\n"
                          child {
                            kind: CONDITION
                            text: "("
                            child {
                              kind: EXPR
                              tail: ")"
                              child {
                                kind: NAME
                                text: "value1Date"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "!="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "null"
                                literal {
                                  type: null_type
                                }
                              }
                            }
                          }
                          child {
                            kind: THEN
                            text: " "
                            child {
                              kind: BLOCK
                              text: "{\n\t\t\t\t\t\t\t"
                              child {
                                kind: IF
                                text: "if "
                                tail: "\n\t\t\t\t\t\t\t"
                                child {
                                  kind: CONDITION
                                  text: "("
                                  child {
                                    kind: EXPR
                                    tail: ")"
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "Less"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ", "
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: CALL
                                              child {
                                                kind: NAME
                                                text: "ToDate"
                                                tail: " "
                                              }
                                              child {
                                                kind: ARGUMENT_LIST
                                                text: "("
                                                child {
                                                  kind: ARGUMENT
                                                  tail: ")"
                                                  child {
                                                    kind: EXPR
                                                    child {
                                                      kind: NAME
                                                      text: "tradeDate"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: CALL
                                              child {
                                                kind: NAME
                                                text: "ToDate"
                                                tail: " "
                                              }
                                              child {
                                                kind: ARGUMENT_LIST
                                                text: "("
                                                child {
                                                  kind: ARGUMENT
                                                  tail: ")"
                                                  child {
                                                    kind: EXPR
                                                    child {
                                                      kind: NAME
                                                      text: "value1Date"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: THEN
                                  text: " "
                                  child {
                                    kind: BLOCK
                                    child {
                                      kind: CONTINUE
                                      text: "continue;"
                                    }
                                  }
                                }
                              }
                              child {
                                kind: EXPR_STMT
                                tail: "\n"
                                child {
                                  kind: EXPR
                                  tail: ";"
                                  child {
                                    kind: CALL
                                    child {
                                      kind: NAME
                                      text: "errorHandler"
                                      tail: " "
                                    }
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        tail: ", "
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: LITERAL
                                            text: "\"305\""
                                            literal {
                                              type: string_type
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ",\n\t\t\t\t\t\t\t\t\t"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "leg"
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ",\n\t\t\t\t\t\t\t\t\t"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: LITERAL
                                            text: "\"value1date must be after trade date.\""
                                            literal {
                                              type: string_type
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ", "
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "name"
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ")"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: CALL
                                            child {
                                              kind: NAME
                                              text: "ToToken"
                                              tail: " "
                                            }
                                            child {
                                              kind: ARGUMENT_LIST
                                              text: "("
                                              child {
                                                kind: ARGUMENT
                                                tail: ")"
                                                child {
                                                  kind: EXPR
                                                  child {
                                                    kind: NAME
                                                    text: "value1Date"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: EXPR_STMT
                                tail: "\n}"
                                child {
                                  kind: EXPR
                                  tail: ";"
                                  child {
                                    kind: NAME
                                    text: "result"
                                    tail: " "
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "="
                                    tail: " "
                                  }
                                  child {
                                    kind: LITERAL
                                    text: "false"
                                    literal {
                                      type: boolean_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: IF
                          text: "if "
                          tail: "\n}"
                          child {
                            kind: CONDITION
                            text: "("
                            child {
                              kind: EXPR
                              tail: ")"
                              child {
                                kind: NAME
                                text: "value2Date"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "!="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "null"
                                literal {
                                  type: null_type
                                }
                              }
                            }
                          }
                          child {
                            kind: THEN
                            text: " "
                            child {
                              kind: BLOCK
                              text: "{\n\t\t\t\t\t\t\t"
                              child {
                                kind: IF
                                text: "if "
                                tail: "\n\t\t\t\t\t\t\t"
                                child {
                                  kind: CONDITION
                                  text: "("
                                  child {
                                    kind: EXPR
                                    tail: ")"
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "Less"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ", "
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: CALL
                                              child {
                                                kind: NAME
                                                text: "ToDate"
                                                tail: " "
                                              }
                                              child {
                                                kind: ARGUMENT_LIST
                                                text: "("
                                                child {
                                                  kind: ARGUMENT
                                                  tail: ")"
                                                  child {
                                                    kind: EXPR
                                                    child {
                                                      kind: NAME
                                                      text: "tradeDate"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: CALL
                                              child {
                                                kind: NAME
                                                text: "ToDate"
                                                tail: " "
                                              }
                                              child {
                                                kind: ARGUMENT_LIST
                                                text: "("
                                                child {
                                                  kind: ARGUMENT
                                                  tail: ")"
                                                  child {
                                                    kind: EXPR
                                                    child {
                                                      kind: NAME
                                                      text: "value2Date"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: THEN
                                  text: " "
                                  child {
                                    kind: BLOCK
                                    child {
                                      kind: CONTINUE
                                      text: "continue;"
                                    }
                                  }
                                }
                              }
                              child {
                                kind: EXPR_STMT
                                tail: "\n"
                                child {
                                  kind: EXPR
                                  tail: ";"
                                  child {
                                    kind: CALL
                                    child {
                                      kind: NAME
                                      text: "errorHandler"
                                      tail: " "
                                    }
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        tail: ", "
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: LITERAL
                                            text: "\"305\""
                                            literal {
                                              type: string_type
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ",\n\t\t\t\t\t\t\t\t\t"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "leg"
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ",\n\t\t\t\t\t\t\t\t\t"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: LITERAL
                                            text: "\"value2date must be after trade date.\""
                                            literal {
                                              type: string_type
                                            }
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ", "
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "name"
                                          }
                                        }
                                      }
                                      child {
                                        kind: ARGUMENT
                                        tail: ")"
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: CALL
                                            child {
                                              kind: NAME
                                              text: "ToToken"
                                              tail: " "
                                            }
                                            child {
                                              kind: ARGUMENT_LIST
                                              text: "("
                                              child {
                                                kind: ARGUMENT
                                                tail: ")"
                                                child {
                                                  kind: EXPR
                                                  child {
                                                    kind: NAME
                                                    text: "value2Date"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              child {
                                kind: EXPR_STMT
                                tail: "\n}"
                                child {
                                  kind: EXPR
                                  tail: ";"
                                  child {
                                    kind: NAME
                                    text: "result"
                                    tail: " "
                                  }
                                  child {
                                    kind: OPERATOR
                                    text: "="
                                    tail: " "
                                  }
                                  child {
                                    kind: LITERAL
                                    text: "false"
                                    literal {
                                      type: boolean_type
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule41"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule41"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXBarrier\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule41"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxBarrier\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule41"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxBarrier\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule41"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "rate"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"triggerRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "rate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsPositive"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "rate"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"The trigger rate must be positive\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "rate"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule42"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule42"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule42"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule42"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxAverageRateOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule42"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlNodeList"
                    }
                  }
                  child {
                    kind: NAME
                    text: "nodes"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Paths"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"averageRateObservationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"observationDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t\t"
                    child {
                      kind: NAME
                      text: "int"
                    }
                  }
                  child {
                    kind: NAME
                    text: "limit"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "nodes"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "Count"
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "Date"
                        tail: " "
                      }
                      child {
                        kind: INDEX
                        text: "[]"
                      }
                    }
                  }
                  child {
                    kind: NAME
                    text: "dates"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "new"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Date"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              text: "limit"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: "\n\t\t\t\t\t"
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "count"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        text: "limit"
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "count"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "dates"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              text: "count"
                            }
                          }
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToDate"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "nodes"
                                  tail: " "
                                }
                                child {
                                  kind: INDEX
                                  text: "["
                                  child {
                                    kind: EXPR
                                    tail: "]"
                                    child {
                                      kind: NAME
                                      text: "count"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: FOR
                text: "for "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONTROL
                  text: "("
                  tail: " "
                  child {
                    kind: INIT
                    tail: " "
                    child {
                      kind: DECL
                      tail: ";"
                      child {
                        kind: TYPE
                        tail: " "
                        child {
                          kind: NAME
                          text: "int"
                        }
                      }
                      child {
                        kind: NAME
                        text: "outer"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: CONDITION
                    tail: " "
                    child {
                      kind: EXPR
                      tail: ";"
                      child {
                        kind: NAME
                        text: "outer"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "("
                      }
                      child {
                        kind: NAME
                        text: "limit"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "-"
                        tail: " "
                      }
                      child {
                        kind: LITERAL
                        text: "1"
                        literal {
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: ")"
                      }
                    }
                  }
                  child {
                    kind: INCR
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "outer"
                      }
                    }
                  }
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t"
                  child {
                    kind: FOR
                    text: "for "
                    tail: "\n}"
                    child {
                      kind: CONTROL
                      text: "("
                      tail: " "
                      child {
                        kind: INIT
                        tail: " "
                        child {
                          kind: DECL
                          tail: ";"
                          child {
                            kind: TYPE
                            tail: " "
                            child {
                              kind: NAME
                              text: "int"
                            }
                          }
                          child {
                            kind: NAME
                            text: "inner"
                            tail: " "
                          }
                          child {
                            kind: INIT
                            text: "= "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "outer"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "+"
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "1"
                                literal {
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: CONDITION
                        tail: " "
                        child {
                          kind: EXPR
                          tail: ";"
                          child {
                            kind: NAME
                            text: "inner"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "&lt;"
                            tail: " "
                          }
                          child {
                            kind: NAME
                            text: "limit"
                          }
                        }
                      }
                      child {
                        kind: INCR
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: OPERATOR
                            text: "++"
                          }
                          child {
                            kind: NAME
                            text: "inner"
                          }
                        }
                      }
                    }
                    child {
                      kind: BLOCK
                      text: "{\n\t\t\t\t\t\t"
                      child {
                        kind: IF
                        text: "if "
                        tail: "\n\n\t\t\t\t\t\t"
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            tail: ")"
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "Equal"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "dates"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          tail: "]"
                                          child {
                                            kind: NAME
                                            text: "outer"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "dates"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          tail: "]"
                                          child {
                                            kind: NAME
                                            text: "inner"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: THEN
                          text: "\n\t\t\t\t\t\t\t"
                          child {
                            kind: BLOCK
                            child {
                              kind: EXPR_STMT
                              child {
                                kind: EXPR
                                tail: ";"
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "errorHandler"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: LITERAL
                                          text: "\"305\""
                                          literal {
                                            type: string_type
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ",\n\t\t\t\t\t\t\t\t\t"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          child {
                                            kind: NAME
                                            text: "nodes"
                                            tail: " "
                                          }
                                          child {
                                            kind: INDEX
                                            text: "["
                                            child {
                                              kind: EXPR
                                              tail: "]"
                                              child {
                                                kind: NAME
                                                text: "inner"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ",\n\t\t\t\t\t\t\t\t\t"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: LITERAL
                                          text: "\"Duplicate observation date\""
                                          literal {
                                            type: string_type
                                          }
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ", "
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "name"
                                        }
                                      }
                                    }
                                    child {
                                      kind: ARGUMENT
                                      tail: ")"
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToToken"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              tail: ")"
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  child {
                                                    kind: NAME
                                                    text: "nodes"
                                                    tail: " "
                                                  }
                                                  child {
                                                    kind: INDEX
                                                    text: "["
                                                    child {
                                                      kind: EXPR
                                                      tail: "]"
                                                      child {
                                                        kind: NAME
                                                        text: "inner"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: EXPR_STMT
                        tail: "\n}"
                        child {
                          kind: EXPR
                          tail: ";"
                          child {
                            kind: NAME
                            text: "result"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "false"
                            literal {
                              type: boolean_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "dates"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "null"
                    literal {
                      type: null_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule43"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule43"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule43"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule43"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxAverageRateOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule43"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy1"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"putCurrencyAmount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "ccy2"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"callCurrencyAmount\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy1"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "ccy2"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "IsSameCurrency"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy1"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "ccy2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Put and call currencies must be different.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule44"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule44"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule44"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxAverageRateOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule44"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxAverageRateOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule44"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "buyer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"buyerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "seller"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sellerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "payer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxOptionPremium\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"payerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "receiver"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxOptionPremium\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"receiverPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "buyer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "seller"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "payer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "receiver"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "Equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "buyer"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "payer"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "seller"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "receiver"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Premium payer and receiver don\'t match with option buyer and seller.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule45"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                      tail: "\n\t\t\t\t\t  "
                    }
                    child {
                      kind: CALL
                      tail: "\n\t\t\t\t\t"
                      child {
                        kind: NAME
                        text: "Rule45"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FXDigitalOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;"
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule45"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"FxDigitalOption\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule45"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxDigitalOption\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule45"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "buyer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"buyerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "seller"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sellerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "payer"
                    tail: "\t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxOptionPremium\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"payerPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "receiver"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"fxOptionPremium\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"receiverPartyReference\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "buyer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "seller"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "payer"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "receiver"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "Equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "buyer"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "payer"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "&amp;&amp;"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Equal"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "seller"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                child {
                                  kind: NAME
                                  text: "receiver"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetAttribute"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"href\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Premium payer and receiver don\'t match with option buyer and seller.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule46"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule46"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"SideRates\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule46"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule46"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "basis"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRateBasis\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "basis"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "ToToken"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "basis"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "ToUpper"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "()"
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "Equals"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "\"CURRENCY1PERBASECURRENCY\""
                              literal {
                                type: string_type
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "ToToken"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "basis"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "ToUpper"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "()"
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Equals"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "\"BASECURRENCYPERCURRENCY1\""
                              literal {
                                type: string_type
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Side rate basis for currency1 should not be expressed in terms of currency2.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "basis"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule47"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "NodeIndex"
                }
              }
              child {
                kind: NAME
                text: "nodeIndex"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: IF
            text: "if "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "nodeIndex"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "HasTypeInformation"
                  }
                }
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: RETURN
                  text: "return "
                  child {
                    kind: EXPR
                    tail: ";"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Rule47"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ", "
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                tail: " "
                                child {
                                  kind: NAME
                                  text: "nodeIndex"
                                }
                                child {
                                  kind: OPERATOR
                                  text: "."
                                }
                                child {
                                  kind: NAME
                                  text: "GetElementsByType"
                                }
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  tail: ", "
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "DetermineNamespace"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          tail: ")"
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "nodeIndex"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                                child {
                                  kind: ARGUMENT
                                  tail: ")"
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"SideRates\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "errorHandler"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
                tail: "\n\t\t\t\t\t  "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "Rule47"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ", "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "nodeIndex"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetElementsByName"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRates\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "errorHandler"
                      }
                    }
                  }
                }
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: FUNCTION
        tail: "\n\n\t\t"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            text: "bool"
          }
        }
        child {
          kind: NAME
          text: "Rule47"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "string"
                }
              }
              child {
                kind: NAME
                text: "name"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
              }
              child {
                kind: NAME
                text: "list"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "ValidationErrorHandler"
                }
              }
              child {
                kind: NAME
                text: "errorHandler"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "bool"
                }
              }
              child {
                kind: NAME
                text: "result"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: LITERAL
                    text: "true"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: FOREACH
            text: "foreach "
            tail: "\n\t\t\t"
            child {
              kind: CONTROL
              text: "("
              tail: " "
              child {
                kind: INIT
                tail: ")"
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    tail: " "
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "context"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "list"
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t"
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                  }
                  child {
                    kind: NAME
                    text: "basis"
                    tail: "\t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          tail: " "
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "context"
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ", "
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2SideRate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                          child {
                            kind: ARGUMENT
                            tail: ")"
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"sideRateBasis\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "("
                    }
                    child {
                      kind: NAME
                      text: "basis"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: ")"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "ToToken"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "basis"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "ToUpper"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "()"
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      tail: " "
                      child {
                        kind: NAME
                        text: "Equals"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "\"CURRENCY2PERBASECURRENCY\""
                              literal {
                                type: string_type
                              }
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "||"
                      tail: "\n\t\t\t\t\t"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "ToToken"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "basis"
                            }
                          }
                        }
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "ToUpper"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "()"
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "Equals"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "\"BASECURRENCYPERCURRENCY2\""
                              literal {
                                type: string_type
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    child {
                      kind: CONTINUE
                      text: "continue;"
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "errorHandler"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"305\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ",\n\t\t\t\t\t\t"
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"Side rate basis for currency2 should not be expressed in terms of currency1.\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ", "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "name"
                          }
                        }
                      }
                      child {
                        kind: ARGUMENT
                        tail: ")"
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToToken"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "basis"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: EXPR_STMT
                tail: "\n\t\t\t}"
                child {
                  kind: EXPR
                  tail: ";"
                  child {
                    kind: NAME
                    text: "result"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "false"
                    literal {
                      type: boolean_type
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n\t\t}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "result"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      child {
        kind: COMMENT
        text: "// --------------------------------------------------------------------"
        tail: "\n\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// &lt;summary&gt;"
        tail: "\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// Generates a set of dates according to schedule defined by a start date,"
        tail: "\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// an end date, an interval, roll convention and a calendar."
        tail: "\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// &lt;/summary&gt;"
        tail: "\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// &lt;param name=\"start\"&gt;The start date.&lt;/param&gt;"
        tail: "\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// &lt;param name=\"end\"&gt;The end date.&lt;/param&gt;"
        tail: "\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// &lt;param name=\"frequency\"&gt;The frequency of the schedule (e.g. 6M).&lt;/param&gt;"
        tail: "\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// &lt;param name=\"roll\"&gt;The date roll convention or &lt;c&gt;null&lt;/c&gt;.&lt;/param&gt;"
        tail: "\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// &lt;param name=\"calendar\"&gt;The holiday calendar or &lt;c&gt;null&lt;/c&gt;.&lt;/param&gt;"
        tail: "\n\t\t"
      }
      child {
        kind: COMMENT
        text: "/// &lt;returns&gt;An array of calculated and adjusted dates.&lt;/returns&gt;"
        tail: "\n\t\t"
      }
      child {
        kind: FUNCTION
        tail: "\n}\n}\n"
        child {
          kind: SPECIFIER
          text: "private"
          tail: " "
        }
        child {
          kind: SPECIFIER
          text: "static"
          tail: " "
        }
        child {
          kind: TYPE
          tail: " "
          child {
            kind: NAME
            child {
              kind: NAME
              text: "Date"
              tail: " "
            }
            child {
              kind: INDEX
              text: "[]"
            }
          }
        }
        child {
          kind: NAME
          text: "GenerateSchedule"
          tail: " "
        }
        child {
          kind: PARAMETER_LIST
          text: "("
          tail: "\n\t\t"
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "Date"
                }
              }
              child {
                kind: NAME
                text: "start"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ",\n\t\t\t"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "Date"
                }
              }
              child {
                kind: NAME
                text: "end"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "Interval"
                }
              }
              child {
                kind: NAME
                text: "frequency"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ", "
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "DateRoll"
                }
              }
              child {
                kind: NAME
                text: "roll"
              }
            }
          }
          child {
            kind: PARAMETER
            tail: ")"
            child {
              kind: DECL
              child {
                kind: TYPE
                tail: " "
                child {
                  kind: NAME
                  text: "Calendar"
                }
              }
              child {
                kind: NAME
                text: "calendar"
              }
            }
          }
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t"
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  text: "Date"
                }
              }
              child {
                kind: NAME
                text: "current"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "start"
                  }
                }
              }
            }
          }
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t"
                child {
                  kind: NAME
                  text: "ArrayList"
                }
              }
              child {
                kind: NAME
                text: "found"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "new"
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "ArrayList"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "()"
                    }
                  }
                }
              }
            }
          }
          child {
            kind: DECL_STMT
            tail: "\n\t\t\t"
            child {
              kind: DECL
              tail: ";"
              child {
                kind: TYPE
                tail: "\t\t"
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "Date"
                    tail: " "
                  }
                  child {
                    kind: INDEX
                    text: "[]"
                  }
                }
              }
              child {
                kind: NAME
                text: "dates"
              }
            }
          }
          child {
            kind: WHILE
            text: "while "
            tail: "\n\n\t\t\t"
            child {
              kind: CONDITION
              text: "("
              tail: " "
              child {
                kind: EXPR
                tail: ")"
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Less"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      tail: ", "
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "current"
                        }
                      }
                    }
                    child {
                      kind: ARGUMENT
                      tail: ")"
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "end"
                        }
                      }
                    }
                  }
                }
              }
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t"
              child {
                kind: DECL_STMT
                tail: "\n\n\t\t\t\t"
                child {
                  kind: DECL
                  tail: ";"
                  child {
                    kind: TYPE
                    tail: "\t\t"
                    child {
                      kind: NAME
                      text: "Date"
                    }
                  }
                  child {
                    kind: NAME
                    text: "adjusted"
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: NAME
                      text: "roll"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: "\n\t\t\t\t\t"
                  tail: "\n\t\t\t\t"
                  child {
                    kind: BLOCK
                    child {
                      kind: EXPR_STMT
                      child {
                        kind: EXPR
                        tail: ";"
                        child {
                          kind: NAME
                          text: "adjusted"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "="
                          tail: " "
                        }
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            tail: " "
                            child {
                              kind: NAME
                              text: "roll"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "Adjust"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              tail: ", "
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "calendar"
                                }
                              }
                            }
                            child {
                              kind: ARGUMENT
                              tail: ")"
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "current"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: ELSE
                  text: "else\n\t\t\t\t\t"
                  child {
                    kind: BLOCK
                    child {
                      kind: EXPR_STMT
                      child {
                        kind: EXPR
                        tail: ";"
                        child {
                          kind: NAME
                          text: "adjusted"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "="
                          tail: " "
                        }
                        child {
                          kind: NAME
                          text: "current"
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n\n\t\t\t\t"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        tail: " "
                        child {
                          kind: NAME
                          text: "found"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "Contains"
                        }
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          tail: ")"
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "adjusted"
                            }
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: "\n\t\t\t\t\t"
                  child {
                    kind: BLOCK
                    child {
                      kind: EXPR_STMT
                      child {
                        kind: EXPR
                        tail: ";"
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            tail: " "
                            child {
                              kind: NAME
                              text: "found"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "Add"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              tail: ")"
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "adjusted"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              child {
                kind: IF
                text: "if "
                tail: "\n}"
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    tail: ")"
                    child {
                      kind: NAME
                      tail: " "
                      child {
                        kind: NAME
                        text: "frequency"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Period"
                      }
                    }
                    child {
                      kind: OPERATOR
                      text: "=="
                      tail: " "
                    }
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "Period"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "TERM"
                      }
                    }
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  tail: "\n"
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t\t"
                    child {
                      kind: IF
                      text: "if "
                      tail: "\n\t\t\t\t}"
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          tail: ")"
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "Equal"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                tail: ", "
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "current"
                                  }
                                }
                              }
                              child {
                                kind: ARGUMENT
                                tail: ")"
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "start"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: THEN
                        text: "\n\t\t\t\t\t\t"
                        tail: "\n\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: EXPR_STMT
                            child {
                              kind: EXPR
                              tail: ";"
                              child {
                                kind: NAME
                                text: "current"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "="
                                tail: " "
                              }
                              child {
                                kind: NAME
                                text: "end"
                              }
                            }
                          }
                        }
                      }
                      child {
                        kind: ELSE
                        text: "else\n\t\t\t\t\t\t"
                        child {
                          kind: BLOCK
                          child {
                            kind: BREAK
                            text: "break;"
                          }
                        }
                      }
                    }
                  }
                }
                child {
                  kind: ELSE
                  text: "else\n\t\t\t\t\t"
                  child {
                    kind: BLOCK
                    child {
                      kind: EXPR_STMT
                      child {
                        kind: EXPR
                        tail: ";"
                        child {
                          kind: NAME
                          text: "current"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "="
                          tail: " "
                        }
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            tail: " "
                            child {
                              kind: NAME
                              text: "current"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "Plus"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              tail: ")"
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "frequency"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          child {
            kind: EXPR_STMT
            tail: "\n\t\t\t"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: CALL
                child {
                  kind: NAME
                  tail: " "
                  child {
                    kind: NAME
                    text: "found"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "CopyTo"
                  }
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    tail: ")"
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "dates"
                        tail: "  "
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "new"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "Date"
                          tail: " "
                        }
                        child {
                          kind: INDEX
                          text: "["
                          child {
                            kind: EXPR
                            tail: "]"
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "found"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "Count"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          child {
            kind: RETURN
            text: "return "
            tail: "\n}"
            child {
              kind: EXPR
              tail: ";"
              child {
                kind: OPERATOR
                text: "("
              }
              child {
                kind: NAME
                text: "dates"
              }
              child {
                kind: OPERATOR
                text: ")"
              }
            }
          }
        }
      }
      unit {
        revision: "0.9.5"
        language: CSHARP
      }
    }
  }
  type: YES
}
