element {
  kind: UNIT_KIND
  text: "@ "
  child {
    kind: NAMESPACE
    text: "namespace "
    child {
      kind: NAME
      child {
        kind: NAME
        text: "HandCoded"
      }
      child {
        kind: OPERATOR
        text: "."
      }
      child {
        kind: NAME
        text: "FpML"
      }
      child {
        kind: OPERATOR
        text: "."
      }
      child {
        kind: NAME
        text: "Validation"
      }
      tail: "\nreturn ("
    }
    child {
      kind: NAME
      text: "result"
    }
    tail: ")"
  }
  child {
    kind: EMPTY_STMT
    text: ";"
    tail: "\n}\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\t\tprivate "
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule02"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule02"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"ExchangeRate\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule02"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"exchangeRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule02"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " \t"
              }
              child {
                kind: NAME
                text: "forward"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"forwardPoints\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "spot"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"spotRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "!"
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "forward"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "!="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "&amp;&amp;"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "spot"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"If forwardPoints exists then spotRate should also exist.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule03"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule03"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"ExchangeRate\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule03"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"exchangeRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule03"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " \t"
              }
              child {
                kind: NAME
                text: "forward"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"forwardPoints\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "spot"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"spotRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "rate"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"rate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "rate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "forward"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "spot"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ToDecimal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "rate"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "."
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equals"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDecimal"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "spot"
                                }
                              }
                              tail: ")"
                            }
                          }
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "+"
                          tail: " "
                        }
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDecimal"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "forward"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Sum of spotRate and forwardPoints does not equal rate.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "rate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule04"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule04"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"ExchangeRate\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule04"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"exchangeRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule04"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " \t"
              }
              child {
                kind: NAME
                text: "baseCcy"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"sideRates\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"baseCurrency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy1"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"quotedCurrencyPair\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy2"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"quotedCurrencyPair\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency2\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "baseCcy"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy2"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy2"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "baseCcy"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy1"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "baseCcy"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy2"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                text: "{\n\t\t\t\t\t"
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        text: "errorHandler"
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "\"305\""
                              literal {
                                type: string_type
                              }
                            }
                          }
                          tail: ", "
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "context"
                            }
                          }
                          tail: ",\n\t\t\t\t\t\t\t"
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: LITERAL
                              text: "\"The side rate base currency must not be one of the trade currencies.\""
                              literal {
                                type: string_type
                              }
                            }
                          }
                          tail: ",\n\t\t\t\t\t\t\t"
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "name"
                            }
                          }
                          tail: ", "
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "ToToken"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "baseCcy"
                                    }
                                  }
                                  tail: ")"
                                }
                              }
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                  tail: "\n"
                }
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "result"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "false"
                      literal {
                        type: boolean_type
                      }
                    }
                    tail: ";"
                  }
                  tail: "\n}"
                }
              }
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule05"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule05"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"ExchangeRate\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule05"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"exchangeRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule05"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy"
                tail: "\t\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"quotedCurrencyPair\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " \t"
              }
              child {
                kind: NAME
                text: "ccy1"
                tail: " \t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"sideRates\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1SideRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy1"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy1"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The side rate currency1 \'\""
                        tail: " "
                        literal {
                          type: string_type
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "+"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "ccy1"
                              }
                            }
                            tail: ")"
                          }
                        }
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "+"
                        tail: "\n\t\t\t\t\t\t"
                      }
                      child {
                        kind: LITERAL
                        text: "\"\' must be the same as trade currency1 \'\""
                        tail: " "
                        literal {
                          type: string_type
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "+"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "ccy"
                              }
                            }
                            tail: ")"
                          }
                        }
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "+"
                        tail: " "
                      }
                      child {
                        kind: LITERAL
                        text: "\"\'.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule06"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule06"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"ExchangeRate\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule06"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"exchangeRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule06"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy"
                tail: "\t\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"quotedCurrencyPair\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency2\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " \t"
              }
              child {
                kind: NAME
                text: "ccy1"
                tail: " \t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"sideRates\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency2SideRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy1"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy1"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The side rate currency2 \'\""
                        tail: " "
                        literal {
                          type: string_type
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "+"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "ccy1"
                              }
                            }
                            tail: ")"
                          }
                        }
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "+"
                        tail: "\n\t\t\t\t\t\t"
                      }
                      child {
                        kind: LITERAL
                        text: "\"\' must be the same as trade currency2 \'\""
                        tail: " "
                        literal {
                          type: string_type
                        }
                      }
                      child {
                        kind: OPERATOR
                        text: "+"
                        tail: " "
                      }
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "ccy"
                              }
                            }
                            tail: ")"
                          }
                        }
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "+"
                        tail: " "
                      }
                      child {
                        kind: LITERAL
                        text: "\"\'.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule07"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule07"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXAmericanTrigger\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule07"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxAmericanTrigger\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule07"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxAmericanTrigger\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule07"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t\t"
              }
              child {
                kind: NAME
                text: "rate"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"triggerRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "rate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsPositive"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "rate"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The trigger rate must be positive\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "rate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule08"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule08"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXAmericanTrigger\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule08"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxAmericanTrigger\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule08"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxAmericanTrigger\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule08"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "start"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationStartDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "end"
                tail: "\t\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationEndDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "start"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "end"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "LessOrEqual"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "start"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "end"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The observationStartDate must not be after the observationEndDate\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule09"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule09"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXAverageRateObservationSchedule\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule09"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxAverageRateObservationSchedule\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule09"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"averageRateObservationSchedule\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule09"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "start"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationStartDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "end"
                tail: "\t\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationEndDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "start"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "end"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "LessOrEqual"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "start"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "end"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The observationStartDate must not be after the observationEndDate\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule10"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule10"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXAverageRateObservationSchedule\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule10"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxAverageRateObservationSchedule\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule10"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"averageRateObservationSchedule\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule10"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "start"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationStartDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "end"
                tail: "\t\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationEndDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "period"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"calculationPeriodFrequency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "start"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "end"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "period"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ToInterval"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "period"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "."
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "DividesDates"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "start"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "end"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The observation period is not a multiple of the calculationPeriodFrequency\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule11"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule11"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXAverageRateOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule11"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxAverageRateOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule11"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxAverageRateOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule11"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "nodes"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Paths"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observedRates\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "int"
                }
                tail: "\t\t\t"
              }
              child {
                kind: NAME
                text: "limit"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "nodes"
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: NAME
                      text: "Count"
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "Date"
                    tail: " "
                  }
                  child {
                    kind: INDEX
                    text: "[]"
                  }
                }
                tail: "\t\t"
              }
              child {
                kind: NAME
                text: "dates"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "new"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "Date"
                      tail: " "
                    }
                    child {
                      kind: INDEX
                      text: "["
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "limit"
                        }
                        tail: "]"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: FOR
            text: "for "
            child {
              kind: CONTROL
              text: "("
              child {
                kind: INIT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "int"
                    }
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "count"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                  tail: ";"
                }
                tail: " "
              }
              child {
                kind: CONDITION
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "count"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "limit"
                  }
                  tail: ";"
                }
                tail: " "
              }
              child {
                kind: INCR
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "count"
                  }
                }
                tail: ")"
              }
              tail: "\n\t\t\t\t\t"
            }
            child {
              kind: BLOCK
              child {
                kind: EXPR_STMT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "dates"
                      tail: " "
                    }
                    child {
                      kind: INDEX
                      text: "["
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "count"
                        }
                        tail: "]"
                      }
                    }
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "ToDate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodes"
                              tail: " "
                            }
                            child {
                              kind: INDEX
                              text: "["
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "count"
                                }
                                tail: "]"
                              }
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                  tail: ";"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: FOR
            text: "for "
            child {
              kind: CONTROL
              text: "("
              child {
                kind: INIT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "int"
                    }
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "outer"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                  tail: ";"
                }
                tail: " "
              }
              child {
                kind: CONDITION
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "outer"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "("
                  }
                  child {
                    kind: NAME
                    text: "limit"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "-"
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "1"
                    literal {
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: ")"
                  }
                  tail: ";"
                }
                tail: " "
              }
              child {
                kind: INCR
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "outer"
                  }
                }
                tail: ")"
              }
              tail: " "
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: FOR
                text: "for "
                child {
                  kind: CONTROL
                  text: "("
                  child {
                    kind: INIT
                    child {
                      kind: DECL
                      child {
                        kind: TYPE
                        child {
                          kind: NAME
                          text: "int"
                        }
                        tail: " "
                      }
                      child {
                        kind: NAME
                        text: "inner"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "outer"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "1"
                            literal {
                            }
                          }
                        }
                      }
                      tail: ";"
                    }
                    tail: " "
                  }
                  child {
                    kind: CONDITION
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "inner"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        text: "limit"
                      }
                      tail: ";"
                    }
                    tail: " "
                  }
                  child {
                    kind: INCR
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "inner"
                      }
                    }
                    tail: ")"
                  }
                  tail: " "
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t\t"
                  child {
                    kind: IF
                    text: "if "
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "Equal"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "dates"
                                    tail: " "
                                  }
                                  child {
                                    kind: INDEX
                                    text: "["
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "outer"
                                      }
                                      tail: "]"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "dates"
                                    tail: " "
                                  }
                                  child {
                                    kind: INDEX
                                    text: "["
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "inner"
                                      }
                                      tail: "]"
                                    }
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                    child {
                      kind: THEN
                      text: "\n\t\t\t\t\t\t\t"
                      child {
                        kind: BLOCK
                        child {
                          kind: EXPR_STMT
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "errorHandler"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"305\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                  tail: ", "
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "nodes"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "inner"
                                          }
                                          tail: "]"
                                        }
                                      }
                                    }
                                  }
                                  tail: ",\n\t\t\t\t\t\t\t\t\t"
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"Duplicate observation date\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                  tail: ",\n\t\t\t\t\t\t\t\t\t"
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "name"
                                    }
                                  }
                                  tail: ", "
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "ToToken"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              child {
                                                kind: NAME
                                                text: "nodes"
                                                tail: " "
                                              }
                                              child {
                                                kind: INDEX
                                                text: "["
                                                child {
                                                  kind: EXPR
                                                  child {
                                                    kind: NAME
                                                    text: "inner"
                                                  }
                                                  tail: "]"
                                                }
                                              }
                                            }
                                          }
                                          tail: ")"
                                        }
                                      }
                                    }
                                  }
                                  tail: ")"
                                }
                              }
                            }
                            tail: ";"
                          }
                        }
                      }
                    }
                    tail: "\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "result"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                        tail: " "
                      }
                      child {
                        kind: LITERAL
                        text: "false"
                        literal {
                          type: boolean_type
                        }
                      }
                      tail: ";"
                    }
                    tail: "\n}"
                  }
                }
                tail: "\n}"
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "dates"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "null"
                literal {
                  type: null_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule12"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule12"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXAverageRateOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule12"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxAverageRateOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule12"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxAverageRateOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule12"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "schedule"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"averageRateObservationSchedule\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "schedule"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "start"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "schedule"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationStartDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "end"
                tail: "\t\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "schedule"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationEndDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "freq"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "schedule"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"calculationPeriodFrequency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "roll"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "freq"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"rollConvention\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "start"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "end"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "freq"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "roll"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "Date"
                    tail: " "
                  }
                  child {
                    kind: INDEX
                    text: "[]"
                  }
                }
                tail: " \t"
              }
              child {
                kind: NAME
                text: "dates"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "GenerateSchedule"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToDate"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "start"
                                  }
                                }
                                tail: ")"
                              }
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToDate"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "end"
                                  }
                                }
                                tail: ")"
                              }
                            }
                          }
                        }
                        tail: ",\n\t\t\t\t\t\t"
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "ToInterval"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "freq"
                                  }
                                }
                                tail: ")"
                              }
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              child {
                                kind: NAME
                                text: "DateRoll"
                              }
                              child {
                                kind: OPERATOR
                                text: "."
                              }
                              child {
                                kind: NAME
                                text: "ForName"
                              }
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: CALL
                                    child {
                                      kind: NAME
                                      text: "ToToken"
                                      tail: " "
                                    }
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "roll"
                                          }
                                        }
                                        tail: ")"
                                      }
                                    }
                                  }
                                }
                                tail: ")"
                              }
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "nodes"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Paths"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observedRates\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: FOREACH
            text: "foreach "
            child {
              kind: CONTROL
              text: "("
              child {
                kind: INIT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "observed"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "nodes"
                      }
                    }
                  }
                }
                tail: ")"
              }
              tail: " "
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "Date"
                    }
                    tail: "\t\t"
                  }
                  child {
                    kind: NAME
                    text: "date"
                    tail: " \t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToDate"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "observed"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                  }
                  tail: ";"
                }
                tail: "\n\t\t\t\t\t"
              }
              child {
                kind: DECL_STMT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "bool"
                    }
                    tail: "\t\t"
                  }
                  child {
                    kind: NAME
                    text: "found"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "false"
                        literal {
                          type: boolean_type
                        }
                      }
                    }
                  }
                  tail: ";"
                }
                tail: "\n\t\t\t\t\t"
              }
              child {
                kind: FOREACH
                text: "foreach "
                child {
                  kind: CONTROL
                  text: "("
                  child {
                    kind: INIT
                    child {
                      kind: DECL
                      child {
                        kind: TYPE
                        child {
                          kind: NAME
                          text: "Date"
                        }
                        tail: " "
                      }
                      child {
                        kind: NAME
                        text: "match"
                        tail: " "
                      }
                      child {
                        kind: RANGE
                        text: "in "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "dates"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                  tail: " "
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t\t"
                  child {
                    kind: IF
                    text: "if "
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "Equal"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "date"
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "match"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                    child {
                      kind: THEN
                      text: " "
                      child {
                        kind: BLOCK
                        text: "{\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR_STMT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "found"
                              tail: " "
                            }
                            child {
                              kind: OPERATOR
                              text: "="
                              tail: " "
                            }
                            child {
                              kind: LITERAL
                              text: "true"
                              literal {
                                type: boolean_type
                              }
                            }
                            tail: ";"
                          }
                          tail: "\n\t\t\t\t\t\t\t"
                        }
                        child {
                          kind: BREAK
                          text: "break;"
                          tail: "\n}"
                        }
                      }
                    }
                    tail: "\n\t\t\t\t\t}"
                  }
                }
                tail: "\n\n\t\t\t\t\t"
              }
              child {
                kind: IF
                text: "if "
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: NAME
                      text: "found"
                    }
                    tail: ")"
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t\t\t"
                    child {
                      kind: EXPR_STMT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "errorHandler"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"305\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "observed"
                                }
                              }
                              tail: ",\n\t\t\t\t\t\t\t\t"
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"Observation date \'\""
                                  tail: " "
                                  literal {
                                    type: string_type
                                  }
                                }
                                child {
                                  kind: OPERATOR
                                  text: "+"
                                  tail: " "
                                }
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "ToToken"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "observed"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                  tail: " "
                                }
                                child {
                                  kind: OPERATOR
                                  text: "+"
                                  tail: "\n\t\t\t\t\t\t\t\t"
                                }
                                child {
                                  kind: LITERAL
                                  text: "\"\' does not match with the schedule.\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ",\n\t\t\t\t\t\t\t\t"
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "name"
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "ToToken"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "observed"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                        tail: ";"
                      }
                      tail: "\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: EXPR_STMT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "result"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "="
                          tail: " "
                        }
                        child {
                          kind: LITERAL
                          text: "false"
                          literal {
                            type: boolean_type
                          }
                        }
                        tail: ";"
                      }
                      tail: "\n}"
                    }
                  }
                }
                tail: "\n}"
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "dates"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "null"
                literal {
                  type: null_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule13"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule13"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXAverageRateOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule13"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxAverageRateOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule13"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxAverageRateOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule13"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "schedule"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Paths"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"averageRateObservationDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "int"
                }
                tail: "\t\t\t"
              }
              child {
                kind: NAME
                text: "limit"
                tail: "\t\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: TERNARY
                    child {
                      kind: CONDITION
                      child {
                        kind: EXPR
                        child {
                          kind: OPERATOR
                          text: "("
                        }
                        child {
                          kind: NAME
                          text: "schedule"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "!="
                          tail: " "
                        }
                        child {
                          kind: LITERAL
                          text: "null"
                          literal {
                            type: null_type
                          }
                        }
                        child {
                          kind: OPERATOR
                          text: ")"
                        }
                        tail: " ?"
                      }
                    }
                    child {
                      kind: THEN
                      text: " "
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "schedule"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Count"
                          }
                        }
                        tail: " "
                      }
                    }
                    child {
                      kind: ELSE
                      text: ": "
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "0"
                          literal {
                          }
                        }
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "limit"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "0"
                  literal {
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "Date"
                    tail: " "
                  }
                  child {
                    kind: INDEX
                    text: "[]"
                  }
                }
                tail: "\t\t"
              }
              child {
                kind: NAME
                text: "dates"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "new"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "Date"
                      tail: " "
                    }
                    child {
                      kind: INDEX
                      text: "["
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "limit"
                        }
                        tail: "]"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: FOR
            text: "for "
            child {
              kind: CONTROL
              text: "("
              child {
                kind: INIT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "int"
                    }
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "count"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                  tail: ";"
                }
                tail: " "
              }
              child {
                kind: CONDITION
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "count"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "limit"
                  }
                  tail: ";"
                }
                tail: " "
              }
              child {
                kind: INCR
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "count"
                  }
                }
                tail: ")"
              }
              tail: "\n\t\t\t\t\t"
            }
            child {
              kind: BLOCK
              child {
                kind: EXPR_STMT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "dates"
                      tail: " "
                    }
                    child {
                      kind: INDEX
                      text: "["
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "count"
                        }
                        tail: "]"
                      }
                    }
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "ToDate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "schedule"
                              tail: " "
                            }
                            child {
                              kind: INDEX
                              text: "["
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "count"
                                }
                                tail: "]"
                              }
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                  tail: ";"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "nodes"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Paths"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observedRates\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: FOREACH
            text: "foreach "
            child {
              kind: CONTROL
              text: "("
              child {
                kind: INIT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "observed"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "nodes"
                      }
                    }
                  }
                }
                tail: ")"
              }
              tail: " "
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "Date"
                    }
                    tail: "\t\t"
                  }
                  child {
                    kind: NAME
                    text: "date"
                    tail: " \t "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToDate"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "observed"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                  }
                  tail: ";"
                }
                tail: "\n\t\t\t\t\t"
              }
              child {
                kind: DECL_STMT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "bool"
                    }
                    tail: "\t\t"
                  }
                  child {
                    kind: NAME
                    text: "found"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "false"
                        literal {
                          type: boolean_type
                        }
                      }
                    }
                  }
                  tail: ";"
                }
                tail: "\n\t\t\t\t\t"
              }
              child {
                kind: FOR
                text: "for "
                child {
                  kind: CONTROL
                  text: "("
                  child {
                    kind: INIT
                    child {
                      kind: DECL
                      child {
                        kind: TYPE
                        child {
                          kind: NAME
                          text: "int"
                        }
                        tail: " "
                      }
                      child {
                        kind: NAME
                        text: "match"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "0"
                            literal {
                            }
                          }
                        }
                      }
                      tail: ";"
                    }
                    tail: " "
                  }
                  child {
                    kind: CONDITION
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "match"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "dates"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "Length"
                        }
                      }
                      tail: ";"
                    }
                    tail: " "
                  }
                  child {
                    kind: INCR
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "match"
                      }
                    }
                    tail: ")"
                  }
                  tail: " "
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t\t"
                  child {
                    kind: IF
                    text: "if "
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "Equal"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "date"
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "dates"
                                    tail: " "
                                  }
                                  child {
                                    kind: INDEX
                                    text: "["
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "match"
                                      }
                                      tail: "]"
                                    }
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                    child {
                      kind: THEN
                      text: " "
                      child {
                        kind: BLOCK
                        text: "{\n\t\t\t\t\t\t\t"
                        child {
                          kind: EXPR_STMT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "found"
                              tail: " "
                            }
                            child {
                              kind: OPERATOR
                              text: "="
                              tail: " "
                            }
                            child {
                              kind: LITERAL
                              text: "true"
                              literal {
                                type: boolean_type
                              }
                            }
                            tail: ";"
                          }
                          tail: "\n\t\t\t\t\t\t\t"
                        }
                        child {
                          kind: BREAK
                          text: "break;"
                          tail: "\n\t\t\t\t\t\t}"
                        }
                      }
                    }
                    tail: "\n\t\t\t\t\t}"
                  }
                }
                tail: "\n\t\t\t\t\t"
              }
              child {
                kind: IF
                text: "if "
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    child {
                      kind: OPERATOR
                      text: "!"
                    }
                    child {
                      kind: NAME
                      text: "found"
                    }
                    tail: ")"
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    text: "{\n\t\t\t\t\t\t"
                    child {
                      kind: EXPR_STMT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "errorHandler"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"305\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "observed"
                                }
                              }
                              tail: ",\n\t\t\t\t\t\t\t\t"
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"Observation date \'\""
                                  tail: " "
                                  literal {
                                    type: string_type
                                  }
                                }
                                child {
                                  kind: OPERATOR
                                  text: "+"
                                  tail: " "
                                }
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "ToToken"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "observed"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                  tail: " "
                                }
                                child {
                                  kind: OPERATOR
                                  text: "+"
                                  tail: "\n\t\t\t\t\t\t\t\t"
                                }
                                child {
                                  kind: LITERAL
                                  text: "\"\' does not match with a defined observationDate.\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ",\n\t\t\t\t\t\t\t\t"
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "name"
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "ToToken"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "observed"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                        tail: ";"
                      }
                      tail: "\n\n\t\t\t\t\t\t"
                    }
                    child {
                      kind: EXPR_STMT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "result"
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "="
                          tail: " "
                        }
                        child {
                          kind: LITERAL
                          text: "false"
                          literal {
                            type: boolean_type
                          }
                        }
                        tail: ";"
                      }
                      tail: "\n\t\t\t\t\t}"
                    }
                  }
                }
                tail: "\n}"
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "dates"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "null"
                literal {
                  type: null_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule14"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule14"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXBarrier\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule14"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxBarrier\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule14"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxBarrier\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule14"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "start"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationStartDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "end"
                tail: "\t\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationEndDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "start"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "end"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "LessOrEqual"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "start"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "end"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The observationStartDate must not be after the observationEndDate\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule15"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule15"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXBarrierOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule15"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxBarrierOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule15"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxBarrierOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule15"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "rate"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"spotRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "rate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsPositive"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "rate"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The spot rate must be positive\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "rate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule16"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule16"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXDigitalOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule16"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxDigitalOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule16"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxDigitalOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule16"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "rate"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"spotRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "rate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsPositive"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "rate"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The spot rate must be positive\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "rate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule17"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule17"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXEuropeanTrigger\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule17"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxEuropeanTrigger\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule17"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxEuropeanTrigger\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule17"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "rate"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"triggerRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "rate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsPositive"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "rate"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The trigger rate must be positive\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "rate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule18"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule18"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXLeg\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule18"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxLeg\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule18"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSingleLeg\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule18"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy1Pay"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"exchangedCurrency1\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"payerPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy1Rec"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"exchangedCurrency1\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"receiverPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy2Pay"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"exchangedCurrency2\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"payerPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy2Rec"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"exchangedCurrency2\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"receiverPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy1Pay"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy1Rec"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy2Pay"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy2Rec"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "ccy1Pay"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "ccy2Rec"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "&amp;&amp;"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "ccy2Pay"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "ccy1Rec"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Exchanged currency payers and receivers don\'t match.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule19"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule19"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXLeg\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule19"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxLeg\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule19"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSingleLeg\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule19"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy1"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"exchangedCurrency1\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"paymentAmount\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy2"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"exchangedCurrency2\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"paymentAmount\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy1"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy2"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "!"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsSameCurrency"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy1"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy2"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Exchanged currencies must be different.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule20"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule20"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXLeg\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule20"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxLeg\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule20"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSingleLeg\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule20"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "date1"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1ValueDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "date2"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency2ValueDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "date1"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "date2"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "NotEqual"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "date1"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "date2"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"currency1ValueDate and currency2ValueDate must be different.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule21"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule21"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXLeg\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule21"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxLeg\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule21"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSingleLeg\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule21"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ndf"
                tail: "\t\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"nonDeliverableForward\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "fwd"
                tail: "\t\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"exchangeRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"forwardPoints\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ndf"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "fwd"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "!="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Non-deliverable forward does not specify forwardPoints.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule22"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule22"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXOptionLeg\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule22"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxOptionLeg\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule22"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSimpleOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: OPERATOR
            text: "&amp;"
            tail: " "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule22"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxBarrierOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule22"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "buyer"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"buyerPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "seller"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"sellerPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "payer"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxOptionPremium\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"payerPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "receiver"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxOptionPremium\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"receiverPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "buyer"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "seller"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "payer"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "receiver"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "buyer"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "payer"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "&amp;&amp;"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "seller"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "receiver"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Premium payer and receiver don\'t match with option buyer and seller.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule23"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule23"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXOptionLeg\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule23"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxOptionLeg\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule23"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSimpleOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: OPERATOR
            text: "&amp;"
            tail: " "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule23"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxBarrierOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule23"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy1"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"putCurrencyAmount\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy2"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"callCurrencyAmount\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy1"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy2"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "!"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsSameCurrency"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy1"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy2"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Put and call currencies must be different.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule24"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule24"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXStrikePrice\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule24"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxStrikePrice\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule24"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxStrikePrice\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule24"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "rate"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"rate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "rate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsPositive"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "rate"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The rate must be positive\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "rate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule25"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule25"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXSwap\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule25"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxSwap\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule25"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSwap\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule25"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "legs"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Paths"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSingleLeg\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Count"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "legs"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "&gt;="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "2"
                  literal {
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"FX swaps must have at least two legs.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule26"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule26"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXSwap\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule26"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxSwap\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule26"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSwap\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule26"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "legs"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Paths"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSingleLeg\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Count"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "legs"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "!="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "2"
                  literal {
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " \t"
              }
              child {
                kind: NAME
                text: "date1"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "legs"
                              tail: " "
                            }
                            child {
                              kind: INDEX
                              text: "["
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "0"
                                  literal {
                                  }
                                }
                                tail: "]"
                              }
                            }
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "as"
                            tail: " "
                          }
                          child {
                            kind: NAME
                            text: "XmlElement"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"valueDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " \t"
              }
              child {
                kind: NAME
                text: "date2"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "legs"
                              tail: " "
                            }
                            child {
                              kind: INDEX
                              text: "["
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "1"
                                  literal {
                                  }
                                }
                                tail: "]"
                              }
                            }
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "as"
                            tail: " "
                          }
                          child {
                            kind: NAME
                            text: "XmlElement"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"valueDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "NotEqual"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "date1"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "date2"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"FX swaps legs must settle on different days.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule27"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule27"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"QuotedCurrencyPair\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule27"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"quotedCurrencyPair\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule27"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy1"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy2"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency2\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy1"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy2"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "!"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsSameCurrency"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy1"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy2"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Currencies must be different.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule28"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule28"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"SideRate\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule28"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1SideRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: OPERATOR
            text: "&amp;"
            tail: " "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule28"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency2SideRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule28"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t\t"
              }
              child {
                kind: NAME
                text: "rate"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"rate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "rate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsPositive"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "rate"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The rate must be positive\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "rate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule29"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule29"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"SideRate\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule29"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1SideRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: OPERATOR
            text: "&amp;"
            tail: " "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule29"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency2SideRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule29"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " \t"
              }
              child {
                kind: NAME
                text: "forward"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"forwardPoints\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "spot"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"spotRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "!"
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "forward"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "!="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "&amp;&amp;"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "spot"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"If forwardPoints exists then spotRate should also exist.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule30"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule30"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"SideRate\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule30"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1SideRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
            tail: "\n\t\t\t\t\t"
          }
          child {
            kind: OPERATOR
            text: "&amp;"
            tail: " "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule30"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency2SideRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule30"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " \t"
              }
              child {
                kind: NAME
                text: "forward"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"forwardPoints\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "spot"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"spotRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "rate"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"rate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "rate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "forward"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "spot"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ToDecimal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "rate"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "."
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equals"
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDecimal"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "spot"
                                }
                              }
                              tail: ")"
                            }
                          }
                          tail: " "
                        }
                        child {
                          kind: OPERATOR
                          text: "+"
                          tail: " "
                        }
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDecimal"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "forward"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Sum of spotRate and forwardPoints does not equal rate.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "rate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule31"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule31"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"SideRates\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule31"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"sideRates\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule31"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " \t"
              }
              child {
                kind: NAME
                text: "baseCcy"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"baseCurrency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy1"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1SideRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy2"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency2SideRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "baseCcy"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy1"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy2"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: OPERATOR
                  text: "!"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsSameCurrency"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "baseCcy"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy1"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "&amp;&amp;"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "!"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsSameCurrency"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "baseCcy"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy2"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The base currency must be different from the side rate currencies.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "baseCcy"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule32"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule32"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"TermDeposit\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule32"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"termDeposit\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule32"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "payer"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"initialPayerReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "receiver"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"initialReceiverReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "payer"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "receiver"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "NotEqual"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "payer"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ",\n\t\t\t\t\t\t\t  "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "receiver"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The initial payer and receiver must be different\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "payer"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "GetAttribute"
                          }
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"href\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule33"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule33"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"TermDeposit\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule33"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"termDeposit\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule33"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "start"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"startDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "maturity"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"maturityDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "start"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "maturity"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Less"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "start"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "maturity"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The maturity date must be after the start date\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "maturity"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule34"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule34"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"TermDeposit\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule34"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"termDeposit\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule34"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "amount"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"principal\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"amount\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "amount"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsPositive"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "amount"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The principal amount must be positive\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "amount"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule35"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule35"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"TermDeposit\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule35"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"termDeposit\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule35"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "rate"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fixedRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "rate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsPositive"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "rate"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The fixed rate must be positive\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "rate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule36"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule36"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"Trade\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule36"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"trade\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule36"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "tradeDate"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"tradeHeader\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"tradeDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "expiryDate"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxAverageRateOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"expiryDateTime\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"expiryDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "tradeDate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "expiryDate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Less"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "tradeDate"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "expiryDate"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Expiry date must be after trade date.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "expiryDate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule37"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule37"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"Trade\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule37"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"trade\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule37"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "tradeDate"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"tradeHeader\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"tradeDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "expiryDate"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxBarrierOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"expiryDateTime\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"expiryDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "tradeDate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "expiryDate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Less"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "tradeDate"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "expiryDate"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Expiry date must be after trade date.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "expiryDate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule38"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule38"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"Trade\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule38"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"trade\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule38"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "tradeDate"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"tradeHeader\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"tradeDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "expiryDate"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxDigitalOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"expiryDateTime\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"expiryDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "tradeDate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "expiryDate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Less"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "tradeDate"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "ToDate"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "expiryDate"
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Expiry date must be after trade date.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "expiryDate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule39"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule39"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"Trade\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule39"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"trade\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule39"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "tradeDate"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"tradeHeader\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"tradeDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "valueDate"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSingleLeg\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"valueDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "value1Date"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSingleLeg\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1ValueDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "value2Date"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSingleLeg\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency2ValueDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "tradeDate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "!="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                text: "{\n\t\t\t\t\t"
                child {
                  kind: IF
                  text: "if "
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "valueDate"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "!="
                        tail: " "
                      }
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    text: " "
                    child {
                      kind: BLOCK
                      text: "{\n\t\t\t\t\t\t"
                      child {
                        kind: IF
                        text: "if "
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "Less"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "ToDate"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "tradeDate"
                                            }
                                          }
                                          tail: ")"
                                        }
                                      }
                                    }
                                  }
                                  tail: ", "
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "ToDate"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "valueDate"
                                            }
                                          }
                                          tail: ")"
                                        }
                                      }
                                    }
                                  }
                                  tail: ")"
                                }
                              }
                            }
                            tail: ")"
                          }
                        }
                        child {
                          kind: THEN
                          text: " "
                          child {
                            kind: BLOCK
                            child {
                              kind: CONTINUE
                              text: "continue;"
                            }
                          }
                        }
                        tail: "\n\t\t\t\t\t\t"
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "errorHandler"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"305\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                                tail: ", "
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "context"
                                  }
                                }
                                tail: ",\n\t\t\t\t\t\t\t\t"
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"value date must be after trade date.\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                                tail: ",\n\t\t\t\t\t\t\t\t"
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "name"
                                  }
                                }
                                tail: ", "
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: CALL
                                    child {
                                      kind: NAME
                                      text: "ToToken"
                                      tail: " "
                                    }
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "valueDate"
                                          }
                                        }
                                        tail: ")"
                                      }
                                    }
                                  }
                                }
                                tail: ")"
                              }
                            }
                          }
                          tail: ";"
                        }
                        tail: "\n\n\t\t\t\t\t\t"
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "result"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "false"
                            literal {
                              type: boolean_type
                            }
                          }
                          tail: ";"
                        }
                        tail: "\n\t\t\t\t\t}"
                      }
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: IF
                  text: "if "
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "value1Date"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "!="
                        tail: " "
                      }
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    text: " "
                    child {
                      kind: BLOCK
                      text: "{\n\t\t\t\t\t\t"
                      child {
                        kind: IF
                        text: "if "
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "Less"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "ToDate"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "tradeDate"
                                            }
                                          }
                                          tail: ")"
                                        }
                                      }
                                    }
                                  }
                                  tail: ", "
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "ToDate"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "value1Date"
                                            }
                                          }
                                          tail: ")"
                                        }
                                      }
                                    }
                                  }
                                  tail: ")"
                                }
                              }
                            }
                            tail: ")"
                          }
                        }
                        child {
                          kind: THEN
                          text: " "
                          child {
                            kind: BLOCK
                            child {
                              kind: CONTINUE
                              text: "continue;"
                            }
                          }
                        }
                        tail: "\n\n\t\t\t\t\t\t"
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "errorHandler"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"305\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                                tail: ", "
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "context"
                                  }
                                }
                                tail: ",\n\t\t\t\t\t\t\t\t"
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"value1date must be after trade date.\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                                tail: ",\n\t\t\t\t\t\t\t\t"
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "name"
                                  }
                                }
                                tail: ", "
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: CALL
                                    child {
                                      kind: NAME
                                      text: "ToToken"
                                      tail: " "
                                    }
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "value1Date"
                                          }
                                        }
                                        tail: ")"
                                      }
                                    }
                                  }
                                }
                                tail: ")"
                              }
                            }
                          }
                          tail: ";"
                        }
                        tail: "\n\n\t\t\t\t\t\t"
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "result"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "false"
                            literal {
                              type: boolean_type
                            }
                          }
                          tail: ";"
                        }
                        tail: "\n\t\t\t\t\t}"
                      }
                    }
                  }
                  tail: "\n\n\t\t\t\t\t"
                }
                child {
                  kind: IF
                  text: "if "
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "value2Date"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "!="
                        tail: " "
                      }
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    text: " "
                    child {
                      kind: BLOCK
                      text: "{\n\t\t\t\t\t\t"
                      child {
                        kind: IF
                        text: "if "
                        child {
                          kind: CONDITION
                          text: "("
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "Less"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "ToDate"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "tradeDate"
                                            }
                                          }
                                          tail: ")"
                                        }
                                      }
                                    }
                                  }
                                  tail: ", "
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "ToDate"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              text: "value2Date"
                                            }
                                          }
                                          tail: ")"
                                        }
                                      }
                                    }
                                  }
                                  tail: ")"
                                }
                              }
                            }
                            tail: ")"
                          }
                        }
                        child {
                          kind: THEN
                          text: " "
                          child {
                            kind: BLOCK
                            child {
                              kind: CONTINUE
                              text: "continue;"
                            }
                          }
                        }
                        tail: "\n\n\t\t\t\t\t\t"
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: CALL
                            child {
                              kind: NAME
                              text: "errorHandler"
                              tail: " "
                            }
                            child {
                              kind: ARGUMENT_LIST
                              text: "("
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"305\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                                tail: ", "
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "context"
                                  }
                                }
                                tail: ",\n\t\t\t\t\t\t\t\t"
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: LITERAL
                                    text: "\"value2date must be after trade date.\""
                                    literal {
                                      type: string_type
                                    }
                                  }
                                }
                                tail: ",\n\t\t\t\t\t\t\t\t"
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: NAME
                                    text: "name"
                                  }
                                }
                                tail: ", "
                              }
                              child {
                                kind: ARGUMENT
                                child {
                                  kind: EXPR
                                  child {
                                    kind: CALL
                                    child {
                                      kind: NAME
                                      text: "ToToken"
                                      tail: " "
                                    }
                                    child {
                                      kind: ARGUMENT_LIST
                                      text: "("
                                      child {
                                        kind: ARGUMENT
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "value2Date"
                                          }
                                        }
                                        tail: ")"
                                      }
                                    }
                                  }
                                }
                                tail: ")"
                              }
                            }
                          }
                          tail: ";"
                        }
                        tail: "\n\n\t\t\t\t\t\t"
                      }
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "result"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "false"
                            literal {
                              type: boolean_type
                            }
                          }
                          tail: ";"
                        }
                        tail: "\n\t\t\t\t\t}"
                      }
                    }
                  }
                  tail: "\n\t\t\t\t}"
                }
              }
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule40"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule40"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"Trade\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule40"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"trade\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule40"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "tradeDate"
                tail: " \t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"tradeHeader\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"tradeDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "legs"
                tail: "\t  \t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Paths"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSwap\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxSingleLeg\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: FOREACH
            text: "foreach "
            child {
              kind: CONTROL
              text: "("
              child {
                kind: INIT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "leg"
                    tail: " "
                  }
                  child {
                    kind: RANGE
                    text: "in "
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "legs"
                      }
                    }
                  }
                }
                tail: ")"
              }
              tail: " "
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: DECL_STMT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                    tail: "\t"
                  }
                  child {
                    kind: NAME
                    text: "valueDate"
                    tail: " \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "leg"
                              }
                            }
                            tail: ", "
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"valueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                  }
                  tail: ";"
                }
                tail: "\n\t\t\t\t\t"
              }
              child {
                kind: DECL_STMT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                    tail: "\t"
                  }
                  child {
                    kind: NAME
                    text: "value1Date"
                    tail: " \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "leg"
                              }
                            }
                            tail: ", "
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency1ValueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                  }
                  tail: ";"
                }
                tail: "\n\t\t\t\t\t"
              }
              child {
                kind: DECL_STMT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "XmlElement"
                    }
                    tail: "\t"
                  }
                  child {
                    kind: NAME
                    text: "value2Date"
                    tail: " \t"
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "XPath"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Path"
                          }
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "leg"
                              }
                            }
                            tail: ", "
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: LITERAL
                                text: "\"currency2ValueDate\""
                                literal {
                                  type: string_type
                                }
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                  }
                  tail: ";"
                }
                tail: "\n"
              }
              child {
                kind: IF
                text: "if "
                child {
                  kind: CONDITION
                  text: "("
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "tradeDate"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "!="
                      tail: " "
                    }
                    child {
                      kind: LITERAL
                      text: "null"
                      literal {
                        type: null_type
                      }
                    }
                    tail: ")"
                  }
                }
                child {
                  kind: THEN
                  text: " "
                  child {
                    kind: BLOCK
                    text: "{\n"
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "valueDate"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "!="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                          tail: ")"
                        }
                      }
                      child {
                        kind: THEN
                        text: " "
                        child {
                          kind: BLOCK
                          text: "{\n\t\t\t\t\t\t\t"
                          child {
                            kind: IF
                            text: "if "
                            child {
                              kind: CONDITION
                              text: "("
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "Less"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "tradeDate"
                                                }
                                              }
                                              tail: ")"
                                            }
                                          }
                                        }
                                      }
                                      tail: ", "
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "valueDate"
                                                }
                                              }
                                              tail: ")"
                                            }
                                          }
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                                tail: ")"
                              }
                            }
                            child {
                              kind: THEN
                              text: " "
                              child {
                                kind: BLOCK
                                child {
                                  kind: CONTINUE
                                  text: "continue;"
                                }
                              }
                            }
                            tail: "\n\t\t\t\t\t\t\t"
                          }
                          child {
                            kind: EXPR_STMT
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "errorHandler"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"305\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                    tail: ", "
                                  }
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "leg"
                                      }
                                    }
                                    tail: ",\n"
                                  }
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"value date must be after trade date.\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                    tail: ",\n\t\t\t\t\t\t\t\t\t"
                                  }
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "name"
                                      }
                                    }
                                    tail: ", "
                                  }
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          text: "ToToken"
                                          tail: " "
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: NAME
                                                text: "valueDate"
                                              }
                                            }
                                            tail: ")"
                                          }
                                        }
                                      }
                                    }
                                    tail: ")"
                                  }
                                }
                              }
                              tail: ";"
                            }
                            tail: "\n"
                          }
                          child {
                            kind: EXPR_STMT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "result"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "false"
                                literal {
                                  type: boolean_type
                                }
                              }
                              tail: ";"
                            }
                            tail: "\n}"
                          }
                        }
                      }
                      tail: "\n"
                    }
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "value1Date"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "!="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                          tail: ")"
                        }
                      }
                      child {
                        kind: THEN
                        text: " "
                        child {
                          kind: BLOCK
                          text: "{\n\t\t\t\t\t\t\t"
                          child {
                            kind: IF
                            text: "if "
                            child {
                              kind: CONDITION
                              text: "("
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "Less"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "tradeDate"
                                                }
                                              }
                                              tail: ")"
                                            }
                                          }
                                        }
                                      }
                                      tail: ", "
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "value1Date"
                                                }
                                              }
                                              tail: ")"
                                            }
                                          }
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                                tail: ")"
                              }
                            }
                            child {
                              kind: THEN
                              text: " "
                              child {
                                kind: BLOCK
                                child {
                                  kind: CONTINUE
                                  text: "continue;"
                                }
                              }
                            }
                            tail: "\n\t\t\t\t\t\t\t"
                          }
                          child {
                            kind: EXPR_STMT
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "errorHandler"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"305\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                    tail: ", "
                                  }
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "leg"
                                      }
                                    }
                                    tail: ",\n\t\t\t\t\t\t\t\t\t"
                                  }
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"value1date must be after trade date.\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                    tail: ",\n\t\t\t\t\t\t\t\t\t"
                                  }
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "name"
                                      }
                                    }
                                    tail: ", "
                                  }
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          text: "ToToken"
                                          tail: " "
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: NAME
                                                text: "value1Date"
                                              }
                                            }
                                            tail: ")"
                                          }
                                        }
                                      }
                                    }
                                    tail: ")"
                                  }
                                }
                              }
                              tail: ";"
                            }
                            tail: "\n"
                          }
                          child {
                            kind: EXPR_STMT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "result"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "false"
                                literal {
                                  type: boolean_type
                                }
                              }
                              tail: ";"
                            }
                            tail: "\n}"
                          }
                        }
                      }
                      tail: "\n"
                    }
                    child {
                      kind: IF
                      text: "if "
                      child {
                        kind: CONDITION
                        text: "("
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "value2Date"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "!="
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "null"
                            literal {
                              type: null_type
                            }
                          }
                          tail: ")"
                        }
                      }
                      child {
                        kind: THEN
                        text: " "
                        child {
                          kind: BLOCK
                          text: "{\n\t\t\t\t\t\t\t"
                          child {
                            kind: IF
                            text: "if "
                            child {
                              kind: CONDITION
                              text: "("
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "Less"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "tradeDate"
                                                }
                                              }
                                              tail: ")"
                                            }
                                          }
                                        }
                                      }
                                      tail: ", "
                                    }
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: CALL
                                          child {
                                            kind: NAME
                                            text: "ToDate"
                                            tail: " "
                                          }
                                          child {
                                            kind: ARGUMENT_LIST
                                            text: "("
                                            child {
                                              kind: ARGUMENT
                                              child {
                                                kind: EXPR
                                                child {
                                                  kind: NAME
                                                  text: "value2Date"
                                                }
                                              }
                                              tail: ")"
                                            }
                                          }
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                                tail: ")"
                              }
                            }
                            child {
                              kind: THEN
                              text: " "
                              child {
                                kind: BLOCK
                                child {
                                  kind: CONTINUE
                                  text: "continue;"
                                }
                              }
                            }
                            tail: "\n\t\t\t\t\t\t\t"
                          }
                          child {
                            kind: EXPR_STMT
                            child {
                              kind: EXPR
                              child {
                                kind: CALL
                                child {
                                  kind: NAME
                                  text: "errorHandler"
                                  tail: " "
                                }
                                child {
                                  kind: ARGUMENT_LIST
                                  text: "("
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"305\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                    tail: ", "
                                  }
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "leg"
                                      }
                                    }
                                    tail: ",\n\t\t\t\t\t\t\t\t\t"
                                  }
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: LITERAL
                                        text: "\"value2date must be after trade date.\""
                                        literal {
                                          type: string_type
                                        }
                                      }
                                    }
                                    tail: ",\n\t\t\t\t\t\t\t\t\t"
                                  }
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "name"
                                      }
                                    }
                                    tail: ", "
                                  }
                                  child {
                                    kind: ARGUMENT
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: CALL
                                        child {
                                          kind: NAME
                                          text: "ToToken"
                                          tail: " "
                                        }
                                        child {
                                          kind: ARGUMENT_LIST
                                          text: "("
                                          child {
                                            kind: ARGUMENT
                                            child {
                                              kind: EXPR
                                              child {
                                                kind: NAME
                                                text: "value2Date"
                                              }
                                            }
                                            tail: ")"
                                          }
                                        }
                                      }
                                    }
                                    tail: ")"
                                  }
                                }
                              }
                              tail: ";"
                            }
                            tail: "\n"
                          }
                          child {
                            kind: EXPR_STMT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "result"
                                tail: " "
                              }
                              child {
                                kind: OPERATOR
                                text: "="
                                tail: " "
                              }
                              child {
                                kind: LITERAL
                                text: "false"
                                literal {
                                  type: boolean_type
                                }
                              }
                              tail: ";"
                            }
                            tail: "\n}"
                          }
                        }
                      }
                      tail: "\n}"
                    }
                  }
                }
                tail: "\n}"
              }
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule41"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule41"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXBarrier\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule41"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxBarrier\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule41"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxBarrier\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule41"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "rate"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"triggerRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "rate"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsPositive"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "rate"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"The trigger rate must be positive\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "rate"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule42"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule42"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXAverageRateOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule42"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxAverageRateOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule42"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxAverageRateOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule42"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlNodeList"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "nodes"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Paths"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"averageRateObservationDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"observationDate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "int"
                }
                tail: "\t\t\t"
              }
              child {
                kind: NAME
                text: "limit"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "nodes"
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: NAME
                      text: "Count"
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "Date"
                    tail: " "
                  }
                  child {
                    kind: INDEX
                    text: "[]"
                  }
                }
                tail: "\t\t"
              }
              child {
                kind: NAME
                text: "dates"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "new"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "Date"
                      tail: " "
                    }
                    child {
                      kind: INDEX
                      text: "["
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "limit"
                        }
                        tail: "]"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: FOR
            text: "for "
            child {
              kind: CONTROL
              text: "("
              child {
                kind: INIT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "int"
                    }
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "count"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                  tail: ";"
                }
                tail: " "
              }
              child {
                kind: CONDITION
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "count"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "limit"
                  }
                  tail: ";"
                }
                tail: " "
              }
              child {
                kind: INCR
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "count"
                  }
                }
                tail: ")"
              }
              tail: "\n\t\t\t\t\t"
            }
            child {
              kind: BLOCK
              child {
                kind: EXPR_STMT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "dates"
                      tail: " "
                    }
                    child {
                      kind: INDEX
                      text: "["
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "count"
                        }
                        tail: "]"
                      }
                    }
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      text: "ToDate"
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodes"
                              tail: " "
                            }
                            child {
                              kind: INDEX
                              text: "["
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  text: "count"
                                }
                                tail: "]"
                              }
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                  tail: ";"
                }
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: FOR
            text: "for "
            child {
              kind: CONTROL
              text: "("
              child {
                kind: INIT
                child {
                  kind: DECL
                  child {
                    kind: TYPE
                    child {
                      kind: NAME
                      text: "int"
                    }
                    tail: " "
                  }
                  child {
                    kind: NAME
                    text: "outer"
                    tail: " "
                  }
                  child {
                    kind: INIT
                    text: "= "
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "0"
                        literal {
                        }
                      }
                    }
                  }
                  tail: ";"
                }
                tail: " "
              }
              child {
                kind: CONDITION
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "outer"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "&lt;"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "("
                  }
                  child {
                    kind: NAME
                    text: "limit"
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "-"
                    tail: " "
                  }
                  child {
                    kind: LITERAL
                    text: "1"
                    literal {
                    }
                  }
                  child {
                    kind: OPERATOR
                    text: ")"
                  }
                  tail: ";"
                }
                tail: " "
              }
              child {
                kind: INCR
                child {
                  kind: EXPR
                  child {
                    kind: OPERATOR
                    text: "++"
                  }
                  child {
                    kind: NAME
                    text: "outer"
                  }
                }
                tail: ")"
              }
              tail: " "
            }
            child {
              kind: BLOCK
              text: "{\n\t\t\t\t\t"
              child {
                kind: FOR
                text: "for "
                child {
                  kind: CONTROL
                  text: "("
                  child {
                    kind: INIT
                    child {
                      kind: DECL
                      child {
                        kind: TYPE
                        child {
                          kind: NAME
                          text: "int"
                        }
                        tail: " "
                      }
                      child {
                        kind: NAME
                        text: "inner"
                        tail: " "
                      }
                      child {
                        kind: INIT
                        text: "= "
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "outer"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "+"
                            tail: " "
                          }
                          child {
                            kind: LITERAL
                            text: "1"
                            literal {
                            }
                          }
                        }
                      }
                      tail: ";"
                    }
                    tail: " "
                  }
                  child {
                    kind: CONDITION
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "inner"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "&lt;"
                        tail: " "
                      }
                      child {
                        kind: NAME
                        text: "limit"
                      }
                      tail: ";"
                    }
                    tail: " "
                  }
                  child {
                    kind: INCR
                    child {
                      kind: EXPR
                      child {
                        kind: OPERATOR
                        text: "++"
                      }
                      child {
                        kind: NAME
                        text: "inner"
                      }
                    }
                    tail: ")"
                  }
                  tail: " "
                }
                child {
                  kind: BLOCK
                  text: "{\n\t\t\t\t\t\t"
                  child {
                    kind: IF
                    text: "if "
                    child {
                      kind: CONDITION
                      text: "("
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            text: "Equal"
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "dates"
                                    tail: " "
                                  }
                                  child {
                                    kind: INDEX
                                    text: "["
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "outer"
                                      }
                                      tail: "]"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: NAME
                                  child {
                                    kind: NAME
                                    text: "dates"
                                    tail: " "
                                  }
                                  child {
                                    kind: INDEX
                                    text: "["
                                    child {
                                      kind: EXPR
                                      child {
                                        kind: NAME
                                        text: "inner"
                                      }
                                      tail: "]"
                                    }
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                    child {
                      kind: THEN
                      text: "\n\t\t\t\t\t\t\t"
                      child {
                        kind: BLOCK
                        child {
                          kind: EXPR_STMT
                          child {
                            kind: EXPR
                            child {
                              kind: CALL
                              child {
                                kind: NAME
                                text: "errorHandler"
                                tail: " "
                              }
                              child {
                                kind: ARGUMENT_LIST
                                text: "("
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"305\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                  tail: ", "
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      child {
                                        kind: NAME
                                        text: "nodes"
                                        tail: " "
                                      }
                                      child {
                                        kind: INDEX
                                        text: "["
                                        child {
                                          kind: EXPR
                                          child {
                                            kind: NAME
                                            text: "inner"
                                          }
                                          tail: "]"
                                        }
                                      }
                                    }
                                  }
                                  tail: ",\n\t\t\t\t\t\t\t\t\t"
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: LITERAL
                                      text: "\"Duplicate observation date\""
                                      literal {
                                        type: string_type
                                      }
                                    }
                                  }
                                  tail: ",\n\t\t\t\t\t\t\t\t\t"
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: NAME
                                      text: "name"
                                    }
                                  }
                                  tail: ", "
                                }
                                child {
                                  kind: ARGUMENT
                                  child {
                                    kind: EXPR
                                    child {
                                      kind: CALL
                                      child {
                                        kind: NAME
                                        text: "ToToken"
                                        tail: " "
                                      }
                                      child {
                                        kind: ARGUMENT_LIST
                                        text: "("
                                        child {
                                          kind: ARGUMENT
                                          child {
                                            kind: EXPR
                                            child {
                                              kind: NAME
                                              child {
                                                kind: NAME
                                                text: "nodes"
                                                tail: " "
                                              }
                                              child {
                                                kind: INDEX
                                                text: "["
                                                child {
                                                  kind: EXPR
                                                  child {
                                                    kind: NAME
                                                    text: "inner"
                                                  }
                                                  tail: "]"
                                                }
                                              }
                                            }
                                          }
                                          tail: ")"
                                        }
                                      }
                                    }
                                  }
                                  tail: ")"
                                }
                              }
                            }
                            tail: ";"
                          }
                        }
                      }
                    }
                    tail: "\n\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: EXPR_STMT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "result"
                        tail: " "
                      }
                      child {
                        kind: OPERATOR
                        text: "="
                        tail: " "
                      }
                      child {
                        kind: LITERAL
                        text: "false"
                        literal {
                          type: boolean_type
                        }
                      }
                      tail: ";"
                    }
                    tail: "\n}"
                  }
                }
                tail: "\n}"
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "dates"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "null"
                literal {
                  type: null_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule43"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule43"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXAverageRateOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule43"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxAverageRateOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule43"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxAverageRateOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule43"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy1"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"putCurrencyAmount\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "ccy2"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"callCurrencyAmount\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy1"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "ccy2"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "!"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "IsSameCurrency"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy1"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "ccy2"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Put and call currencies must be different.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule44"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule44"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXAverageRateOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule44"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxAverageRateOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule44"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxAverageRateOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule44"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "buyer"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"buyerPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "seller"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"sellerPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "payer"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxOptionPremium\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"payerPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "receiver"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxOptionPremium\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"receiverPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "buyer"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "seller"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "payer"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "receiver"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "buyer"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "payer"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "&amp;&amp;"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "seller"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "receiver"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Premium payer and receiver don\'t match with option buyer and seller.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule45"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                  tail: "\n\t\t\t\t\t  "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule45"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FXDigitalOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "&amp;"
                  tail: " "
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule45"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"FxDigitalOption\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule45"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxDigitalOption\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule45"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "buyer"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"buyerPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "seller"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"sellerPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "payer"
                tail: "\t "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxOptionPremium\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"payerPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "receiver"
                tail: " "
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"fxOptionPremium\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"receiverPartyReference\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "buyer"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "seller"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "payer"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "receiver"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "buyer"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "payer"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "&amp;&amp;"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equal"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "seller"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "receiver"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetAttribute"
                            }
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"href\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Premium payer and receiver don\'t match with option buyer and seller.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "null"
                        literal {
                          type: null_type
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule46"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule46"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"SideRates\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule46"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"sideRates\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule46"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "basis"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency1SideRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"sideRateBasis\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "basis"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ToToken"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "basis"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "."
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ToUpper"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "()"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "."
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equals"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "\"CURRENCY1PERBASECURRENCY\""
                          literal {
                            type: string_type
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ToToken"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "basis"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "."
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ToUpper"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "()"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "."
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equals"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "\"BASECURRENCYPERCURRENCY1\""
                          literal {
                            type: string_type
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Side rate basis for currency1 should not be expressed in terms of currency2.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "basis"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule47"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "NodeIndex"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "nodeIndex"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: IF
        text: "if "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: NAME
              child {
                kind: NAME
                text: "nodeIndex"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "HasTypeInformation"
              }
            }
            tail: ")"
          }
        }
        child {
          kind: THEN
          text: "\n\t\t\t\t"
          child {
            kind: BLOCK
            child {
              kind: RETURN
              text: "return "
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Rule47"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "name"
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: CALL
                          child {
                            kind: NAME
                            child {
                              kind: NAME
                              text: "nodeIndex"
                            }
                            child {
                              kind: OPERATOR
                              text: "."
                            }
                            child {
                              kind: NAME
                              text: "GetElementsByType"
                            }
                            tail: " "
                          }
                          child {
                            kind: ARGUMENT_LIST
                            text: "("
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: CALL
                                  child {
                                    kind: NAME
                                    text: "DetermineNamespace"
                                    tail: " "
                                  }
                                  child {
                                    kind: ARGUMENT_LIST
                                    text: "("
                                    child {
                                      kind: ARGUMENT
                                      child {
                                        kind: EXPR
                                        child {
                                          kind: NAME
                                          text: "nodeIndex"
                                        }
                                      }
                                      tail: ")"
                                    }
                                  }
                                }
                              }
                              tail: ", "
                            }
                            child {
                              kind: ARGUMENT
                              child {
                                kind: EXPR
                                child {
                                  kind: LITERAL
                                  text: "\"SideRates\""
                                  literal {
                                    type: string_type
                                  }
                                }
                              }
                              tail: ")"
                            }
                          }
                        }
                      }
                      tail: ", "
                    }
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "errorHandler"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                }
                tail: ";"
              }
            }
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
            tail: "\n\t\t\t\t\t  "
          }
          child {
            kind: CALL
            child {
              kind: NAME
              text: "Rule47"
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "name"
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "nodeIndex"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "GetElementsByName"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"sideRates\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
                tail: ", "
              }
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "errorHandler"
                  }
                }
                tail: ")"
              }
            }
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        text: "bool"
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "Rule47"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "string"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "name"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "XmlNodeList"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "list"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ValidationErrorHandler"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "errorHandler"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "bool"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "result"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: LITERAL
                text: "true"
                literal {
                  type: boolean_type
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: FOREACH
        text: "foreach "
        child {
          kind: CONTROL
          text: "("
          child {
            kind: INIT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: " "
              }
              child {
                kind: NAME
                text: "context"
                tail: " "
              }
              child {
                kind: RANGE
                text: "in "
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "list"
                  }
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "XmlElement"
                }
                tail: "\t"
              }
              child {
                kind: NAME
                text: "basis"
                tail: "\t"
              }
              child {
                kind: INIT
                text: "= "
                child {
                  kind: EXPR
                  child {
                    kind: CALL
                    child {
                      kind: NAME
                      child {
                        kind: NAME
                        text: "XPath"
                      }
                      child {
                        kind: OPERATOR
                        text: "."
                      }
                      child {
                        kind: NAME
                        text: "Path"
                      }
                      tail: " "
                    }
                    child {
                      kind: ARGUMENT_LIST
                      text: "("
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "context"
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"currency2SideRate\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ", "
                      }
                      child {
                        kind: ARGUMENT
                        child {
                          kind: EXPR
                          child {
                            kind: LITERAL
                            text: "\"sideRateBasis\""
                            literal {
                              type: string_type
                            }
                          }
                        }
                        tail: ")"
                      }
                    }
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "("
                }
                child {
                  kind: NAME
                  text: "basis"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                child {
                  kind: OPERATOR
                  text: ")"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ToToken"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "basis"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "."
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ToUpper"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "()"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "."
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equals"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "\"CURRENCY2PERBASECURRENCY\""
                          literal {
                            type: string_type
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "||"
                  tail: "\n\t\t\t\t\t"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ToToken"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "basis"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                child {
                  kind: OPERATOR
                  text: "."
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "ToUpper"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "()"
                  }
                }
                child {
                  kind: OPERATOR
                  text: "."
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    text: "Equals"
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: LITERAL
                          text: "\"BASECURRENCYPERCURRENCY2\""
                          literal {
                            type: string_type
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                child {
                  kind: CONTINUE
                  text: "continue;"
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "errorHandler"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "("
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"305\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "context"
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: LITERAL
                        text: "\"Side rate basis for currency2 should not be expressed in terms of currency1.\""
                        literal {
                          type: string_type
                        }
                      }
                    }
                    tail: ",\n\t\t\t\t\t\t"
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: NAME
                        text: "name"
                      }
                    }
                    tail: ", "
                  }
                  child {
                    kind: ARGUMENT
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "ToToken"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "basis"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                    }
                    tail: ")"
                  }
                }
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: EXPR_STMT
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "result"
                tail: " "
              }
              child {
                kind: OPERATOR
                text: "="
                tail: " "
              }
              child {
                kind: LITERAL
                text: "false"
                literal {
                  type: boolean_type
                }
              }
              tail: ";"
            }
            tail: "\n\t\t\t}"
          }
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "result"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n\t\t}"
      }
    }
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "// --------------------------------------------------------------------"
    tail: "\n\n\t\t"
  }
  child {
    kind: COMMENT
    text: "/// &lt;summary&gt;"
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "/// Generates a set of dates according to schedule defined by a start date,"
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "/// an end date, an interval, roll convention and a calendar."
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "/// &lt;/summary&gt;"
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "/// &lt;param name=\"start\"&gt;The start date.&lt;/param&gt;"
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "/// &lt;param name=\"end\"&gt;The end date.&lt;/param&gt;"
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "/// &lt;param name=\"frequency\"&gt;The frequency of the schedule (e.g. 6M).&lt;/param&gt;"
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "/// &lt;param name=\"roll\"&gt;The date roll convention or &lt;c&gt;null&lt;/c&gt;.&lt;/param&gt;"
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "/// &lt;param name=\"calendar\"&gt;The holiday calendar or &lt;c&gt;null&lt;/c&gt;.&lt;/param&gt;"
    tail: "\n\t\t"
  }
  child {
    kind: COMMENT
    text: "/// &lt;returns&gt;An array of calculated and adjusted dates.&lt;/returns&gt;"
    tail: "\n\t\t"
  }
  child {
    kind: FUNCTION
    child {
      kind: SPECIFIER
      text: "private"
      tail: " "
    }
    child {
      kind: SPECIFIER
      text: "static"
      tail: " "
    }
    child {
      kind: TYPE
      child {
        kind: NAME
        child {
          kind: NAME
          text: "Date"
          tail: " "
        }
        child {
          kind: INDEX
          text: "[]"
        }
      }
      tail: " "
    }
    child {
      kind: NAME
      text: "GenerateSchedule"
      tail: " "
    }
    child {
      kind: PARAMETER_LIST
      text: "("
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "Date"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "start"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "Date"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "end"
          }
        }
        tail: ",\n\t\t\t"
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "Interval"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "frequency"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "DateRoll"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "roll"
          }
        }
        tail: ", "
      }
      child {
        kind: PARAMETER
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "Calendar"
            }
            tail: " "
          }
          child {
            kind: NAME
            text: "calendar"
          }
        }
        tail: ")"
      }
      tail: "\n\t\t"
    }
    child {
      kind: BLOCK
      text: "{\n\t\t\t"
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "Date"
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "current"
            tail: " "
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: NAME
                text: "start"
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              text: "ArrayList"
            }
            tail: "\t"
          }
          child {
            kind: NAME
            text: "found"
            tail: "\t"
          }
          child {
            kind: INIT
            text: "= "
            child {
              kind: EXPR
              child {
                kind: OPERATOR
                text: "new"
                tail: " "
              }
              child {
                kind: CALL
                child {
                  kind: NAME
                  text: "ArrayList"
                  tail: " "
                }
                child {
                  kind: ARGUMENT_LIST
                  text: "()"
                }
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: DECL_STMT
        child {
          kind: DECL
          child {
            kind: TYPE
            child {
              kind: NAME
              child {
                kind: NAME
                text: "Date"
                tail: " "
              }
              child {
                kind: INDEX
                text: "[]"
              }
            }
            tail: "\t\t"
          }
          child {
            kind: NAME
            text: "dates"
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: WHILE
        text: "while "
        child {
          kind: CONDITION
          text: "("
          child {
            kind: EXPR
            child {
              kind: CALL
              child {
                kind: NAME
                text: "Less"
                tail: " "
              }
              child {
                kind: ARGUMENT_LIST
                text: "("
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "current"
                    }
                  }
                  tail: ", "
                }
                child {
                  kind: ARGUMENT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "end"
                    }
                  }
                  tail: ")"
                }
              }
            }
            tail: ")"
          }
          tail: " "
        }
        child {
          kind: BLOCK
          text: "{\n\t\t\t\t"
          child {
            kind: DECL_STMT
            child {
              kind: DECL
              child {
                kind: TYPE
                child {
                  kind: NAME
                  text: "Date"
                }
                tail: "\t\t"
              }
              child {
                kind: NAME
                text: "adjusted"
              }
              tail: ";"
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  text: "roll"
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "!="
                  tail: " "
                }
                child {
                  kind: LITERAL
                  text: "null"
                  literal {
                    type: null_type
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "adjusted"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "="
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "roll"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "Adjust"
                        }
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "calendar"
                            }
                          }
                          tail: ", "
                        }
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "current"
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
              }
              tail: "\n\t\t\t\t"
            }
            child {
              kind: ELSE
              text: "else\n\t\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "adjusted"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "="
                      tail: " "
                    }
                    child {
                      kind: NAME
                      text: "current"
                    }
                    tail: ";"
                  }
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: OPERATOR
                  text: "!"
                }
                child {
                  kind: CALL
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "found"
                    }
                    child {
                      kind: OPERATOR
                      text: "."
                    }
                    child {
                      kind: NAME
                      text: "Contains"
                    }
                    tail: " "
                  }
                  child {
                    kind: ARGUMENT_LIST
                    text: "("
                    child {
                      kind: ARGUMENT
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          text: "adjusted"
                        }
                      }
                      tail: ")"
                    }
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: "\n\t\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "found"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "Add"
                        }
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "adjusted"
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
              }
            }
            tail: "\n\n\t\t\t\t"
          }
          child {
            kind: IF
            text: "if "
            child {
              kind: CONDITION
              text: "("
              child {
                kind: EXPR
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "frequency"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "Period"
                  }
                  tail: " "
                }
                child {
                  kind: OPERATOR
                  text: "=="
                  tail: " "
                }
                child {
                  kind: NAME
                  child {
                    kind: NAME
                    text: "Period"
                  }
                  child {
                    kind: OPERATOR
                    text: "."
                  }
                  child {
                    kind: NAME
                    text: "TERM"
                  }
                }
                tail: ")"
              }
            }
            child {
              kind: THEN
              text: " "
              child {
                kind: BLOCK
                text: "{\n\t\t\t\t\t"
                child {
                  kind: IF
                  text: "if "
                  child {
                    kind: CONDITION
                    text: "("
                    child {
                      kind: EXPR
                      child {
                        kind: CALL
                        child {
                          kind: NAME
                          text: "Equal"
                          tail: " "
                        }
                        child {
                          kind: ARGUMENT_LIST
                          text: "("
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "current"
                              }
                            }
                            tail: ", "
                          }
                          child {
                            kind: ARGUMENT
                            child {
                              kind: EXPR
                              child {
                                kind: NAME
                                text: "start"
                              }
                            }
                            tail: ")"
                          }
                        }
                      }
                      tail: ")"
                    }
                  }
                  child {
                    kind: THEN
                    text: "\n\t\t\t\t\t\t"
                    child {
                      kind: BLOCK
                      child {
                        kind: EXPR_STMT
                        child {
                          kind: EXPR
                          child {
                            kind: NAME
                            text: "current"
                            tail: " "
                          }
                          child {
                            kind: OPERATOR
                            text: "="
                            tail: " "
                          }
                          child {
                            kind: NAME
                            text: "end"
                          }
                          tail: ";"
                        }
                      }
                    }
                    tail: "\n\t\t\t\t\t"
                  }
                  child {
                    kind: ELSE
                    text: "else\n\t\t\t\t\t\t"
                    child {
                      kind: BLOCK
                      child {
                        kind: BREAK
                        text: "break;"
                      }
                    }
                  }
                  tail: "\n\t\t\t\t}"
                }
              }
              tail: "\n"
            }
            child {
              kind: ELSE
              text: "else\n\t\t\t\t\t"
              child {
                kind: BLOCK
                child {
                  kind: EXPR_STMT
                  child {
                    kind: EXPR
                    child {
                      kind: NAME
                      text: "current"
                      tail: " "
                    }
                    child {
                      kind: OPERATOR
                      text: "="
                      tail: " "
                    }
                    child {
                      kind: CALL
                      child {
                        kind: NAME
                        child {
                          kind: NAME
                          text: "current"
                        }
                        child {
                          kind: OPERATOR
                          text: "."
                        }
                        child {
                          kind: NAME
                          text: "Plus"
                        }
                        tail: " "
                      }
                      child {
                        kind: ARGUMENT_LIST
                        text: "("
                        child {
                          kind: ARGUMENT
                          child {
                            kind: EXPR
                            child {
                              kind: NAME
                              text: "frequency"
                            }
                          }
                          tail: ")"
                        }
                      }
                    }
                    tail: ";"
                  }
                }
              }
            }
            tail: "\n}"
          }
        }
        tail: "\n\n\t\t\t"
      }
      child {
        kind: EXPR_STMT
        child {
          kind: EXPR
          child {
            kind: CALL
            child {
              kind: NAME
              child {
                kind: NAME
                text: "found"
              }
              child {
                kind: OPERATOR
                text: "."
              }
              child {
                kind: NAME
                text: "CopyTo"
              }
              tail: " "
            }
            child {
              kind: ARGUMENT_LIST
              text: "("
              child {
                kind: ARGUMENT
                child {
                  kind: EXPR
                  child {
                    kind: NAME
                    text: "dates"
                    tail: "  "
                  }
                  child {
                    kind: OPERATOR
                    text: "="
                    tail: " "
                  }
                  child {
                    kind: OPERATOR
                    text: "new"
                    tail: " "
                  }
                  child {
                    kind: NAME
                    child {
                      kind: NAME
                      text: "Date"
                      tail: " "
                    }
                    child {
                      kind: INDEX
                      text: "["
                      child {
                        kind: EXPR
                        child {
                          kind: NAME
                          child {
                            kind: NAME
                            text: "found"
                          }
                          child {
                            kind: OPERATOR
                            text: "."
                          }
                          child {
                            kind: NAME
                            text: "Count"
                          }
                        }
                        tail: "]"
                      }
                    }
                  }
                }
                tail: ")"
              }
            }
          }
          tail: ";"
        }
        tail: "\n\t\t\t"
      }
      child {
        kind: RETURN
        text: "return "
        child {
          kind: EXPR
          child {
            kind: OPERATOR
            text: "("
          }
          child {
            kind: NAME
            text: "dates"
          }
          child {
            kind: OPERATOR
            text: ")"
          }
          tail: ";"
        }
        tail: "\n}"
      }
    }
    tail: "\n}\n}\n"
  }
  unit {
    filename: "test.cs"
    revision: "0.9.5"
    language: CSHARP
  }
}
